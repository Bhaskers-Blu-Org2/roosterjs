{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./packages/roosterjs-editor-dom/lib/index.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/contains.ts","webpack:///./packages/roosterjs-editor-dom/lib/selection/Position.ts","webpack:///./packages/roosterjs-editor-core/lib/index.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/getTagOfNode.ts","webpack:///./packages/roosterjs-editor-api/lib/utils/execCommand.ts","webpack:///./packages/roosterjs-editor-api/lib/index.ts","webpack:///./packages/roosterjs-editor-dom/lib/selection/createRange.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/getLeafSibling.ts","webpack:///./packages/roosterjs-html-sanitizer/lib/index.ts","webpack:///./packages/roosterjs-editor-dom/lib/blockElements/getBlockElementAtNode.ts","webpack:///./packages/roosterjs-editor-dom/lib/inlineElements/NodeInlineElement.ts","webpack:///./packages/roosterjs-editor-api/lib/utils/applyInlineStyle.ts","webpack:///./packages/roosterjs-editor-dom/lib/inlineElements/getInlineElementAtNode.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/isNodeAfter.ts","webpack:///./packages/roosterjs-editor-dom/lib/deprecated/positionUtils.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/splitParentNode.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/wrap.ts","webpack:///./packages/roosterjs-editor-dom/lib/inlineElements/PartialInlineElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/inlineElements/getInlineElementBeforeAfter.ts","webpack:///./packages/roosterjs-editor-dom/lib/inlineElements/getNextPreviousInlineElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/collapseNodes.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/isBlockElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/findClosestElementAncestor.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/applyTextStyle.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/shouldSkipNode.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/getComputedStyles.ts","webpack:///./packages/roosterjs-editor-core/lib/eventApi/cacheGetEventData.ts","webpack:///./packages/roosterjs-editor-api/lib/format/replaceWithNode.ts","webpack:///./packages/roosterjs-editor-api/lib/utils/processList.ts","webpack:///./publish/samplesite/scripts/currentEditor.ts","webpack:///./packages/roosterjs-editor-dom/lib/blockElements/NodeBlockElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/blockElements/StartEndBlockElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/isVoidHtmlElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/fromHtml.ts","webpack:///./packages/roosterjs-editor-dom/lib/inlineElements/ImageInlineElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/inlineElements/LinkInlineElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/inlineElements/getFirstLastInlineElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/getLeafNode.ts","webpack:///./packages/roosterjs-editor-dom/lib/blockElements/getFirstLastBlockElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/contentTraverser/ContentTraverser.ts","webpack:///./packages/roosterjs-editor-dom/lib/inlineElements/EmptyInlineElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/matchWhiteSpaces.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/isNodeEmpty.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/queryElements.ts","webpack:///./packages/roosterjs-html-sanitizer/lib/utils/cloneObject.ts","webpack:///./packages/roosterjs-html-sanitizer/lib/utils/getInheritableStyles.ts","webpack:///./packages/roosterjs-html-sanitizer/lib/utils/htmlToDom.ts","webpack:///./packages/roosterjs-editor-api/lib/utils/collapseSelectedBlocks.ts","webpack:///./packages/roosterjs-editor-api/lib/format/setBackgroundColor.ts","webpack:///./packages/roosterjs-editor-api/lib/format/setFontName.ts","webpack:///./packages/roosterjs-editor-api/lib/format/setFontSize.ts","webpack:///./packages/roosterjs-editor-api/lib/format/setTextColor.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleBold.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleItalic.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleUnderline.ts","webpack:///./packages/roosterjs-editor-core/lib/editor/CorePlugin.ts","webpack:///./packages/roosterjs-editor-core/lib/coreAPI/hasFocus.ts","webpack:///./packages/roosterjs-editor-core/lib/undo/Undo.ts","webpack:///./packages/roosterjs-editor-core/lib/undo/UndoSnapshots.ts","webpack:///./packages/roosterjs-editor-core/lib/eventApi/clearEventDataCache.ts","webpack:///./packages/roosterjs-editor-api/lib/table/formatTable.ts","webpack:///./packages/roosterjs-editor-api/lib/utils/toggleTagCore.ts","webpack:///./publish/samplesite/scripts/updateSampleCode.ts","webpack:///./packages/roosterjs-editor-plugins/lib/index.ts","webpack:///./packages/roosterjs-editor-plugins/lib/ContentEdit/ContentEditFeatures.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/textToHtml.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/CustomData.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/LevelLists.ts","webpack:///./packages/roosterjs-plugin-image-resize/lib/index.ts","webpack:///./publish/samplesite/scripts/sample.ts","webpack:///./publish/samplesite/scripts/initFormatBar.ts","webpack:///./packages/roosterjs-editor-api/lib/format/changeFontSize.ts","webpack:///./packages/roosterjs-editor-dom/lib/contentTraverser/BodyScoper.ts","webpack:///./packages/roosterjs-editor-dom/lib/contentTraverser/SelectionBlockScoper.ts","webpack:///./packages/roosterjs-editor-dom/lib/contentTraverser/SelectionScoper.ts","webpack:///./packages/roosterjs-editor-dom/lib/contentTraverser/PositionContentSearcher.ts","webpack:///./packages/roosterjs-editor-dom/lib/inlineElements/TextInlineElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/Browser.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/applyFormat.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/changeElementTag.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/matchLink.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/unwrap.ts","webpack:///./packages/roosterjs-editor-dom/lib/table/VTable.ts","webpack:///./packages/roosterjs-editor-dom/lib/selection/getPositionRect.ts","webpack:///./packages/roosterjs-editor-dom/lib/selection/isPositionAtBeginningOf.ts","webpack:///./packages/roosterjs-editor-dom/lib/selection/getSelectionPath.ts","webpack:///./packages/roosterjs-editor-dom/lib/deprecated/isTextualInlineElement.ts","webpack:///./packages/roosterjs-editor-dom/lib/deprecated/wrapAll.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/convertInlineCss.ts","webpack:///./packages/roosterjs-html-sanitizer/lib/sanitizer/HtmlSanitizer.ts","webpack:///./packages/roosterjs-html-sanitizer/lib/utils/getAllowedValues.ts","webpack:///./packages/roosterjs-editor-dom/lib/utils/sanitizeHtml.ts","webpack:///./packages/roosterjs-editor-dom/lib/deprecated/selectionMarker.ts","webpack:///./packages/roosterjs-editor-api/lib/format/clearBlockFormat.ts","webpack:///./packages/roosterjs-editor-api/lib/format/clearFormat.ts","webpack:///./packages/roosterjs-editor-api/lib/format/createLink.ts","webpack:///./packages/roosterjs-editor-api/lib/format/getFormatState.ts","webpack:///./packages/roosterjs-editor-core/lib/editor/Editor.ts","webpack:///./packages/roosterjs-editor-core/lib/editor/createEditorCore.ts","webpack:///./packages/roosterjs-editor-core/lib/coreAPI/attachDomEvent.ts","webpack:///./packages/roosterjs-editor-core/lib/coreAPI/editWithUndo.ts","webpack:///./packages/roosterjs-editor-core/lib/coreAPI/focus.ts","webpack:///./packages/roosterjs-editor-core/lib/coreAPI/getCustomData.ts","webpack:///./packages/roosterjs-editor-core/lib/coreAPI/getSelectionRange.ts","webpack:///./packages/roosterjs-editor-core/lib/coreAPI/insertNode.ts","webpack:///./packages/roosterjs-editor-core/lib/coreAPI/select.ts","webpack:///./packages/roosterjs-editor-core/lib/coreAPI/triggerEvent.ts","webpack:///./packages/roosterjs-editor-core/lib/deprecated/BrowserData.ts","webpack:///./packages/roosterjs-editor-core/lib/eventApi/cacheGetContentSearcher.ts","webpack:///./packages/roosterjs-editor-core/lib/eventApi/cacheGetElementAtCursor.ts","webpack:///./packages/roosterjs-editor-core/lib/deprecated/snapshotUtils.ts","webpack:///./packages/roosterjs-editor-api/lib/format/insertImage.ts","webpack:///./packages/roosterjs-editor-api/lib/table/insertTable.ts","webpack:///./packages/roosterjs-editor-api/lib/table/editTable.ts","webpack:///./packages/roosterjs-editor-api/lib/format/removeLink.ts","webpack:///./packages/roosterjs-editor-api/lib/format/setAlignment.ts","webpack:///./packages/roosterjs-editor-api/lib/format/setDirection.ts","webpack:///./packages/roosterjs-editor-api/lib/format/setImageAltText.ts","webpack:///./packages/roosterjs-editor-api/lib/format/setIndentation.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleBullet.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleNumbering.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleBlockQuote.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleCodeBlock.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleStrikethrough.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleSubscript.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleSuperscript.ts","webpack:///./packages/roosterjs-editor-api/lib/format/toggleHeader.ts","webpack:///./packages/roosterjs-editor-api/lib/deprecated/cacheGetListState.ts","webpack:///./packages/roosterjs-editor-api/lib/deprecated/execFormatWithUndo.ts","webpack:///./packages/roosterjs-editor-api/lib/deprecated/CursorData.ts","webpack:///./packages/roosterjs-editor-api/lib/deprecated/queryNodesWithSelection.ts","webpack:///./packages/roosterjs-editor-api/lib/deprecated/replaceTextBeforeCursorWithNode.ts","webpack:///./packages/roosterjs-editor-api/lib/deprecated/replaceRangeWithNode.ts","webpack:///./packages/roosterjs-editor-api/lib/deprecated/getNodeAtCursor.ts","webpack:///./packages/roosterjs-editor-plugins/lib/DefaultShortcut/DefaultShortcut.ts","webpack:///./packages/roosterjs-editor-plugins/lib/HyperLink/HyperLink.ts","webpack:///./packages/roosterjs-editor-plugins/lib/ContentEdit/ContentEdit.ts","webpack:///./packages/roosterjs-editor-plugins/lib/ContentEdit/features/autoLinkFeatures.ts","webpack:///./packages/roosterjs-editor-plugins/lib/ContentEdit/features/shortcutFeatures.ts","webpack:///./packages/roosterjs-editor-plugins/lib/ContentEdit/features/tableFeatures.ts","webpack:///./packages/roosterjs-editor-plugins/lib/ContentEdit/features/listFeatures.ts","webpack:///./packages/roosterjs-editor-plugins/lib/ContentEdit/features/quoteFeatures.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/Paste.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/buildClipboardData.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/fragmentHandler.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/excelConverter/convertPastedContentFromExcel.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/convertPastedContentFromWord.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/wordConverter.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/WordConverterArguments.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/converterUtils.ts","webpack:///./packages/roosterjs-editor-plugins/lib/Watermark/Watermark.ts","webpack:///./packages/roosterjs-editor-plugins/lib/TableResize/TableResize.ts","webpack:///./packages/roosterjs-plugin-image-resize/lib/ImageResize.ts","webpack:///./publish/samplesite/scripts/initOptions.ts","webpack:///./publish/samplesite/scripts/plugins/ShowCursorPosition.ts","webpack:///./publish/samplesite/scripts/plugins/ShowFormatState.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","NodeBlockElement_1","NodeBlockElement","default","getBlockElementAtNode_1","getBlockElementAtNode","getFirstLastBlockElement_1","getFirstBlockElement","getFirstLastBlockElement","getLastBlockElement","StartEndBlockElement_1","StartEndBlockElement","ContentTraverser_1","ContentTraverser","PositionContentSearcher_1","PositionContentSearcher","getLeafSibling_1","getNextLeafSibling","getPreviousLeafSibling","getLeafNode_1","getFirstLeafNode","getLastLeafNode","getInlineElementAtNode_1","getInlineElementAtNode","ImageInlineElement_1","ImageInlineElement","LinkInlineElement_1","LinkInlineElement","NodeInlineElement_1","NodeInlineElement","PartialInlineElement_1","PartialInlineElement","TextInlineElement_1","TextInlineElement","getInlineElementBeforeAfter_1","getInlineElementBefore","getInlineElementAfter","applyTextStyle_1","applyTextStyle","Browser_1","Browser","getBrowserInfo","applyFormat_1","applyFormat","changeElementTag_1","changeElementTag","collapseNodes_1","collapseNodes","contains_1","contains","findClosestElementAncestor_1","findClosestElementAncestor","fromHtml_1","fromHtml","getComputedStyles_1","getComputedStyles","getComputedStyle","getTagOfNode_1","getTagOfNode","isBlockElement_1","isBlockElement","isNodeEmpty_1","isNodeEmpty","isVoidHtmlElement_1","isVoidHtmlElement","matchLink_1","matchLink","matchWhiteSpaces_1","matchWhiteSpaces","queryElements_1","queryElements","splitParentNode_1","splitParentNode","splitBalancedNodeRange","unwrap_1","unwrap","wrap_1","wrap","VTable_1","VTable","Position_1","Position","createRange_1","createRange","getPositionRect_1","getPositionRect","isPositionAtBeginningOf_1","isPositionAtBeginningOf","getSelectionPath_1","getSelectionPath","getRangeFromSelectionPath","isTextualInlineElement_1","isTextualInlineElement","wrapAll_1","wrapAll","convertInlineCss_1","convertInlineCss","sanitizeHtml_1","sanitizeHtml","selectionMarker_1","markSelection","removeMarker","container","contained","treatSameNodeAsContain","Node","commonAncestorContainer","nodeType","parentNode","isNodeAfter_1","nodeOrPosition","offsetOrPosType","node","this","offset","getIndexOfNode","isAtEnd","nextSibling","getEndOffset","endOffset","Math","max","min","element","normalize","firstChild","newOffset","lastChild","childNodes","equalTo","position","isAfter","move","getStart","range","startContainer","startOffset","getEnd","endContainer","previousSibling","nodeValue","length","CorePlugin_1","CorePlugin","Editor_1","Editor","Undo_1","Undo","UndoSnapshots_1","UndoSnapshotsService","BrowserData_1","browserData","cacheGetEventData_1","cacheGetEventData","clearEventDataCache_1","clearEventDataCache","cacheGetContentSearcher_1","cacheGetContentSearcher","clearContentSearcherCache","cacheGetElementAtCursor_1","cacheGetElementAtCursor","snapshotUtils_1","buildSnapshot","restoreSnapshot","tagName","toUpperCase","editor","command","focus","formatter","getDocument","execCommand","getSelectionRange","collapsed","addUndoSnapshot","changeFontSize_1","changeFontSize","FONT_SIZES","clearBlockFormat_1","clearBlockFormat","TAGS_TO_UNWRAP","TAGS_TO_STOP_UNWRAP","ATTRIBUTES_TO_PRESERVE","clearFormat_1","clearFormat","createLink_1","createLink","getFormatState_1","getFormatState","insertImage_1","insertImage","insertTable_1","insertTable","editTable_1","editTable","formatTable_1","formatTable","removeLink_1","removeLink","replaceWithNode_1","replaceWithNode","setAlignment_1","setAlignment","setBackgroundColor_1","setBackgroundColor","setTextColor_1","setTextColor","setDirection_1","setDirection","setFontName_1","setFontName","setFontSize_1","setFontSize","setImageAltText_1","setImageAltText","setIndentation_1","setIndentation","toggleBold_1","toggleBold","toggleBullet_1","toggleBullet","toggleItalic_1","toggleItalic","toggleNumbering_1","toggleNumbering","toggleBlockQuote_1","toggleBlockQuote","toggleCodeBlock_1","toggleCodeBlock","toggleStrikethrough_1","toggleStrikethrough","toggleSubscript_1","toggleSubscript","toggleSuperscript_1","toggleSuperscript","toggleUnderline_1","toggleUnderline","toggleHeader_1","toggleHeader","cacheGetListState_1","cacheGetListState","execFormatWithUndo_1","execFormatWithUndo","CursorData_1","CursorData","cacheGetCursorEventData","clearCursorEventDataCache","queryNodesWithSelection_1","queryNodesWithSelection","replaceTextBeforeCursorWithNode_1","replaceTextBeforeCursorWithNode","validateAndGetRangeForTextBeforeCursor","replaceRangeWithNode_1","replaceRangeWithNode","getNodeAtCursor_1","getNodeAtCursor","cacheGetListElement","cacheGetNodeAtCursor","getFocusablePosition","start","end","ownerDocument","setStart","setEnd","shouldSkipNode_1","getLeafSibling","rootNode","startNode","isNext","result","getSibling","getChild","curNode","shouldContinue","HtmlSanitizer_1","HtmlSanitizer","htmlToDom_1","htmlToDom","splitWithFragment","getInheritableStyles_1","getInheritableStyles","findHeadTailLeafNode","containerBlockNode","isTail","sibling","getBlockContext","headNode","tailNode","nodes","positionUtils_1","positionUtils_2","containerNode","parentBlock","getTextContent","textContent","getContainerNode","getParentBlock","getStartPosition","getEndPosition","inlineElement","pos","safeGetPosition","applyStyle","styler","getStartPoint","toEditorPoint","getEndPoint","roosterjs_editor_dom_1","ZERO_WIDTH_SPACE","callback","createTextNode","insertNode","select","firstNode","lastNode","contentTraverser","getSelectionTraverser","currentInlineElement","nextInlineElement","getNextInlineElement","NodeInlineElement_2","parent","nodeChain","parent_1","push","currentNode","tag","resolveInlineElement","node1","node2","compareDocumentPosition","splitBefore","newParent","cloneNode","removeAttribute","appendChild","innerHTML","insertBefore","Array","temp","wrapper","Element","document_1","test","createElement","_i","nodes_1","getDecoratedInline","toString","configurable","thisStart","otherEnd","from","to","nextNode","previousNode","getInlineElementBeforeAfter","root","isPartial","current","previousInlineElement","collapse","ref","isStart","canSplitParent","slice","startIndex","indexOf","endIndex","BLOCK_ELEMENT_TAGS","split","BLOCK_DISPLAY_STYLES","style","display","selector","closest","matches","msMatchesSelector","parentElement","splitTextNode","textNode","returnFirstPart","firstPart","substr","secondPart","newNode","formatNodes","formatNode","parentTag","every","newNode_1","shift","forEach","removeChild","CRLF","styleNames","styles","defaultView","window","styleNames_1","getPropertyValue","toLowerCase","px2Pt","px","round","parseFloat","styleName","event","eventDataCache","textOrRange","exactMatch","searcher","getContentSearcherOfCursor","getRangeFromText","backupRange","deleteContents","TEMP_NODE_CLASS","TEMP_NODE_HTML","applyListFormat","formats","fontFamily","fontSize","textColor","backgroundColor","isChrome","traverser","block","currentBlockElement","getStartNode","tempNode","getNextBlockElement","workaroundForChrome","getElementAtCursor","currentFormat","existingList","deleteNode","newList","LIs","filter","LIs_1","li","setCurrentEditor","newEditor","dispose","getNextPreviousInlineElement_1","getFirstLastInlineElement_1","collapseToSingleElement","getEndNode","getContentNodes","getFirstInlineElement","firstInline","getLastInlineElement","lastInline","getInlineElements","allInlines","startInline","equals","blockElement","isInBlock","endNode","blockContext","HTML_VOID_ELEMENTS","html","__extends","extendStatics","b","setPrototypeOf","__proto__","__","constructor","_super","getLeafNode","isFirst","BodyScoper_1","EmptyInlineElement_1","SelectionBlockScoper_1","SelectionScoper_1","scoper","createBodyTraverser","createSelectionTraverser","createBlockTraverser","currentBlock","getStartBlockElement","getPreviousNextBlockElement","getPreviousBlockElement","leaf","newBlock","isBlockInScope","currentInline","getStartInlineElement","getPreviousNextInlineElement","getPreviousInlineElement","newInline","trimInlineElement","EmptyInlineElement","WHITESPACE_REGEX","source","exec","VISIBLE_ELEMENT_TAGS","VISIBLE_CHILD_ELEMENT_SELECTOR","join","trim","replace","trimContent","querySelectorAll","checkPosition","targets","some","target","forEachCallback","scope","elements","nodeContainedByRangeOnly","startPosition","endPosition","targetPositions","isIntersectWithNodeRange","cloneObject","assign","existingObj","_a","keys","INHERITABLE_PROPERTIES","win","START_FRAGMENT","END_FRAGMENT","lastIndexOf","before","after","substring","preserveFragmentOnly","fragmentHandler","doc","DOMParser","parseFromString","body","sourceHtml","isEmptyBlockUnderTR","blocks","applyInlineStyle_1","color","fontName","lineHeight","execCommand_1","contentDiv","disableRestoreSelectionOnFocus","_this","disposers","onMouseDown","mouseUpEventListerAdded","addEventListener","onMouseUp","removeMouseUpEventListener","triggerEvent","eventType","rawEvent","initialize","addDomEventHandler","inIME","isIEOrEdge","saveSelectionRange","restoreSavedRange","disposer","isInIME","performAutoComplete","changeSource","snapshot","data","autoCompleteInfo","ensureTypeInElement","isEdge","getDefaultFormat","onPluginEvent","onContentChanged","onKeyPress","willHandleEventExclusively","which","preventDefault","setContent","removeEventListener","core","activeElement","document","preserveSnapshots","maxBufferSize","onNativeEvent","e","runAsync","triggerContentChangedEvent","type","onDropDisposer","onCutDisposer","clear","onKeyDown","clearRedoForInput","undoSnapshots","hasNewContent","undo","redo","canUndo","getSnapshotsManager","canMove","canRedo","getSnapshot","addSnapshot","delta","isRestoring","evt","selectionRange","lastKeyPress","ctrlKey","metaKey","shouldTakeUndo","currentSnapshot","lastSnapshot","getContent","clearRedo","MAXSIZELIMIT","UndoSnapshots","maxSize","snapshots","totalSize","currentIndex","newIndex","removeCount","splice","removedSize","format","table","vtable","writeBack","UNWRAPPABLE_NODES","DEFAULT_STYLER","_","wrapFunction","unwrapFunction","startBlock","endBlock","tag_1","roosterjs_editor_plugins_1","roosterjs_plugin_image_resize_1","defaultPluginsString","createElementFromContent","id","content","plugins","defaultFormat","features","htmlSampleCode","getElementById","codeString","updateHtmlSampleCode","jsSampleCode","startString","requireString","plugin","ImageResize","concat","assembleRequireString","pluginsString","contentEditOptions_1","pluginsString_1","defaultFeatures","getDefaultContentEditFeatures","Watermark","HyperLink","Paste","ContentEdit","TableResize","assemblePluginsString","formatString","defaultFormatString","bold","italic","underline","assembleFormatString","optionsString","assembleOptionsString","endString","assembleEndString","jsCodeString","updateJsSampleCode","DefaultShortcut_1","DefaultShortcut","HyperLink_1","ContentEdit_1","Paste_1","ContentEditFeatures_1","Watermark_1","TableResize_1","autoLink","indentWhenTab","outdentWhenShiftTab","outdentWhenBackspaceOnEmptyFirstLine","outdentWhenEnterOnEmptyLine","mergeInNewLineWhenBackspaceOnFirstChar","unquoteWhenBackspaceOnEmptyFirstLine","unquoteWhenEnterOnEmptyLine","autoBullet","tabInTable","upDownInTable","defaultShortcut","unlinkWhenBackspaceAfterLink","smartOrderedList","smartOrderedListStyles","text","lines","lineEnd_1","line","NODE_ID_ATTRIBUTE_NAME","getAndSetNodeId","customData","getAttribute","nextNodeId","setAttribute","createCustomData","dict","setObject","getObject","createLevelLists","listsMetadata","currentUniqueListId","ImageResize_1","ImageResizePlugin","initFormatBar_1","updateSampleCode_1","initOptions_1","switchTab","className","onload","initEditorForOptions","roosterjs_editor_api_1","currentEditor_1","roosterjs_html_sanitizer_1","TABLE_FORMAT","createTableFormat","bgColorEven","bgColorOdd","topBorder","bottomBorder","verticalBorder","topBorderColor","bottomBorderColor","verticalBorderColor","existingLink","url","prompt","href","intValue","parseInt","operation","level","columns","rows","click","input","file","files","MIN_FONT_SIZE","MAX_FONT_SIZE","getNewFontSize","pt","changeBase","fontSizes","floor","ceil","last","change","BodyScoper","SelectionBlockScoper","startFrom","Range","SelectionScoper","inScope","selStartBlock","selEndBlock","inline","startPartial","endPartial","inlineElements","getWordBefore","word","traverse","inlineBefore","inlineAfter","getSubStringBefore","textIndex","forEachTextInlineElement","textInline","nodeContent","nodeIndex","charCodeAt","getNearestNonTextInlineElement","nearestNonTextInlineElement","traversingComplete","previousInline","userAgent","appVersion","isIE11OrGreater","isIE","isFirefox","isSafari","isWebKit","isMac","isWin","navigator","elementStyle","fontWeight","fontStyle","textDecoration","newTag","newElement","attributes","attr","marginTop","marginBottom","replaceChild","httpExcludeRegEx","domainPortWithUrlRegEx","domainPortRegEx","linkMatchRules","http","match","RegExp","except","normalizeUrl","https","mailto","notes","unc","ftp","news","telnet","gopher","wais","schema","rule","scheme","originalUrl","normalizedUrl","trs","HTMLTableElement","td","getTableFromTd","currentTd_1","cells","map","row","tr","rowIndex","sourceCol","targetCol","col","colSpan","rowSpan","spanLeft","spanAbove","moveChildren","cell","recalcSpans","borderCollapse","borderTop","getBorderStyle","borderBottom","borderLeft","borderRight","edit","currentRow","currentCell","cloneCell","newRow_1","countSpanAbove","colIndex","nextCell","getCell","newCell","getTd","forEachCellOfCurrentColumn","newCol_1","countSpanLeft","forEachCellOfColumn","forEachCellOfCurrentRow","rowStep","aboveCell","belowCell","colStep","leftCell","rightCell","splitRow","forEachCellOfRow","getCurrentTd","HTMLTableCellElement","fromNode","toNode","normalizeRect","clientRect","left","right","top","bottom","rect","getBoundingClientRect","rects","getClientRects","span","areAllPrevousNodesEmpty","targetNode","getPositionFromPath","path","getPositionPath","unshift","isPreviousText","htmlFragment","cloneObject_1","getAllowedValues_1","options","elementCallbacks","styleCallbacks","getStyleCallbacks","attributeCallbacks","allowedTags","getAllowedTags","additionalAllowedTags","allowedAttributes","getAllowedAttributes","additionalAllowAttributes","defaultStyleValues","getDefaultStyleValues","additionalDefaultStyleValues","additionalGlobalStyleNodes","allowPreserveWhiteSpace","additionalStyleNodes","sanitizer","currentStyles","currentElementOrStyle","HTMLElement","convertCssOnly","convertGlobalCssToInlineCss","sanitize","processNode","styleNodes","toArray","styleSheets_1","reverse","sheet","styleSheet","_loop_1","j","styleRule","cssRules","cssText","CSSRule","STYLE_RULE","selectorText","currentStyle","context","isElement","ELEMENT_NODE","isText","TEXT_NODE","allowElement","insidePRE","thisStyle","processAttributes","processCss","child","next","styleNode","getAttributeNode","pair","isInheritable","undefined","keep","attribute","name_1","list","ALLOWED_HTML_TAGS","ALLOWED_HTML_ATTRIBUTES","DEFAULT_STYLE_VALUES","background-color","border-bottom-color","border-bottom-style","border-bottom-width","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left-color","border-left-style","border-left-width","border-right-color","border-right-style","border-right-width","border-top-color","border-top-style","border-top-width","outline-color","outline-style","outline-width","overflow","text-decoration","-webkit-text-stroke-width","word-wrap","margin-left","margin-right","padding","padding-top","padding-left","padding-right","padding-bottom","border","border-top","border-left","border-right","border-bottom","vertical-align","float","removeValue","removeWidthForLiAndDiv","unique","array","index","self","additionalTags","additionalAttributes","toLocaleLowerCase","additionalDefaultStyles","callbacks","width","convertInlineCssOnly","propertyCallbacks","OFFSET_1_ATTRIBUTE","OFFSET_2_ATTRIBUTE","CURSOR_START","CURSOR_END","CURSOR_SINGLE","CURSOR_MARK_SELECTOR","safeCreatePosition","marker","attrName","insertMarker","useInlineMarker","pos1","pos2","getRestorableOffset","retrieveSelectionRange","markers","collapseSelectedBlocks_1","canCollapse","tagsToStopUnwrap","tagsToUnwrap","attributesToPreserve","groups","stopUnwrapSelector","group","first","clearNodeFormat","allChildrenAreBlock","reduce","previousValue","returnBlockElement","clearAttribute","styleArray","STYLES_TO_REMOVE","isDefaultFormatEmpty","removeProperty","URI_REGEX","MAILTO_REGEX","FTP_REGEX","TEMP_TITLE","getAnchorNodeAtCursor","updateAnchorDisplayText","anchor","displayText","link","altText","linkData","normalizedUrl_1","prefix","search","applyLinkPrefix","originalUrl_1","title","roosterjs_editor_core_1","listTag","headerTag","isBold","queryCommandState","isItalic","isUnderline","isStrikeThrough","isSubscript","isSuperscript","isBullet","isNumbering","headerLevel","canUnlink","canAddImageAltText","isBlockQuote","createEditorCore_1","roosterjs_editor_dom_2","Error","initialContent","eventDisposers","api","attachDomEvent","omitContentEditableAttributeChanges","isContentEditable","userSelect","msUserSelect","webkitUserSelect","contenteditableChanged","corePlugin","isDisposed","option","replaceNode","existingNode","arg","scopeOrCallback","Function","isEmpty","triggerExtractContentEvent","includeSelectionMarker","selectionPath","JSON","stringify","extractContentEvent","innerText","pathComment","parse","insertContent","allNodes","insertOnNewLine","hasFocus","arg1","arg2","arg3","arg4","runWithSelectionMarker","selectionMarked","cachedSelectionRange","getFocusedPosition","sel","getSelection","focusNode","focusOffset","getCursorRect","eventName","handler","pluginEvent","broadcast","editWithUndo","getCustomData","getBodyTraverser","getBlockTraverser","requestAnimationFrame","setEditorDomAttribute","queryContent","updateSelection","runWithoutAddingUndoSnapshot","currentUndoSnapshot","getContentTraverser","attachDomEvent_1","editWithUndo_1","focus_1","getCustomData_1","getSelectionRange_1","hasFocus_1","insertNode_1","select_1","triggerEvent_1","createCoreApiMap","baseFormat","calcDefaultFormat","coreApiOverride","defaultApi","pluginEventType","beforeDispatch","onEvent","isNested","event_1","tryGetFromCache","selection","rangeCount","getRangeAt","updateCursor","replaceSelection","isBegin","insertedNode","refNode","refParentNode","clonedRange","cloneRange","position_1","setEndAfter","nodeToInsert","rootNodeToInsert","rootNodes","shouldInsertListAsText","listNode","setEndBefore","div","newRange","preprocessNode","nodeForCursor","needAddRange","currentRange","removeAllRanges","addRange","handledExclusively","getBrowserData","CONTENTSEARCHER_KEY","CACHE_KEY_PREFIX","imageFile","reader","FileReader","image","src","maxWidth","readAsDataURL","getTableCellWidth","fragment","createDocumentFragment","cellSpacing","cellPadding","alignment","align","textAlign","direction","processList_1","indentation","toggleTagCore_1","BLOCKQUOTE_TAG","borderColor","paddingLeft","PRE_TAG","CODE_TAG","CODE_NODE_TAG","codeBlock","wrapped","header","preserveSelection","startPoint","endPoint","EVENTDATACACHE_CURSORDATA","getContentSearcher","getXCharsBeforeCursor","numChars","getTextSectionBeforeCursorTill","stopFunc","getFirstNonTextInlineBeforeCursor","cursorData","expectedTags","getTooltipCallback","onLinkClick","onMouse","a","srcElement","tryGetHref","open","autoLinkFeatures_1","shortcutFeatures_1","tableFeatures_1","listFeatures_1","quoteFeatures_1","featureSet","featureMap","IndentWhenTab","OutdentWhenShiftTab","OutdentWhenBackOn1stEmptyLine","OutdentWhenEnterOnEmptyLine","MergeInNewLine","UnquoteWhenBackOnEmpty1stLine","UnquoteWhenEnterOnEmptyLine","TabInTable","UpDownInTable","AutoBullet","AutoLink","UnlinkWhenBackspaceAfterLink","getSmartOrderedList","feature","featureFlag","findFeature","currentFeature","handleEvent","hasFunctionKey","altKey","allowFunctionKeys","shouldHandleEvent","TRAILING_PUNCTUATION_REGEX","MINIMUM_LENGTH","cacheGetLinkData","trailingPunctuation","candidate_1","str","createCommand","winKey","macKey","action","commands","cacheGetCommand","shiftKey","cmd","stopPropagation","cacheGetTableCell","firstTd","step","isUp","targetTd","newContainer","toggleListAndPreventDefault","listInfo","listElement","br","textBeforeCursor","rangeToDelete","tempBr","styleList","HTMLOListElement","ol","parentOl","listStyle","QUOTE_TAG","cacheGetQuoteChild","splitQuote","childOfQuote","buildClipboardData_1","fragmentHandler_1","textToHtml_1","deprecated","onPaste","clipboardData","pasteOriginal","pasteDisposer","paste","detectPasteOption","pasteText","pasteAndMergeFormat","pasteOption","mergeCurrentFormat","applyTextFormat","originalFormat","internalPaste","snapshotBeforePaste","parents","parents_1","CONTAINER_HTML","CLIPBOARD_HTML_HEADER_REGEX","dataTransfer","types","getData","retrieveHtmlCallback","headerValues","workaroundForEdge","getCurrentFormat","fileCount","items","item","getAsFile","getImage","getAsString","directRetrieveHtml","originalSelectionRange","tempDiv","pasteDiv","getTempDivForPaste","retrieveHtmlViaTempDiv","convertPastedContentFromExcel_1","convertPastedContentFromWord_1","WORD_ATTRIBUTE_NAME","WORD_ATTRIBUTE_VALUE","EXCEL_ATTRIBUTE_NAME","EXCEL_ATTRIBUTE_VALUE","LAST_TD_END_REGEX","LAST_TR_END_REGEX","LAST_TR_REGEX","LAST_TABLE_REGEX","querySelector","trMatch","tableMatch","wordConverter_1","WordConverterArguments_1","converterUtils_1","wordConverter","createWordConverter","wordConverterArgs","createWordConverterArguments","processNodesDiscovery","processNodeConvert","CustomData_1","nextUniqueId","numBulletsConverted","numNumberedConverted","LevelLists_1","lists","listItems","currentListIdsByLevels","lastProcessedItem","LOOKUP_DEPTH","UNIQUE_LIST_ID_CUSTOM_DATA","MSO_LIST_STYLE_NAME","LINE_BREAKS","getOrCreateListForNode","metadata","listMetadata","recurringGetOrCreateListAtNode","possibleList","getRealPreviousSibling","listId","uniqueListId","convertListIfNeeded","cleanupListIgnore","levels","nodesToRemove","isEmptySpan","fixWordListComments","isIgnoreNode","getListItemMetadata","listatt","getStyleValue","listprops","wordListId","originalNode","getFakeBulletTagName","fakeBullet","isFakeBullet","getFakeBulletText","removeComments","nextElement","endComment","getRealNextSibling","newSpan","prevSibling","isEmptyTextNode","textStyle","inStyles","nvpair","resetCurrentLists","args","ll","itemMetadata","levelInfo","ignore","numberOfItems","secondFakeBullet","firstFakeBullet","WATERMARK_REGEX","watermark","handleWatermark","showHideWatermark","focusDisposer","blurDisposer","hideWatermark","isWatermarkShowing","removeWartermarkFromHtml","ignoreCachedState","showWatermark","watermarkNode","isRtl","pageX","onMouseOver","calcAndShowHandle","initialPageX","attachMouseEvents","getResizeHandle","borderWidth","cancelEvent","onMouseMove","adjustHandle","detachMouseEvents","isNaN","newWidth_1","clientWidth","setTableColumnWidth","onMouseOverDisposer","clickIntoCurrentTd","getPosition","top_1","handle","offsetLeft","offsetWidth","height","offsetHeight","offsetParent","scrollLeft","offsetTop","scrollTop","document_2","BEGIN_TAG","END_TAG","EXTRACT_HTML_REGEX","minWidth","minHeight","selectionBorderColor","forcePreserveRatio","resizableImageSelector","startResize","img","getSelectedImage","startPageX","startPageY","pageY","startWidth","startHeight","clientHeight","doResize","finishResize","cursor","stopEvent","widthChange","heightChange","newWidth","isWest","newHeight","isNorth","ratio","resizeDiv","removeResizeDivIfAny","previous","removeResizeDiv","onBlur","hideResizeHandle","onDragStart","contentEditable","currentImg","showResizeHandle","event_2","event_3","extractHtml","createResizeDiv","selectImageAfterUnSelect","referenceNode","createComment","pointerEvents","comment","arguments","getElementsByTagName","console","warn","ShowCursorPosition_1","ShowFormatState_1","currentEditor_2","checked","featuresChanged","keys_1","editorOptions","alert","ShowCursorPosition","resultContainer","ShowFormatState","formatState"],"mappings":"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","file":"sample.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/publish/samplesite/scripts/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 70);\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar NodeBlockElement_1 = require(\"./blockElements/NodeBlockElement\");\r\nexports.NodeBlockElement = NodeBlockElement_1.default;\r\nvar getBlockElementAtNode_1 = require(\"./blockElements/getBlockElementAtNode\");\r\nexports.getBlockElementAtNode = getBlockElementAtNode_1.default;\r\nvar getFirstLastBlockElement_1 = require(\"./blockElements/getFirstLastBlockElement\");\r\nexports.getFirstBlockElement = getFirstLastBlockElement_1.getFirstBlockElement;\r\nexports.getFirstLastBlockElement = getFirstLastBlockElement_1.getFirstLastBlockElement;\r\nexports.getLastBlockElement = getFirstLastBlockElement_1.getLastBlockElement;\r\nvar StartEndBlockElement_1 = require(\"./blockElements/StartEndBlockElement\");\r\nexports.StartEndBlockElement = StartEndBlockElement_1.default;\r\nvar ContentTraverser_1 = require(\"./contentTraverser/ContentTraverser\");\r\nexports.ContentTraverser = ContentTraverser_1.default;\r\nvar PositionContentSearcher_1 = require(\"./contentTraverser/PositionContentSearcher\");\r\nexports.PositionContentSearcher = PositionContentSearcher_1.default;\r\nvar getLeafSibling_1 = require(\"./utils/getLeafSibling\");\r\nexports.getNextLeafSibling = getLeafSibling_1.getNextLeafSibling;\r\nexports.getPreviousLeafSibling = getLeafSibling_1.getPreviousLeafSibling;\r\nvar getLeafNode_1 = require(\"./utils/getLeafNode\");\r\nexports.getFirstLeafNode = getLeafNode_1.getFirstLeafNode;\r\nexports.getLastLeafNode = getLeafNode_1.getLastLeafNode;\r\nvar getInlineElementAtNode_1 = require(\"./inlineElements/getInlineElementAtNode\");\r\nexports.getInlineElementAtNode = getInlineElementAtNode_1.default;\r\nvar ImageInlineElement_1 = require(\"./inlineElements/ImageInlineElement\");\r\nexports.ImageInlineElement = ImageInlineElement_1.default;\r\nvar LinkInlineElement_1 = require(\"./inlineElements/LinkInlineElement\");\r\nexports.LinkInlineElement = LinkInlineElement_1.default;\r\nvar NodeInlineElement_1 = require(\"./inlineElements/NodeInlineElement\");\r\nexports.NodeInlineElement = NodeInlineElement_1.default;\r\nvar PartialInlineElement_1 = require(\"./inlineElements/PartialInlineElement\");\r\nexports.PartialInlineElement = PartialInlineElement_1.default;\r\nvar TextInlineElement_1 = require(\"./inlineElements/TextInlineElement\");\r\nexports.TextInlineElement = TextInlineElement_1.default;\r\nvar getInlineElementBeforeAfter_1 = require(\"./inlineElements/getInlineElementBeforeAfter\");\r\nexports.getInlineElementBefore = getInlineElementBeforeAfter_1.getInlineElementBefore;\r\nexports.getInlineElementAfter = getInlineElementBeforeAfter_1.getInlineElementAfter;\r\nvar applyTextStyle_1 = require(\"./utils/applyTextStyle\");\r\nexports.applyTextStyle = applyTextStyle_1.default;\r\nvar Browser_1 = require(\"./utils/Browser\");\r\nexports.Browser = Browser_1.default;\r\nexports.getBrowserInfo = Browser_1.getBrowserInfo;\r\nvar applyFormat_1 = require(\"./utils/applyFormat\");\r\nexports.applyFormat = applyFormat_1.default;\r\nvar changeElementTag_1 = require(\"./utils/changeElementTag\");\r\nexports.changeElementTag = changeElementTag_1.default;\r\nvar collapseNodes_1 = require(\"./utils/collapseNodes\");\r\nexports.collapseNodes = collapseNodes_1.default;\r\nvar contains_1 = require(\"./utils/contains\");\r\nexports.contains = contains_1.default;\r\nvar findClosestElementAncestor_1 = require(\"./utils/findClosestElementAncestor\");\r\nexports.findClosestElementAncestor = findClosestElementAncestor_1.default;\r\nvar fromHtml_1 = require(\"./utils/fromHtml\");\r\nexports.fromHtml = fromHtml_1.default;\r\nvar getComputedStyles_1 = require(\"./utils/getComputedStyles\");\r\nexports.getComputedStyles = getComputedStyles_1.default;\r\nexports.getComputedStyle = getComputedStyles_1.getComputedStyle;\r\nvar getTagOfNode_1 = require(\"./utils/getTagOfNode\");\r\nexports.getTagOfNode = getTagOfNode_1.default;\r\nvar isBlockElement_1 = require(\"./utils/isBlockElement\");\r\nexports.isBlockElement = isBlockElement_1.default;\r\nvar isNodeEmpty_1 = require(\"./utils/isNodeEmpty\");\r\nexports.isNodeEmpty = isNodeEmpty_1.default;\r\nvar isVoidHtmlElement_1 = require(\"./utils/isVoidHtmlElement\");\r\nexports.isVoidHtmlElement = isVoidHtmlElement_1.default;\r\nvar matchLink_1 = require(\"./utils/matchLink\");\r\nexports.matchLink = matchLink_1.default;\r\nvar matchWhiteSpaces_1 = require(\"./utils/matchWhiteSpaces\");\r\nexports.matchWhiteSpaces = matchWhiteSpaces_1.default;\r\nvar queryElements_1 = require(\"./utils/queryElements\");\r\nexports.queryElements = queryElements_1.default;\r\nvar splitParentNode_1 = require(\"./utils/splitParentNode\");\r\nexports.splitParentNode = splitParentNode_1.default;\r\nexports.splitBalancedNodeRange = splitParentNode_1.splitBalancedNodeRange;\r\nvar unwrap_1 = require(\"./utils/unwrap\");\r\nexports.unwrap = unwrap_1.default;\r\nvar wrap_1 = require(\"./utils/wrap\");\r\nexports.wrap = wrap_1.default;\r\nvar VTable_1 = require(\"./table/VTable\");\r\nexports.VTable = VTable_1.default;\r\nvar Position_1 = require(\"./selection/Position\");\r\nexports.Position = Position_1.default;\r\nvar createRange_1 = require(\"./selection/createRange\");\r\nexports.createRange = createRange_1.default;\r\nvar getPositionRect_1 = require(\"./selection/getPositionRect\");\r\nexports.getPositionRect = getPositionRect_1.default;\r\nvar isPositionAtBeginningOf_1 = require(\"./selection/isPositionAtBeginningOf\");\r\nexports.isPositionAtBeginningOf = isPositionAtBeginningOf_1.default;\r\nvar getSelectionPath_1 = require(\"./selection/getSelectionPath\");\r\nexports.getSelectionPath = getSelectionPath_1.default;\r\nexports.getRangeFromSelectionPath = getSelectionPath_1.getRangeFromSelectionPath;\r\n// Deprecated\r\nvar isTextualInlineElement_1 = require(\"./deprecated/isTextualInlineElement\");\r\nexports.isTextualInlineElement = isTextualInlineElement_1.default;\r\nvar wrapAll_1 = require(\"./deprecated/wrapAll\");\r\nexports.wrapAll = wrapAll_1.default;\r\nvar convertInlineCss_1 = require(\"./utils/convertInlineCss\");\r\nexports.convertInlineCss = convertInlineCss_1.default;\r\nvar sanitizeHtml_1 = require(\"./utils/sanitizeHtml\");\r\nexports.sanitizeHtml = sanitizeHtml_1.default;\r\nvar selectionMarker_1 = require(\"./deprecated/selectionMarker\");\r\nexports.markSelection = selectionMarker_1.markSelection;\r\nexports.removeMarker = selectionMarker_1.removeMarker;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction contains(container, contained, treatSameNodeAsContain) {\r\n    if (!container || !contained) {\r\n        return false;\r\n    }\r\n    if (treatSameNodeAsContain && container == contained) {\r\n        return true;\r\n    }\r\n    if (!(contained instanceof Node)) {\r\n        contained = contained && contained.commonAncestorContainer;\r\n        treatSameNodeAsContain = true;\r\n    }\r\n    if (contained && contained.nodeType == 3 /* Text */) {\r\n        contained = contained.parentNode;\r\n        treatSameNodeAsContain = true;\r\n    }\r\n    if (container.nodeType != 1 /* Element */) {\r\n        return !!treatSameNodeAsContain && container == contained;\r\n    }\r\n    return !!(treatSameNodeAsContain || container != contained) && container.contains(contained);\r\n}\r\nexports.default = contains;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar findClosestElementAncestor_1 = require(\"../utils/findClosestElementAncestor\");\r\nvar isNodeAfter_1 = require(\"../utils/isNodeAfter\");\r\n/**\r\n * Represent a position in DOM tree by the node and its offset index\r\n */\r\nvar Position = /** @class */ (function () {\r\n    function Position(nodeOrPosition, offsetOrPosType) {\r\n        if (nodeOrPosition.node) {\r\n            this.node = nodeOrPosition.node;\r\n            offsetOrPosType = nodeOrPosition.offset;\r\n        }\r\n        else {\r\n            this.node = nodeOrPosition;\r\n        }\r\n        switch (offsetOrPosType) {\r\n            case -2 /* Before */:\r\n                this.offset = getIndexOfNode(this.node);\r\n                this.node = this.node.parentNode;\r\n                this.isAtEnd = false;\r\n                break;\r\n            case -3 /* After */:\r\n                this.offset = getIndexOfNode(this.node) + 1;\r\n                this.isAtEnd = !this.node.nextSibling;\r\n                this.node = this.node.parentNode;\r\n                break;\r\n            case -1 /* End */:\r\n                this.offset = getEndOffset(this.node);\r\n                this.isAtEnd = true;\r\n                break;\r\n            default:\r\n                var endOffset = getEndOffset(this.node);\r\n                this.offset = Math.max(0, Math.min(offsetOrPosType, endOffset));\r\n                this.isAtEnd = offsetOrPosType > 0 && offsetOrPosType >= endOffset;\r\n                break;\r\n        }\r\n        this.element = findClosestElementAncestor_1.default(this.node);\r\n    }\r\n    /**\r\n     * Normalize this position to the leaf node, return the normalize result.\r\n     * If current position is already using leaf node, return this position object itself\r\n     */\r\n    Position.prototype.normalize = function () {\r\n        if (this.node.nodeType == 3 /* Text */ || !this.node.firstChild) {\r\n            return this;\r\n        }\r\n        var node = this.node;\r\n        var newOffset = this.isAtEnd\r\n            ? -1 /* End */\r\n            : this.offset;\r\n        while (node.nodeType == 1 /* Element */ && node.firstChild) {\r\n            node =\r\n                newOffset == 0 /* Begin */\r\n                    ? node.firstChild\r\n                    : newOffset == -1 /* End */\r\n                        ? node.lastChild\r\n                        : node.childNodes[newOffset];\r\n            newOffset = this.isAtEnd ? -1 /* End */ : 0 /* Begin */;\r\n        }\r\n        return new Position(node, newOffset);\r\n    };\r\n    /**\r\n     * Check if this position is equal to the given position\r\n     * @param position The position to check\r\n     */\r\n    Position.prototype.equalTo = function (position) {\r\n        return (position &&\r\n            (this == position ||\r\n                (this.node == position.node &&\r\n                    this.offset == position.offset &&\r\n                    this.isAtEnd == position.isAtEnd)));\r\n    };\r\n    /**\r\n     * Checks if this position is after the given position\r\n     */\r\n    Position.prototype.isAfter = function (position) {\r\n        return this.node == position.node\r\n            ? (this.isAtEnd && !position.isAtEnd) || this.offset > position.offset\r\n            : isNodeAfter_1.default(this.node, position.node);\r\n    };\r\n    /**\r\n     * Move this position with offset, returns a new position with a valid offset in the same node\r\n     * @param offset Offset to move with\r\n     */\r\n    Position.prototype.move = function (offset) {\r\n        return new Position(this.node, Math.max(this.offset + offset, 0));\r\n    };\r\n    /**\r\n     * Get start position of the given Range\r\n     * @param range The range to get position from\r\n     */\r\n    Position.getStart = function (range) {\r\n        return new Position(range.startContainer, range.startOffset);\r\n    };\r\n    /**\r\n     * Get end position of the given Range\r\n     * @param range The range to get position from\r\n     */\r\n    Position.getEnd = function (range) {\r\n        return new Position(range.endContainer, range.endOffset);\r\n    };\r\n    return Position;\r\n}());\r\nexports.default = Position;\r\nfunction getIndexOfNode(node) {\r\n    var i = 0;\r\n    while ((node = node.previousSibling)) {\r\n        i++;\r\n    }\r\n    return i;\r\n}\r\nfunction getEndOffset(node) {\r\n    if (node.nodeType == 3 /* Text */) {\r\n        return node.nodeValue.length;\r\n    }\r\n    else if (node.nodeType == 1 /* Element */) {\r\n        return node.childNodes.length;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CorePlugin_1 = require(\"./editor/CorePlugin\");\r\nexports.CorePlugin = CorePlugin_1.default;\r\nvar Editor_1 = require(\"./editor/Editor\");\r\nexports.Editor = Editor_1.default;\r\nvar Undo_1 = require(\"./undo/Undo\");\r\nexports.Undo = Undo_1.default;\r\nvar UndoSnapshots_1 = require(\"./undo/UndoSnapshots\");\r\nexports.UndoSnapshotsService = UndoSnapshots_1.default;\r\nvar BrowserData_1 = require(\"./deprecated/BrowserData\");\r\nexports.browserData = BrowserData_1.default;\r\nvar cacheGetEventData_1 = require(\"./eventApi/cacheGetEventData\");\r\nexports.cacheGetEventData = cacheGetEventData_1.default;\r\nvar clearEventDataCache_1 = require(\"./eventApi/clearEventDataCache\");\r\nexports.clearEventDataCache = clearEventDataCache_1.default;\r\nvar cacheGetContentSearcher_1 = require(\"./eventApi/cacheGetContentSearcher\");\r\nexports.cacheGetContentSearcher = cacheGetContentSearcher_1.cacheGetContentSearcher;\r\nexports.clearContentSearcherCache = cacheGetContentSearcher_1.clearContentSearcherCache;\r\nvar cacheGetElementAtCursor_1 = require(\"./eventApi/cacheGetElementAtCursor\");\r\nexports.cacheGetElementAtCursor = cacheGetElementAtCursor_1.default;\r\nvar snapshotUtils_1 = require(\"./deprecated/snapshotUtils\");\r\nexports.buildSnapshot = snapshotUtils_1.buildSnapshot;\r\nexports.restoreSnapshot = snapshotUtils_1.restoreSnapshot;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Get the html tag of a node, or empty if it is not an element\r\n * @param node The node to get tag of\r\n * @returns Tag name in upper case if the given node is an Element, or empty string otherwise\r\n */\r\nfunction getTagOfNode(node) {\r\n    return node && node.nodeType == 1 /* Element */ ? node.tagName.toUpperCase() : '';\r\n}\r\nexports.default = getTagOfNode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Execute a document command\r\n * @param editor The editor instance\r\n * @param command The command to execute\r\n * @param addUndoSnapshotWhenCollapsed Optional, set to true to always add undo snapshot even current selection is collapsed.\r\n * Default value is false.\r\n * @param doWorkaroundForList Optional, set to true to do workaround for list in order to keep current format.\r\n * Default value is false.\r\n */\r\nfunction execCommand(editor, command) {\r\n    editor.focus();\r\n    var formatter = function () { return editor.getDocument().execCommand(command, false, null); };\r\n    var range = editor.getSelectionRange();\r\n    if (range && range.collapsed) {\r\n        editor.addUndoSnapshot();\r\n        formatter();\r\n    }\r\n    else {\r\n        editor.addUndoSnapshot(formatter, \"Format\" /* Format */);\r\n    }\r\n}\r\nexports.default = execCommand;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar changeFontSize_1 = require(\"./format/changeFontSize\");\r\nexports.changeFontSize = changeFontSize_1.default;\r\nexports.FONT_SIZES = changeFontSize_1.FONT_SIZES;\r\nvar clearBlockFormat_1 = require(\"./format/clearBlockFormat\");\r\nexports.clearBlockFormat = clearBlockFormat_1.default;\r\nexports.TAGS_TO_UNWRAP = clearBlockFormat_1.TAGS_TO_UNWRAP;\r\nexports.TAGS_TO_STOP_UNWRAP = clearBlockFormat_1.TAGS_TO_STOP_UNWRAP;\r\nexports.ATTRIBUTES_TO_PRESERVE = clearBlockFormat_1.ATTRIBUTES_TO_PRESERVE;\r\nvar clearFormat_1 = require(\"./format/clearFormat\");\r\nexports.clearFormat = clearFormat_1.default;\r\nvar createLink_1 = require(\"./format/createLink\");\r\nexports.createLink = createLink_1.default;\r\nvar getFormatState_1 = require(\"./format/getFormatState\");\r\nexports.getFormatState = getFormatState_1.default;\r\nvar insertImage_1 = require(\"./format/insertImage\");\r\nexports.insertImage = insertImage_1.default;\r\nvar insertTable_1 = require(\"./table/insertTable\");\r\nexports.insertTable = insertTable_1.default;\r\nvar editTable_1 = require(\"./table/editTable\");\r\nexports.editTable = editTable_1.default;\r\nvar formatTable_1 = require(\"./table/formatTable\");\r\nexports.formatTable = formatTable_1.default;\r\nvar removeLink_1 = require(\"./format/removeLink\");\r\nexports.removeLink = removeLink_1.default;\r\nvar replaceWithNode_1 = require(\"./format/replaceWithNode\");\r\nexports.replaceWithNode = replaceWithNode_1.default;\r\nvar setAlignment_1 = require(\"./format/setAlignment\");\r\nexports.setAlignment = setAlignment_1.default;\r\nvar setBackgroundColor_1 = require(\"./format/setBackgroundColor\");\r\nexports.setBackgroundColor = setBackgroundColor_1.default;\r\nvar setTextColor_1 = require(\"./format/setTextColor\");\r\nexports.setTextColor = setTextColor_1.default;\r\nvar setDirection_1 = require(\"./format/setDirection\");\r\nexports.setDirection = setDirection_1.default;\r\nvar setFontName_1 = require(\"./format/setFontName\");\r\nexports.setFontName = setFontName_1.default;\r\nvar setFontSize_1 = require(\"./format/setFontSize\");\r\nexports.setFontSize = setFontSize_1.default;\r\nvar setImageAltText_1 = require(\"./format/setImageAltText\");\r\nexports.setImageAltText = setImageAltText_1.default;\r\nvar setIndentation_1 = require(\"./format/setIndentation\");\r\nexports.setIndentation = setIndentation_1.default;\r\nvar toggleBold_1 = require(\"./format/toggleBold\");\r\nexports.toggleBold = toggleBold_1.default;\r\nvar toggleBullet_1 = require(\"./format/toggleBullet\");\r\nexports.toggleBullet = toggleBullet_1.default;\r\nvar toggleItalic_1 = require(\"./format/toggleItalic\");\r\nexports.toggleItalic = toggleItalic_1.default;\r\nvar toggleNumbering_1 = require(\"./format/toggleNumbering\");\r\nexports.toggleNumbering = toggleNumbering_1.default;\r\nvar toggleBlockQuote_1 = require(\"./format/toggleBlockQuote\");\r\nexports.toggleBlockQuote = toggleBlockQuote_1.default;\r\nvar toggleCodeBlock_1 = require(\"./format/toggleCodeBlock\");\r\nexports.toggleCodeBlock = toggleCodeBlock_1.default;\r\nvar toggleStrikethrough_1 = require(\"./format/toggleStrikethrough\");\r\nexports.toggleStrikethrough = toggleStrikethrough_1.default;\r\nvar toggleSubscript_1 = require(\"./format/toggleSubscript\");\r\nexports.toggleSubscript = toggleSubscript_1.default;\r\nvar toggleSuperscript_1 = require(\"./format/toggleSuperscript\");\r\nexports.toggleSuperscript = toggleSuperscript_1.default;\r\nvar toggleUnderline_1 = require(\"./format/toggleUnderline\");\r\nexports.toggleUnderline = toggleUnderline_1.default;\r\nvar toggleHeader_1 = require(\"./format/toggleHeader\");\r\nexports.toggleHeader = toggleHeader_1.default;\r\n// Deprecated\r\nvar cacheGetListState_1 = require(\"./deprecated/cacheGetListState\");\r\nexports.cacheGetListState = cacheGetListState_1.default;\r\nvar execFormatWithUndo_1 = require(\"./deprecated/execFormatWithUndo\");\r\nexports.execFormatWithUndo = execFormatWithUndo_1.default;\r\nvar CursorData_1 = require(\"./deprecated/CursorData\");\r\nexports.CursorData = CursorData_1.default;\r\nexports.cacheGetCursorEventData = CursorData_1.cacheGetCursorEventData;\r\nexports.clearCursorEventDataCache = CursorData_1.clearCursorEventDataCache;\r\nvar queryNodesWithSelection_1 = require(\"./deprecated/queryNodesWithSelection\");\r\nexports.queryNodesWithSelection = queryNodesWithSelection_1.default;\r\nvar replaceTextBeforeCursorWithNode_1 = require(\"./deprecated/replaceTextBeforeCursorWithNode\");\r\nexports.replaceTextBeforeCursorWithNode = replaceTextBeforeCursorWithNode_1.default;\r\nexports.validateAndGetRangeForTextBeforeCursor = replaceTextBeforeCursorWithNode_1.validateAndGetRangeForTextBeforeCursor;\r\nvar replaceRangeWithNode_1 = require(\"./deprecated/replaceRangeWithNode\");\r\nexports.replaceRangeWithNode = replaceRangeWithNode_1.default;\r\nvar getNodeAtCursor_1 = require(\"./deprecated/getNodeAtCursor\");\r\nexports.getNodeAtCursor = getNodeAtCursor_1.default;\r\nexports.cacheGetListElement = getNodeAtCursor_1.cacheGetListElement;\r\nexports.cacheGetNodeAtCursor = getNodeAtCursor_1.cacheGetNodeAtCursor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar isVoidHtmlElement_1 = require(\"../utils/isVoidHtmlElement\");\r\nvar Position_1 = require(\"./Position\");\r\nfunction createRange(start, end) {\r\n    if (!start) {\r\n        return null;\r\n    }\r\n    else if (start instanceof Node) {\r\n        end = new Position_1.default(end || start, -3 /* After */);\r\n        start = new Position_1.default(start, -2 /* Before */);\r\n    }\r\n    else {\r\n        end = end || start;\r\n    }\r\n    var range = start.node.ownerDocument.createRange();\r\n    start = getFocusablePosition(start);\r\n    end = getFocusablePosition(end);\r\n    range.setStart(start.node, start.offset);\r\n    range.setEnd(end.node, end.offset);\r\n    return range;\r\n}\r\nexports.default = createRange;\r\n/**\r\n * Convert to focusable position\r\n * If current node is a void element, we need to move up one level to put cursor outside void element\r\n */\r\nfunction getFocusablePosition(position) {\r\n    return position.node.nodeType == 1 /* Element */ && isVoidHtmlElement_1.default(position.node)\r\n        ? new Position_1.default(position.node, position.isAtEnd ? -3 /* After */ : -2 /* Before */)\r\n        : position;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar contains_1 = require(\"./contains\");\r\nvar shouldSkipNode_1 = require(\"./shouldSkipNode\");\r\n/**\r\n * This walks forwards/backwards DOM tree to get next meaningful node\r\n * @param rootNode Root node to scope the leaf sibling node\r\n * @param startNode current node to get sibling node from\r\n * @param isNext True to get next leaf sibling node, false to get previous leaf sibling node\r\n */\r\nfunction getLeafSibling(rootNode, startNode, isNext) {\r\n    var result = null;\r\n    var getSibling = isNext\r\n        ? function (node) { return node.nextSibling; }\r\n        : function (node) { return node.previousSibling; };\r\n    var getChild = isNext ? function (node) { return node.firstChild; } : function (node) { return node.lastChild; };\r\n    if (contains_1.default(rootNode, startNode)) {\r\n        var curNode = startNode;\r\n        var shouldContinue = true;\r\n        while (shouldContinue) {\r\n            // Find next/previous node, starting from next/previous sibling, then one level up to find next/previous sibling from parent\r\n            // till a non-null nextSibling/previousSibling is found or the ceiling is encountered (rootNode)\r\n            var parentNode = curNode.parentNode;\r\n            curNode = getSibling(curNode);\r\n            while (!curNode && parentNode != rootNode) {\r\n                curNode = getSibling(parentNode);\r\n                parentNode = parentNode.parentNode;\r\n            }\r\n            // Now traverse down to get first/last child\r\n            while (curNode && getChild(curNode)) {\r\n                curNode = getChild(curNode);\r\n            }\r\n            // Check special nodes (i.e. node that has a display:none etc.) and continue looping if so\r\n            shouldContinue = curNode && shouldSkipNode_1.default(curNode);\r\n            if (!shouldContinue) {\r\n                // Found a good leaf node, assign and exit\r\n                result = curNode;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.getLeafSibling = getLeafSibling;\r\n/**\r\n * This walks forwards DOM tree to get next meaningful node\r\n * @param rootNode Root node to scope the leaf sibling node\r\n * @param startNode current node to get sibling node from\r\n */\r\nfunction getNextLeafSibling(rootNode, startNode) {\r\n    return getLeafSibling(rootNode, startNode, true /*isNext*/);\r\n}\r\nexports.getNextLeafSibling = getNextLeafSibling;\r\n/**\r\n * This walks backwards DOM tree to get next meaningful node\r\n * @param rootNode Root node to scope the leaf sibling node\r\n * @param startNode current node to get sibling node from\r\n */\r\nfunction getPreviousLeafSibling(rootNode, startNode) {\r\n    return getLeafSibling(rootNode, startNode, false /*isNext*/);\r\n}\r\nexports.getPreviousLeafSibling = getPreviousLeafSibling;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar HtmlSanitizer_1 = require(\"./sanitizer/HtmlSanitizer\");\r\nexports.HtmlSanitizer = HtmlSanitizer_1.default;\r\nvar htmlToDom_1 = require(\"./utils/htmlToDom\");\r\nexports.htmlToDom = htmlToDom_1.default;\r\nexports.splitWithFragment = htmlToDom_1.splitWithFragment;\r\nvar getInheritableStyles_1 = require(\"./utils/getInheritableStyles\");\r\nexports.getInheritableStyles = getInheritableStyles_1.default;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar collapseNodes_1 = require(\"../utils/collapseNodes\");\r\nvar contains_1 = require(\"../utils/contains\");\r\nvar getTagOfNode_1 = require(\"../utils/getTagOfNode\");\r\nvar isBlockElement_1 = require(\"../utils/isBlockElement\");\r\nvar NodeBlockElement_1 = require(\"./NodeBlockElement\");\r\nvar StartEndBlockElement_1 = require(\"./StartEndBlockElement\");\r\n/**\r\n * This produces a block element from a a node\r\n * It needs to account for various HTML structure. Examples:\r\n * 1) <root><div>abc</div></root>\r\n *   This is most common the case, user passes in a node pointing to abc, and get back a block representing <div>abc</div>\r\n * 2) <root><p><br></p></root>\r\n *   Common content for empty block, user passes node pointing to <br>, and get back a block representing <p><br></p>\r\n * 3) <root>abc</root>\r\n *   Not common, but does happen. It is still a block in user's view. User passes in abc, and get back a start-end block representing abc\r\n *   NOTE: abc could be just one node. However, since it is not a html block, it is more appropriate to use start-end block although they point to same node\r\n * 4) <root><div>abc<br>123</div></root>\r\n *   A bit tricky, but can happen when user use Ctrl+Enter which simply inserts a <BR> to create a link break. There're two blocks:\r\n *   block1: 1) abc<br> block2: 123\r\n * 5) <root><div>abc<div>123</div></div></root>\r\n *   Nesting div and there is text node in same level as a DIV. Two blocks: 1) abc 2) <div>123</div>\r\n * 6) <root><div>abc<span>123<br>456</span></div></root>\r\n *   This is really tricky. Essentially there is a <BR> in middle of a span breaking the span into two blocks;\r\n *   block1: abc<span>123<br> block2: 456\r\n * In summary, given any arbitary node (leaf), to identify the head and tail of the block, following rules need to be followed:\r\n * 1) to identify the head, it needs to crawl DOM tre left/up till a block node or BR is encountered\r\n * 2) same for identifying tail\r\n * 3) should also apply a block ceiling, meaning as it crawls up, it should stop at a block node\r\n * @param rootNode Root node of the scope, the block element will be inside of this node\r\n * @param node The node to get BlockElement start from\r\n */\r\nfunction getBlockElementAtNode(rootNode, node) {\r\n    if (!contains_1.default(rootNode, node)) {\r\n        return null;\r\n    }\r\n    // Identify the containing block. This serves as ceiling for traversing down below\r\n    // NOTE: this container block could be just the rootNode,\r\n    // which cannot be used to create block element. We will special case handle it later on\r\n    var containerBlockNode = StartEndBlockElement_1.default.getBlockContext(node);\r\n    if (containerBlockNode == node) {\r\n        return new NodeBlockElement_1.default(containerBlockNode);\r\n    }\r\n    // Find the head and leaf node in the block\r\n    var headNode = findHeadTailLeafNode(node, containerBlockNode, false /*isTail*/);\r\n    var tailNode = findHeadTailLeafNode(node, containerBlockNode, true /*isTail*/);\r\n    // At this point, we have the head and tail of a block, here are some examples and where head and tail point to\r\n    // 1) <root><div>hello<br></div></root>, head: hello, tail: <br>\r\n    // 2) <root><div>hello<span style=\"font-family: Arial\">world</span></div></root>, head: hello, tail: world\r\n    // Both are actually completely and exclusively wrapped in a parent div, and can be represented with a Node block\r\n    // So we shall try to collapse as much as we can to the nearest common ancester\r\n    var nodes = collapseNodes_1.default(rootNode, headNode, tailNode, false /*canSplitParent*/);\r\n    headNode = nodes[0];\r\n    tailNode = nodes[nodes.length - 1];\r\n    if (headNode.parentNode != tailNode.parentNode) {\r\n        // Un-Balanced start and end, create a start-end block\r\n        return new StartEndBlockElement_1.default(rootNode, headNode, tailNode);\r\n    }\r\n    else {\r\n        // Balanced start and end (point to same parent), need to see if further collapsing can be done\r\n        while (!headNode.previousSibling && !tailNode.nextSibling) {\r\n            var parentNode = headNode.parentNode;\r\n            if (parentNode == containerBlockNode) {\r\n                // Has reached the container block\r\n                if (containerBlockNode != rootNode) {\r\n                    // If the container block is not the root, use the container block\r\n                    headNode = tailNode = parentNode;\r\n                }\r\n                break;\r\n            }\r\n            else {\r\n                // Continue collapsing to parent\r\n                headNode = tailNode = parentNode;\r\n            }\r\n        }\r\n        // If head and tail are same and it is a block element, create NodeBlock, otherwise start-end block\r\n        return headNode == tailNode && isBlockElement_1.default(headNode)\r\n            ? new NodeBlockElement_1.default(headNode)\r\n            : new StartEndBlockElement_1.default(rootNode, headNode, tailNode);\r\n    }\r\n}\r\nexports.default = getBlockElementAtNode;\r\n/**\r\n * Given a node and container block, identify the first/last leaf node\r\n * A leaf node is defined as deepest first/last node in a block\r\n * i.e. <div><span style=\"font-family: Arial\">abc</span></div>, abc is the head leaf of the block\r\n * Often <br> or a child <div> is used to create a block. In that case, the leaf after the sibling div or br should be the head leaf\r\n * i.e. <div>123<br>abc</div>, abc is the head of a block because of a previous sibling <br>\r\n * i.e. <div><div>123</div>abc</div>, abc is also the head of a block because of a previous sibling <div>\r\n */\r\nfunction findHeadTailLeafNode(node, containerBlockNode, isTail) {\r\n    var result = node;\r\n    while (result) {\r\n        var sibling = node;\r\n        while (!(sibling = isTail ? node.nextSibling : node.previousSibling)) {\r\n            node = node.parentNode;\r\n            if (node == containerBlockNode) {\r\n                return result;\r\n            }\r\n        }\r\n        while (sibling) {\r\n            if (isBlockElement_1.default(sibling)) {\r\n                return result;\r\n            }\r\n            else if (getTagOfNode_1.default(sibling) == 'BR') {\r\n                return isTail ? sibling : result;\r\n            }\r\n            node = sibling;\r\n            sibling = isTail ? node.firstChild : node.lastChild;\r\n        }\r\n        result = node;\r\n    }\r\n    return result;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar applyTextStyle_1 = require(\"../utils/applyTextStyle\");\r\nvar isNodeAfter_1 = require(\"../utils/isNodeAfter\");\r\nvar Position_1 = require(\"../selection/Position\");\r\nvar positionUtils_1 = require(\"../deprecated/positionUtils\");\r\nvar positionUtils_2 = require(\"../deprecated/positionUtils\");\r\n/**\r\n * This presents an inline element that can be reprented by a single html node.\r\n * This serves as base for most inline element as it contains most implentation\r\n * of all operations that can happen on an inline element. Other sub inline elements mostly\r\n * just identify themself for a certain type\r\n */\r\nvar NodeInlineElement = /** @class */ (function () {\r\n    function NodeInlineElement(containerNode, parentBlock) {\r\n        this.containerNode = containerNode;\r\n        this.parentBlock = parentBlock;\r\n    }\r\n    /**\r\n     * The text content for this inline element\r\n     */\r\n    NodeInlineElement.prototype.getTextContent = function () {\r\n        // nodeValue is better way to retrieve content for a text. Others, just use textContent\r\n        return this.containerNode.nodeType == 3 /* Text */\r\n            ? this.containerNode.nodeValue\r\n            : this.containerNode.textContent;\r\n    };\r\n    /**\r\n     * Get the container node\r\n     */\r\n    NodeInlineElement.prototype.getContainerNode = function () {\r\n        return this.containerNode;\r\n    };\r\n    // Get the parent block\r\n    NodeInlineElement.prototype.getParentBlock = function () {\r\n        return this.parentBlock;\r\n    };\r\n    /**\r\n     * Get the start position of the inline element\r\n     */\r\n    NodeInlineElement.prototype.getStartPosition = function () {\r\n        // For a position, we always want it to point to a leaf node\r\n        // We should try to go get the lowest first child node from the container\r\n        return new Position_1.default(this.containerNode, 0).normalize();\r\n    };\r\n    /**\r\n     * Get the end position of the inline element\r\n     */\r\n    NodeInlineElement.prototype.getEndPosition = function () {\r\n        // For a position, we always want it to point to a leaf node\r\n        // We should try to go get the lowest last child node from the container\r\n        return new Position_1.default(this.containerNode, -1 /* End */).normalize();\r\n    };\r\n    /**\r\n     * Checks if this inline element is a textual inline element\r\n     */\r\n    NodeInlineElement.prototype.isTextualInlineElement = function () {\r\n        return this.containerNode && this.containerNode.nodeType == 3 /* Text */;\r\n    };\r\n    /**\r\n     * Checks if an inline element is after the current inline element\r\n     */\r\n    NodeInlineElement.prototype.isAfter = function (inlineElement) {\r\n        return inlineElement && isNodeAfter_1.default(this.containerNode, inlineElement.getContainerNode());\r\n    };\r\n    /**\r\n     * Checks if the given position is contained in the inline element\r\n     */\r\n    NodeInlineElement.prototype.contains = function (p) {\r\n        var start = this.getStartPosition();\r\n        var end = this.getEndPosition();\r\n        var pos = positionUtils_1.safeGetPosition(p);\r\n        return pos && pos.isAfter(start) && end.isAfter(pos);\r\n    };\r\n    /**\r\n     * Apply inline style to an inline element\r\n     */\r\n    NodeInlineElement.prototype.applyStyle = function (styler) {\r\n        applyTextStyle_1.default(this.containerNode, styler);\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Get the start point of the inline element\r\n     */\r\n    NodeInlineElement.prototype.getStartPoint = function () {\r\n        return positionUtils_2.toEditorPoint(this.getStartPosition());\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Get the end point of the inline element\r\n     */\r\n    NodeInlineElement.prototype.getEndPoint = function () {\r\n        return positionUtils_2.toEditorPoint(this.getEndPosition());\r\n    };\r\n    return NodeInlineElement;\r\n}());\r\nexports.default = NodeInlineElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar ZERO_WIDTH_SPACE = '\\u200B';\r\n/**\r\n * Apply inline style to current selection\r\n * @param editor The editor instance\r\n * @param callback The callback function to apply style\r\n */\r\nfunction applyInlineStyle(editor, callback) {\r\n    editor.focus();\r\n    var range = editor.getSelectionRange();\r\n    if (range && range.collapsed) {\r\n        var node = range.startContainer;\r\n        var isEmptySpan = roosterjs_editor_dom_1.getTagOfNode(node) == 'SPAN' &&\r\n            (!node.firstChild ||\r\n                (roosterjs_editor_dom_1.getTagOfNode(node.firstChild) == 'BR' && !node.firstChild.nextSibling));\r\n        if (isEmptySpan) {\r\n            editor.addUndoSnapshot();\r\n            callback(node);\r\n        }\r\n        else {\r\n            var isZWSNode = node &&\r\n                node.nodeType == 3 /* Text */ &&\r\n                node.nodeValue == ZERO_WIDTH_SPACE &&\r\n                roosterjs_editor_dom_1.getTagOfNode(node.parentNode) == 'SPAN';\r\n            if (!isZWSNode) {\r\n                editor.addUndoSnapshot();\r\n                // Create a new text node to hold the selection.\r\n                // Some content is needed to position selection into the span\r\n                // for here, we inject ZWS - zero width space\r\n                node = editor.getDocument().createTextNode(ZERO_WIDTH_SPACE);\r\n                range.insertNode(node);\r\n            }\r\n            roosterjs_editor_dom_1.applyTextStyle(node, callback);\r\n            editor.select(node, -1 /* End */);\r\n        }\r\n    }\r\n    else {\r\n        // This is start and end node that get the style. The start and end needs to be recorded so that selection\r\n        // can be re-applied post-applying style\r\n        editor.addUndoSnapshot(function () {\r\n            var firstNode;\r\n            var lastNode;\r\n            var contentTraverser = editor.getSelectionTraverser();\r\n            var inlineElement = contentTraverser && contentTraverser.currentInlineElement;\r\n            while (inlineElement) {\r\n                var nextInlineElement = contentTraverser.getNextInlineElement();\r\n                inlineElement.applyStyle(function (element) {\r\n                    callback(element);\r\n                    firstNode = firstNode || element;\r\n                    lastNode = element;\r\n                });\r\n                inlineElement = nextInlineElement;\r\n            }\r\n            if (firstNode && lastNode) {\r\n                editor.select(firstNode, -2 /* Before */, lastNode, -3 /* After */);\r\n            }\r\n        }, \"Format\" /* Format */);\r\n    }\r\n}\r\nexports.default = applyInlineStyle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getBlockElementAtNode_1 = require(\"../blockElements/getBlockElementAtNode\");\r\nvar getTagOfNode_1 = require(\"../utils/getTagOfNode\");\r\nvar ImageInlineElement_1 = require(\"./ImageInlineElement\");\r\nvar LinkInlineElement_1 = require(\"./LinkInlineElement\");\r\nvar NodeInlineElement_1 = require(\"./NodeInlineElement\");\r\nvar NodeInlineElement_2 = require(\"./NodeInlineElement\");\r\nfunction getInlineElementAtNode(parent, node) {\r\n    // An inline element has to be in a block element, get the block first and then resolve through the factory\r\n    var parentBlock = parent instanceof Node ? getBlockElementAtNode_1.default(parent, node) : parent;\r\n    return node && parentBlock && resolveInlineElement(node, parentBlock);\r\n}\r\nexports.default = getInlineElementAtNode;\r\n/**\r\n * Resolve an inline element by a leaf node\r\n * @param node The node to resolve from\r\n * @param parentBlock The parent block element\r\n */\r\nfunction resolveInlineElement(node, parentBlock) {\r\n    var nodeChain = [node];\r\n    for (var parent_1 = node.parentNode; parent_1 && parentBlock.contains(parent_1); parent_1 = parent_1.parentNode) {\r\n        nodeChain.push(parent_1);\r\n    }\r\n    var inlineElement;\r\n    for (var i = nodeChain.length - 1; i >= 0 && !inlineElement; i--) {\r\n        var currentNode = nodeChain[i];\r\n        var tag = getTagOfNode_1.default(currentNode);\r\n        if (tag == 'A') {\r\n            inlineElement = new LinkInlineElement_1.default(currentNode, parentBlock);\r\n        }\r\n        else if (tag == 'IMG') {\r\n            inlineElement = new ImageInlineElement_1.default(currentNode, parentBlock);\r\n        }\r\n        else if (currentNode.nodeType == 3 /* Text */) {\r\n            inlineElement = new NodeInlineElement_2.default(currentNode, parentBlock);\r\n        }\r\n    }\r\n    return inlineElement || new NodeInlineElement_1.default(node, parentBlock);\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Checks if node1 is after node2\r\n * @param node1 The node to check if it is after another node\r\n * @param node2 The node to check if another node is after this one\r\n * @returns True if node1 is after node2, otherwise false\r\n */\r\nfunction isNodeAfter(node1, node2) {\r\n    return !!(node1 &&\r\n        node2 &&\r\n        (node2.compareDocumentPosition(node1) & 4 /* Following */) ==\r\n            4 /* Following */);\r\n}\r\nexports.default = isNodeAfter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Position_1 = require(\"../selection/Position\");\r\n/**\r\n * @deprecated Do not use\r\n */\r\nfunction toEditorPoint(position) {\r\n    return {\r\n        containerNode: position.node,\r\n        offset: position.offset == 0 && position.isAtEnd ? 1 : position.offset,\r\n    };\r\n}\r\nexports.toEditorPoint = toEditorPoint;\r\n/**\r\n * @deprecated Do not use\r\n */\r\nfunction safeGetPosition(p) {\r\n    return p && p.containerNode\r\n        ? new Position_1.default(p.containerNode, p.offset)\r\n        : p;\r\n}\r\nexports.safeGetPosition = safeGetPosition;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar isNodeAfter_1 = require(\"./isNodeAfter\");\r\n/**\r\n * Split parent node of the given node before/after the given node.\r\n * When a parent node contains [A,B,C] and pass B as the given node,\r\n * If split before, the new nodes will be [A][B,C] and returns [A];\r\n * otherwise, it will be [A,B][C] and returns [C].\r\n * @param node The node to split before/after\r\n * @param splitBefore Whether split before or after\r\n * @param removeEmptyNewNode If the new node is empty (even then only child is space or ZER_WIDTH_SPACE),\r\n * we remove it. @default false\r\n * @returns The new parent node\r\n */\r\nfunction splitParentNode(node, splitBefore) {\r\n    if (!node || !node.parentNode) {\r\n        return null;\r\n    }\r\n    var parentNode = node.parentNode;\r\n    var newParent = parentNode.cloneNode(false /*deep*/);\r\n    newParent.removeAttribute('id');\r\n    if (splitBefore) {\r\n        while (parentNode.firstChild && parentNode.firstChild != node) {\r\n            newParent.appendChild(parentNode.firstChild);\r\n        }\r\n    }\r\n    else {\r\n        while (node.nextSibling) {\r\n            newParent.appendChild(node.nextSibling);\r\n        }\r\n    }\r\n    // When the only child of new parent is ZERO_WIDTH_SPACE, we can still prevent keeping it by set removeEmptyNewNode to true\r\n    if (newParent.firstChild && newParent.innerHTML != '') {\r\n        parentNode.parentNode.insertBefore(newParent, splitBefore ? parentNode : parentNode.nextSibling);\r\n    }\r\n    else {\r\n        newParent = null;\r\n    }\r\n    return newParent;\r\n}\r\nexports.default = splitParentNode;\r\n/**\r\n * Split parent node by a balanced node range\r\n * @param nodes The nodes to split from. If only one node is passed, split it from all its siblings.\r\n * If two or nodes are passed, will split before the first one and after the last one, all other nodes will be ignored\r\n * @returns The parent node of the given node range if the given nodes are balanced, otherwise null\r\n */\r\nfunction splitBalancedNodeRange(nodes) {\r\n    var start = nodes instanceof Array ? nodes[0] : nodes;\r\n    var end = nodes instanceof Array ? nodes[nodes.length - 1] : nodes;\r\n    var parentNode = start && end && start.parentNode == end.parentNode ? start.parentNode : null;\r\n    if (parentNode) {\r\n        if (isNodeAfter_1.default(start, end)) {\r\n            var temp = end;\r\n            end = start;\r\n            start = temp;\r\n        }\r\n        splitParentNode(start, true /*splitBefore*/);\r\n        splitParentNode(end, false /*splitBefore*/);\r\n    }\r\n    return parentNode;\r\n}\r\nexports.splitBalancedNodeRange = splitBalancedNodeRange;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar fromHtml_1 = require(\"./fromHtml\");\r\nfunction wrap(nodes, wrapper) {\r\n    nodes = !nodes ? [] : nodes instanceof Node ? [nodes] : nodes;\r\n    if (nodes.length == 0 || !nodes[0]) {\r\n        return null;\r\n    }\r\n    if (!(wrapper instanceof Element)) {\r\n        var document_1 = nodes[0].ownerDocument;\r\n        wrapper = wrapper || 'div';\r\n        wrapper = /^\\w+$/.test(wrapper)\r\n            ? document_1.createElement(wrapper)\r\n            : fromHtml_1.default(wrapper, document_1)[0];\r\n    }\r\n    var parentNode = nodes[0].parentNode;\r\n    if (parentNode) {\r\n        parentNode.insertBefore(wrapper, nodes[0]);\r\n    }\r\n    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\r\n        var node = nodes_1[_i];\r\n        wrapper.appendChild(node);\r\n    }\r\n    return wrapper;\r\n}\r\nexports.default = wrap;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar applyTextStyle_1 = require(\"../utils/applyTextStyle\");\r\nvar createRange_1 = require(\"../selection/createRange\");\r\nvar Position_1 = require(\"../selection/Position\");\r\nvar getLeafSibling_1 = require(\"../utils/getLeafSibling\");\r\nvar positionUtils_1 = require(\"../deprecated/positionUtils\");\r\nvar positionUtils_2 = require(\"../deprecated/positionUtils\");\r\n/**\r\n * This is a special version of inline element that identifies a section of an inline element\r\n * We often have the need to cut an inline element in half and perform some operation only on half of an inline element\r\n * i.e. users select only some text of a text node and apply format, in that case, format has to happen on partial of an inline element\r\n * PartialInlineElement is implemented in a way that decorate another full inline element with its own override on methods like isAfter\r\n * It also offers some special methods that others don't have, i.e. nextInlineElement etc.\r\n */\r\nvar PartialInlineElement = /** @class */ (function () {\r\n    function PartialInlineElement(inlineElement, start, end) {\r\n        this.inlineElement = inlineElement;\r\n        this.start = positionUtils_1.safeGetPosition(start);\r\n        this.end = positionUtils_1.safeGetPosition(end);\r\n    }\r\n    /**\r\n     * Get the full inline element that this partial inline decorates\r\n     */\r\n    PartialInlineElement.prototype.getDecoratedInline = function () {\r\n        return this.inlineElement;\r\n    };\r\n    /**\r\n     * Gets the container node\r\n     */\r\n    PartialInlineElement.prototype.getContainerNode = function () {\r\n        return this.inlineElement.getContainerNode();\r\n    };\r\n    /**\r\n     * Gets the parent block\r\n     */\r\n    PartialInlineElement.prototype.getParentBlock = function () {\r\n        return this.inlineElement.getParentBlock();\r\n    };\r\n    /**\r\n     * Gets the text content\r\n     */\r\n    PartialInlineElement.prototype.getTextContent = function () {\r\n        var range = createRange_1.default(this.getStartPosition(), this.getEndPosition());\r\n        return range.toString();\r\n    };\r\n    /**\r\n     * Get start position of this inline element.\r\n     */\r\n    PartialInlineElement.prototype.getStartPosition = function () {\r\n        return this.start || this.inlineElement.getStartPosition();\r\n    };\r\n    /**\r\n     * Get end position of this inline element.\r\n     */\r\n    PartialInlineElement.prototype.getEndPosition = function () {\r\n        return this.end || this.inlineElement.getEndPosition();\r\n    };\r\n    Object.defineProperty(PartialInlineElement.prototype, \"nextInlineElement\", {\r\n        /**\r\n         * Get next partial inline element if it is not at the end boundary yet\r\n         */\r\n        get: function () {\r\n            return this.end && new PartialInlineElement(this.inlineElement, this.end, null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PartialInlineElement.prototype, \"previousInlineElement\", {\r\n        /**\r\n         * Get previous partial inline element if it is not at the begin boundary yet\r\n         */\r\n        get: function () {\r\n            return this.start && new PartialInlineElement(this.inlineElement, null, this.start);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if it contains a position\r\n     */\r\n    PartialInlineElement.prototype.contains = function (p) {\r\n        var pos = positionUtils_1.safeGetPosition(p);\r\n        return pos && pos.isAfter(this.getStartPosition()) && this.getEndPosition().isAfter(pos);\r\n    };\r\n    /**\r\n     * Checks if this inline element is a textual inline element\r\n     */\r\n    PartialInlineElement.prototype.isTextualInlineElement = function () {\r\n        return this.inlineElement && this.inlineElement.isTextualInlineElement();\r\n    };\r\n    /**\r\n     * Check if this inline element is after the other inline element\r\n     */\r\n    PartialInlineElement.prototype.isAfter = function (inlineElement) {\r\n        var thisStart = this.getStartPosition();\r\n        var otherEnd = inlineElement && inlineElement.getEndPosition();\r\n        return otherEnd && (thisStart.isAfter(otherEnd) || thisStart.equalTo(otherEnd));\r\n    };\r\n    /**\r\n     * apply style\r\n     */\r\n    PartialInlineElement.prototype.applyStyle = function (styler) {\r\n        var from = this.getStartPosition().normalize();\r\n        var to = this.getEndPosition().normalize();\r\n        var container = this.getContainerNode();\r\n        if (from.isAtEnd) {\r\n            var nextNode = getLeafSibling_1.getNextLeafSibling(container, from.node);\r\n            from = nextNode ? new Position_1.default(nextNode, 0 /* Begin */) : null;\r\n        }\r\n        if (to.offset == 0) {\r\n            var previousNode = getLeafSibling_1.getPreviousLeafSibling(container, to.node);\r\n            to = previousNode ? new Position_1.default(previousNode, -1 /* End */) : null;\r\n        }\r\n        applyTextStyle_1.default(container, styler, from, to);\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Gets the start point\r\n     */\r\n    PartialInlineElement.prototype.getStartPoint = function () {\r\n        return positionUtils_2.toEditorPoint(this.getStartPosition());\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Gets the end point\r\n     */\r\n    PartialInlineElement.prototype.getEndPoint = function () {\r\n        return positionUtils_2.toEditorPoint(this.getEndPosition());\r\n    };\r\n    return PartialInlineElement;\r\n}());\r\nexports.default = PartialInlineElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getInlineElementAtNode_1 = require(\"./getInlineElementAtNode\");\r\nvar PartialInlineElement_1 = require(\"./PartialInlineElement\");\r\nvar shouldSkipNode_1 = require(\"../utils/shouldSkipNode\");\r\nvar getLeafSibling_1 = require(\"../utils/getLeafSibling\");\r\n/**\r\n * Get inline element before a position\r\n * This is mostly used when we want to get the inline element before selection/cursor\r\n * There is a possible that the cursor is in middle of an inline element (i.e. mid of a text node)\r\n * in this case, we only want to return what is before cursor (a partial of an inline) to indicate\r\n * that we're in middle.\r\n * @param root Root node of current scope, use for create InlineElement\r\n * @param position The position to get InlineElement before\r\n */\r\nfunction getInlineElementBefore(root, position) {\r\n    return getInlineElementBeforeAfter(root, position, false /*isAfter*/);\r\n}\r\nexports.getInlineElementBefore = getInlineElementBefore;\r\n/**\r\n * Get inline element after a position\r\n * This is mostly used when we want to get the inline element after selection/cursor\r\n * There is a possible that the cursor is in middle of an inline element (i.e. mid of a text node)\r\n * in this case, we only want to return what is before cursor (a partial of an inline) to indicate\r\n * that we're in middle.\r\n * @param root Root node of current scope, use for create InlineElement\r\n * @param position The position to get InlineElement after\r\n */\r\nfunction getInlineElementAfter(root, position) {\r\n    return getInlineElementBeforeAfter(root, position, true /*isAfter*/);\r\n}\r\nexports.getInlineElementAfter = getInlineElementAfter;\r\nfunction getInlineElementBeforeAfter(root, position, isAfter) {\r\n    if (!root || !position || !position.node) {\r\n        return null;\r\n    }\r\n    position = position.normalize();\r\n    var node = position.node, offset = position.offset, isAtEnd = position.isAtEnd;\r\n    var isPartial = false;\r\n    if ((!isAfter && offset == 0 && !isAtEnd) || (isAfter && isAtEnd)) {\r\n        node = getLeafSibling_1.getLeafSibling(root, node, isAfter);\r\n    }\r\n    else if (node.nodeType == 3 /* Text */ &&\r\n        ((!isAfter && !isAtEnd) || (isAfter && offset > 0))) {\r\n        isPartial = true;\r\n    }\r\n    if (node && shouldSkipNode_1.default(node)) {\r\n        node = getLeafSibling_1.getLeafSibling(root, node, isAfter);\r\n    }\r\n    var inlineElement = getInlineElementAtNode_1.default(root, node);\r\n    if (inlineElement && (isPartial || inlineElement.contains(position))) {\r\n        inlineElement = isAfter\r\n            ? new PartialInlineElement_1.default(inlineElement, position, null)\r\n            : new PartialInlineElement_1.default(inlineElement, null, position);\r\n    }\r\n    return inlineElement;\r\n}\r\nexports.getInlineElementBeforeAfter = getInlineElementBeforeAfter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getInlineElementAtNode_1 = require(\"./getInlineElementAtNode\");\r\nvar PartialInlineElement_1 = require(\"./PartialInlineElement\");\r\nvar getLeafSibling_1 = require(\"../utils/getLeafSibling\");\r\nfunction getNextPreviousInlineElement(rootNode, current, isNext) {\r\n    if (!current) {\r\n        return null;\r\n    }\r\n    if (current instanceof PartialInlineElement_1.default) {\r\n        // if current is partial, get the the othe half of the inline unless it is no more\r\n        var result = isNext ? current.nextInlineElement : current.previousInlineElement;\r\n        if (result) {\r\n            return result;\r\n        }\r\n    }\r\n    // Get a leaf node after startNode and use that base to find next inline\r\n    var startNode = current.getContainerNode();\r\n    startNode = getLeafSibling_1.getLeafSibling(rootNode, startNode, isNext);\r\n    return getInlineElementAtNode_1.default(rootNode, startNode);\r\n}\r\nexports.default = getNextPreviousInlineElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar contains_1 = require(\"./contains\");\r\nvar splitParentNode_1 = require(\"./splitParentNode\");\r\n/**\r\n * Collapse nodes within the given start and end nodes to their common ascenstor node,\r\n * split parent nodes if necessary\r\n * @param root The root node of the scope\r\n * @param start The start node\r\n * @param end The end node\r\n * @param canSplitParent True to allow split parent node there are nodes before start or after end under the same parent\r\n * and the returned nodes will be all nodes from start trhough end after splitting\r\n * False to disallow split parent\r\n * @returns When cansplitParent is true, returns all node from start through end after splitting,\r\n * otherwise just return start and end\r\n */\r\nfunction collapseNodes(root, start, end, canSplitParent) {\r\n    if (!contains_1.default(root, start) || !contains_1.default(root, end)) {\r\n        return [];\r\n    }\r\n    start = collapse(root, start, end, true /*isStart*/, canSplitParent);\r\n    end = collapse(root, end, start, false /*isStart*/, canSplitParent);\r\n    if (contains_1.default(start, end, true /*treateSameNodeAsContain*/)) {\r\n        return [start];\r\n    }\r\n    else if (contains_1.default(end, start)) {\r\n        return [end];\r\n    }\r\n    else if (start.parentNode == end.parentNode) {\r\n        var nodes = [].slice.call(start.parentNode.childNodes);\r\n        var startIndex = nodes.indexOf(start);\r\n        var endIndex = nodes.indexOf(end);\r\n        return nodes.slice(startIndex, endIndex + 1);\r\n    }\r\n    else {\r\n        return [start, end];\r\n    }\r\n}\r\nexports.default = collapseNodes;\r\nfunction collapse(root, node, ref, isStart, canSplitParent) {\r\n    while (node.parentNode != root && !contains_1.default(node.parentNode, ref)) {\r\n        if ((isStart && node.previousSibling) || (!isStart && node.nextSibling)) {\r\n            if (!canSplitParent) {\r\n                break;\r\n            }\r\n            splitParentNode_1.default(node, isStart);\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n    return node;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getTagOfNode_1 = require(\"./getTagOfNode\");\r\nvar BLOCK_ELEMENT_TAGS = 'ADDRESS,ARTICLE,ASIDE,BLOCKQUOTE,CANVAS,DD,DIV,DL,DT,FIELDSET,FIGCAPTION,FIGURE,FOOTER,FORM,H1,H2,H3,H4,H5,H6,HEADER,HR,LI,MAIN,NAV,NOSCRIPT,OL,OUTPUT,P,PRE,SECTION,TABLE,TD,TH,TFOOT,UL,VIDEO'.split(',');\r\nvar BLOCK_DISPLAY_STYLES = ['block', 'list-item', 'table-cell'];\r\n/**\r\n * Checks if the node is a block like element. Block like element are usually those P, DIV, LI, TD etc.\r\n * @param node The node to check\r\n * @returns True if the node is a block element, otherwise false\r\n */\r\nfunction isBlockElement(node) {\r\n    var tag = getTagOfNode_1.default(node);\r\n    return !!(tag &&\r\n        (BLOCK_DISPLAY_STYLES.indexOf(node.style.display) >= 0 ||\r\n            BLOCK_ELEMENT_TAGS.indexOf(tag) >= 0));\r\n}\r\nexports.default = isBlockElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar contains_1 = require(\"./contains\");\r\n/**\r\n * Find closest element ancestor start from the given node which matches the given selector\r\n * @param node Find ancestor start from this node\r\n * @param root Root node where the search should stop at. The return value can never be this node\r\n * @param selector The expected selector. If null, return the first HTML Element found from start node\r\n * @returns An HTML element which matches the given selector. If the given start node matches the selector,\r\n * returns the given node\r\n */\r\nfunction findClosestElementAncestor(node, root, selector) {\r\n    node = !node ? null : node.nodeType == 1 /* Element */ ? node : node.parentNode;\r\n    var element = node && node.nodeType == 1 /* Element */ ? node : null;\r\n    if (element && selector) {\r\n        if (element.closest) {\r\n            element = element.closest(selector);\r\n        }\r\n        else {\r\n            while (element &&\r\n                element != root &&\r\n                !(element.matches || element.msMatchesSelector).call(element, selector)) {\r\n                element = element.parentElement;\r\n            }\r\n        }\r\n    }\r\n    return !root || contains_1.default(root, element) ? element : null;\r\n}\r\nexports.default = findClosestElementAncestor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getTagOfNode_1 = require(\"./getTagOfNode\");\r\nvar Position_1 = require(\"../selection/Position\");\r\nvar wrap_1 = require(\"./wrap\");\r\nvar getLeafSibling_1 = require(\"./getLeafSibling\");\r\nvar splitParentNode_1 = require(\"./splitParentNode\");\r\nfunction applyTextStyle(container, styler, from, to) {\r\n    if (from === void 0) { from = new Position_1.default(container, 0 /* Begin */).normalize(); }\r\n    if (to === void 0) { to = new Position_1.default(container, -1 /* End */).normalize(); }\r\n    var formatNodes = [];\r\n    while (from && to && to.isAfter(from)) {\r\n        var formatNode = from.node;\r\n        var parentTag = getTagOfNode_1.default(formatNode.parentNode);\r\n        // The code below modifies DOM. Need to get the next sibling first otherwise you won't be able to reliably get a good next sibling node\r\n        var nextNode = getLeafSibling_1.getNextLeafSibling(container, formatNode);\r\n        if (formatNode.nodeType == 3 /* Text */ && ['TR', 'TABLE'].indexOf(parentTag) < 0) {\r\n            if (formatNode == to.node && !to.isAtEnd) {\r\n                formatNode = splitTextNode(formatNode, to.offset, true /*returnFirstPart*/);\r\n            }\r\n            if (from.offset > 0) {\r\n                formatNode = splitTextNode(formatNode, from.offset, false /*returnFirstPart*/);\r\n            }\r\n            formatNodes.push(formatNode);\r\n        }\r\n        from = nextNode && new Position_1.default(nextNode, 0 /* Begin */);\r\n    }\r\n    if (formatNodes.length > 0) {\r\n        if (formatNodes.every(function (node) { return node.parentNode == formatNodes[0].parentNode; })) {\r\n            var newNode_1 = formatNodes.shift();\r\n            formatNodes.forEach(function (node) {\r\n                newNode_1.nodeValue += node.nodeValue;\r\n                node.parentNode.removeChild(node);\r\n            });\r\n            formatNodes = [newNode_1];\r\n        }\r\n        formatNodes.forEach(function (node) {\r\n            return styler(getTagOfNode_1.default(node.parentNode) == 'SPAN'\r\n                ? splitParentNode_1.splitBalancedNodeRange(node)\r\n                : wrap_1.default(node, 'span'));\r\n        });\r\n    }\r\n}\r\nexports.default = applyTextStyle;\r\nfunction splitTextNode(textNode, offset, returnFirstPart) {\r\n    var firstPart = textNode.nodeValue.substr(0, offset);\r\n    var secondPart = textNode.nodeValue.substr(offset);\r\n    var newNode = textNode.ownerDocument.createTextNode(returnFirstPart ? firstPart : secondPart);\r\n    textNode.nodeValue = returnFirstPart ? secondPart : firstPart;\r\n    textNode.parentNode.insertBefore(newNode, returnFirstPart ? textNode : textNode.nextSibling);\r\n    return newNode;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getComputedStyles_1 = require(\"./getComputedStyles\");\r\nvar CRLF = /^[\\r\\n]+$/gm;\r\n/**\r\n * Skip a node when any of following conditions are true\r\n * - it is neither Element nor Text\r\n * - it is a text node but is empty\r\n * - it is a text node but contains just CRLF (noisy text node that often comes in-between elements)\r\n * - has a display:none\r\n */\r\nfunction shouldSkipNode(node) {\r\n    if (node.nodeType == 3 /* Text */) {\r\n        return !node.nodeValue || node.textContent == '' || CRLF.test(node.nodeValue);\r\n    }\r\n    else if (node.nodeType == 1 /* Element */) {\r\n        return getComputedStyles_1.getComputedStyle(node, 'display') == 'none';\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\nexports.default = shouldSkipNode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar findClosestElementAncestor_1 = require(\"./findClosestElementAncestor\");\r\n/**\r\n * Get computed styles of a node\r\n * @param node The node to get computed styles from\r\n * @param styleNames Names of style to get, can be a single name or an array.\r\n * Default value is font-family, font-size, color, background-color\r\n * @returns An array of the computed styles\r\n */\r\nfunction getComputedStyles(node, styleNames) {\r\n    if (styleNames === void 0) { styleNames = ['font-family', 'font-size', 'color', 'background-color']; }\r\n    var element = findClosestElementAncestor_1.default(node);\r\n    var result = [];\r\n    styleNames = styleNames instanceof Array ? styleNames : [styleNames];\r\n    if (element) {\r\n        var win = element.ownerDocument.defaultView || window;\r\n        var styles = win.getComputedStyle(element);\r\n        if (styles) {\r\n            for (var _i = 0, styleNames_1 = styleNames; _i < styleNames_1.length; _i++) {\r\n                var style = styleNames_1[_i];\r\n                var value = (styles.getPropertyValue(style) || '').toLowerCase();\r\n                value = style == 'font-size' ? px2Pt(value) : value;\r\n                result.push(value);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.default = getComputedStyles;\r\n/**\r\n * A shortcut for getComputedStyles() when only one style is to be retrieved\r\n * @param node The node to get style from\r\n * @param styleName The style name\r\n * @returns The style value\r\n */\r\nfunction getComputedStyle(node, styleName) {\r\n    return getComputedStyles(node, styleName)[0] || '';\r\n}\r\nexports.getComputedStyle = getComputedStyle;\r\nfunction px2Pt(px) {\r\n    if (px && px.indexOf('px') == px.length - 2) {\r\n        // Edge may not handle the floating computing well which causes the calculated value is a little less than actual value\r\n        // So add 0.05 to fix it\r\n        return Math.round(parseFloat(px) * 75 + 0.05) / 100 + 'pt';\r\n    }\r\n    return px;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Gets the cached event data by cache key from event object if there is already one.\r\n * Otherwise, call getter function to create one, and cache it.\r\n * @param event The event object\r\n * @param key Cache key string, need to be unique\r\n * @param getter Getter function to get the object when it is not in cache yet\r\n */\r\nfunction cacheGetEventData(event, key, getter) {\r\n    var result = event && event.eventDataCache && event.eventDataCache.hasOwnProperty(key)\r\n        ? event.eventDataCache[key]\r\n        : getter();\r\n    if (event) {\r\n        event.eventDataCache = event.eventDataCache || {};\r\n        event.eventDataCache[key] = result;\r\n    }\r\n    return result;\r\n}\r\nexports.default = cacheGetEventData;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction replaceWithNode(editor, textOrRange, node, exactMatch, searcher) {\r\n    // Make sure the text and node is valid\r\n    if (!textOrRange || !node) {\r\n        return false;\r\n    }\r\n    var range;\r\n    if (typeof textOrRange == 'string') {\r\n        searcher = searcher || editor.getContentSearcherOfCursor();\r\n        range = searcher && searcher.getRangeFromText(textOrRange, exactMatch);\r\n    }\r\n    else {\r\n        range = textOrRange;\r\n    }\r\n    if (range) {\r\n        var backupRange = editor.getSelectionRange();\r\n        range.deleteContents();\r\n        range.insertNode(node);\r\n        if (exactMatch) {\r\n            editor.select(node, -3 /* After */);\r\n        }\r\n        else {\r\n            editor.select(backupRange);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.default = replaceWithNode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar TEMP_NODE_CLASS = 'ROOSTERJS_TEMP_NODE_FOR_LIST';\r\nvar TEMP_NODE_HTML = \"<img class=\\\"\" + TEMP_NODE_CLASS + \"\\\">\";\r\n/**\r\n * Browsers don't handle bullet/numbering list well, especially the formats when switching list statue\r\n * So we workaround it by always adding format to list element\r\n */\r\nfunction processList(editor, command) {\r\n    if (roosterjs_editor_dom_1.Browser.isChrome) {\r\n        workaroundForChrome(editor);\r\n    }\r\n    var currentNode = editor.getElementAtCursor();\r\n    var currentFormat = roosterjs_editor_dom_1.getComputedStyles(currentNode);\r\n    var existingList = editor.getElementAtCursor('OL,UL');\r\n    editor.getDocument().execCommand(command, false, null);\r\n    editor.queryElements('.' + TEMP_NODE_CLASS, function (node) { return editor.deleteNode(node); });\r\n    var newList = editor.getElementAtCursor('OL,UL');\r\n    if (newList == existingList) {\r\n        newList = null;\r\n    }\r\n    // If this is in a new number list, need to adjust the format of numbers according to its content\r\n    if (newList && roosterjs_editor_dom_1.getTagOfNode(newList) == 'OL') {\r\n        var LIs = [].slice.call(newList.childNodes).filter(function (node) { return roosterjs_editor_dom_1.getTagOfNode(node) == 'LI'; });\r\n        if (LIs.length == 1 && roosterjs_editor_dom_1.isNodeEmpty(LIs[0], true /*trim*/)) {\r\n            // When there's only one LI child element which has empty content, it means this LI is just created.\r\n            // We just format it with current format\r\n            applyListFormat(LIs[0], currentFormat);\r\n        }\r\n        else {\r\n            // Otherwise, apply the format of first child non-empty element (if any) to LI node\r\n            for (var _i = 0, LIs_1 = LIs; _i < LIs_1.length; _i++) {\r\n                var li = LIs_1[_i];\r\n                var formatNode = roosterjs_editor_dom_1.getFirstLeafNode(li);\r\n                if (formatNode) {\r\n                    applyListFormat(li, roosterjs_editor_dom_1.getComputedStyles(formatNode));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return newList;\r\n}\r\nexports.default = processList;\r\nfunction applyListFormat(node, formats) {\r\n    roosterjs_editor_dom_1.applyFormat(node, {\r\n        fontFamily: formats[0],\r\n        fontSize: formats[1],\r\n        textColor: formats[2],\r\n        backgroundColor: formats[3],\r\n    });\r\n}\r\nfunction workaroundForChrome(editor) {\r\n    var traverser = editor.getSelectionTraverser();\r\n    var block = traverser && traverser.currentBlockElement;\r\n    while (block) {\r\n        var container = block.getStartNode();\r\n        if (container && !roosterjs_editor_dom_1.isNodeEmpty(container)) {\r\n            // Add a temp <IMG> tag before all other nodes in the block to avoid Chrome remove existing format when toggle list\r\n            var tempNode = roosterjs_editor_dom_1.fromHtml(TEMP_NODE_HTML, editor.getDocument())[0];\r\n            if (roosterjs_editor_dom_1.isVoidHtmlElement(container) || !roosterjs_editor_dom_1.isBlockElement(container)) {\r\n                container.parentNode.insertBefore(tempNode, container);\r\n            }\r\n            else {\r\n                container.insertBefore(tempNode, container.firstChild);\r\n            }\r\n        }\r\n        block = traverser.getNextBlockElement();\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar editor;\r\nfunction getCurrentEditor() {\r\n    return editor;\r\n}\r\nexports.default = getCurrentEditor;\r\nfunction setCurrentEditor(newEditor) {\r\n    if (editor) {\r\n        editor.dispose();\r\n    }\r\n    editor = newEditor;\r\n}\r\nexports.setCurrentEditor = setCurrentEditor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar contains_1 = require(\"../utils/contains\");\r\nvar getNextPreviousInlineElement_1 = require(\"../inlineElements/getNextPreviousInlineElement\");\r\nvar isNodeAfter_1 = require(\"../utils/isNodeAfter\");\r\nvar getFirstLastInlineElement_1 = require(\"../inlineElements/getFirstLastInlineElement\");\r\n/**\r\n * This presents a content block that can be reprented by a single html block type element.\r\n * In most cases, it corresponds to an HTML block level element, i.e. P, DIV, LI, TD etc.\r\n */\r\nvar NodeBlockElement = /** @class */ (function () {\r\n    function NodeBlockElement(element) {\r\n        this.element = element;\r\n    }\r\n    /**\r\n     * Collapse this element to a single DOM element.\r\n     * If the content nodes are separated in different root nodes, wrap them to a single node\r\n     * If the content nodes are included in root node with other nodes, split root node\r\n     */\r\n    NodeBlockElement.prototype.collapseToSingleElement = function () {\r\n        return this.element;\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Get the text content in the block\r\n     */\r\n    NodeBlockElement.prototype.getTextContent = function () {\r\n        return this.element.textContent;\r\n    };\r\n    /**\r\n     * Get the start node of the block\r\n     * For NodeBlockElement, start and end essentially refers to same node\r\n     */\r\n    NodeBlockElement.prototype.getStartNode = function () {\r\n        return this.element;\r\n    };\r\n    /**\r\n     * Get the end node of the block\r\n     * For NodeBlockElement, start and end essentially refers to same node\r\n     */\r\n    NodeBlockElement.prototype.getEndNode = function () {\r\n        return this.element;\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Get all nodes represented in a Node array\r\n     */\r\n    NodeBlockElement.prototype.getContentNodes = function () {\r\n        return [this.element];\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Get the first inline element in the block\r\n     */\r\n    NodeBlockElement.prototype.getFirstInlineElement = function () {\r\n        if (!this.firstInline) {\r\n            this.firstInline = getFirstLastInlineElement_1.getFirstInlineElement(this.element);\r\n        }\r\n        return this.firstInline;\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Get the last inline element in the block\r\n     */\r\n    NodeBlockElement.prototype.getLastInlineElement = function () {\r\n        if (!this.lastInline) {\r\n            this.lastInline = getFirstLastInlineElement_1.getLastInlineElement(this.element);\r\n        }\r\n        return this.lastInline;\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Gets all inline in the block\r\n     */\r\n    NodeBlockElement.prototype.getInlineElements = function () {\r\n        var allInlines = [];\r\n        var startInline = this.getFirstInlineElement();\r\n        while (startInline) {\r\n            allInlines.push(startInline);\r\n            startInline = getNextPreviousInlineElement_1.default(this.element, startInline, true /*isNext*/);\r\n        }\r\n        return allInlines;\r\n    };\r\n    /**\r\n     * Checks if it refers to same block\r\n     */\r\n    NodeBlockElement.prototype.equals = function (blockElement) {\r\n        // Ideally there is only one unique way to generate a block so we only need to compare the startNode\r\n        return this.element == blockElement.getStartNode();\r\n    };\r\n    /**\r\n     * Checks if a block is after the current block\r\n     */\r\n    NodeBlockElement.prototype.isAfter = function (blockElement) {\r\n        // if the block's startNode is after current node endEnd, we say it is after\r\n        return isNodeAfter_1.default(this.element, blockElement.getEndNode());\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Checks if an inline element falls within the block\r\n     */\r\n    NodeBlockElement.prototype.isInBlock = function (inlineElement) {\r\n        return this.contains(inlineElement.getContainerNode());\r\n    };\r\n    /**\r\n     * Checks if a certain html node is within the block\r\n     */\r\n    NodeBlockElement.prototype.contains = function (node) {\r\n        return contains_1.default(this.element, node, true /*treatSameNodeAsContain*/);\r\n    };\r\n    return NodeBlockElement;\r\n}());\r\nexports.default = NodeBlockElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar collapseNodes_1 = require(\"../utils/collapseNodes\");\r\nvar contains_1 = require(\"../utils/contains\");\r\nvar createRange_1 = require(\"../selection/createRange\");\r\nvar getInlineElementAtNode_1 = require(\"../inlineElements/getInlineElementAtNode\");\r\nvar getNextPreviousInlineElement_1 = require(\"../inlineElements/getNextPreviousInlineElement\");\r\nvar getTagOfNode_1 = require(\"../utils/getTagOfNode\");\r\nvar isBlockElement_1 = require(\"../utils/isBlockElement\");\r\nvar isNodeAfter_1 = require(\"../utils/isNodeAfter\");\r\nvar wrap_1 = require(\"../utils/wrap\");\r\nvar splitParentNode_1 = require(\"../utils/splitParentNode\");\r\n/**\r\n * This reprents a block that is identified by a start and end node\r\n * This is for cases like <root>Hello<BR>World</root>\r\n * in that case, Hello<BR> is a block, World is another block\r\n * Such block cannot be represented by a NodeBlockElement since they don't chained up\r\n * to a single parent node, instead they have a start and end\r\n * This start and end must be in same sibling level and have same parent in DOM tree\r\n */\r\nvar StartEndBlockElement = /** @class */ (function () {\r\n    function StartEndBlockElement(rootNode, startNode, endNode) {\r\n        this.rootNode = rootNode;\r\n        this.startNode = startNode;\r\n        this.endNode = endNode;\r\n    }\r\n    StartEndBlockElement.getBlockContext = function (node) {\r\n        while (node && !isBlockElement_1.default(node)) {\r\n            node = node.parentNode;\r\n        }\r\n        return node;\r\n    };\r\n    /**\r\n     * Collapse this element to a single DOM element.\r\n     * If the content nodes are separated in different root nodes, wrap them to a single node\r\n     * If the content nodes are included in root node with other nodes, split root node\r\n     */\r\n    StartEndBlockElement.prototype.collapseToSingleElement = function () {\r\n        var nodes = collapseNodes_1.default(StartEndBlockElement.getBlockContext(this.startNode), this.startNode, this.endNode, true /*canSplitParent*/);\r\n        var blockContext = StartEndBlockElement.getBlockContext(this.startNode);\r\n        while (nodes[0] &&\r\n            nodes[0] != blockContext &&\r\n            nodes[0].parentNode != this.rootNode &&\r\n            ['TD', 'TH'].indexOf(getTagOfNode_1.default(nodes[0].parentNode)) < 0) {\r\n            nodes = [splitParentNode_1.splitBalancedNodeRange(nodes)];\r\n        }\r\n        return nodes.length == 1 && isBlockElement_1.default(nodes[0])\r\n            ? nodes[0]\r\n            : wrap_1.default(nodes);\r\n    };\r\n    /**\r\n     * Gets the start node\r\n     */\r\n    StartEndBlockElement.prototype.getStartNode = function () {\r\n        return this.startNode;\r\n    };\r\n    /**\r\n     * Gets the end node\r\n     */\r\n    StartEndBlockElement.prototype.getEndNode = function () {\r\n        return this.endNode;\r\n    };\r\n    /**\r\n     * Checks equals of two blocks\r\n     */\r\n    StartEndBlockElement.prototype.equals = function (blockElement) {\r\n        return (this.startNode == blockElement.getStartNode() &&\r\n            this.endNode == blockElement.getEndNode());\r\n    };\r\n    /**\r\n     * Checks if another block is after this current\r\n     */\r\n    StartEndBlockElement.prototype.isAfter = function (blockElement) {\r\n        return isNodeAfter_1.default(this.getStartNode(), blockElement.getEndNode());\r\n    };\r\n    /**\r\n     * Checks if an Html node is contained within the block\r\n     */\r\n    StartEndBlockElement.prototype.contains = function (node) {\r\n        return (contains_1.default(this.startNode, node, true /*treatSameNodeAsContain*/) ||\r\n            contains_1.default(this.endNode, node, true /*treatSameNodeAsContain*/) ||\r\n            (isNodeAfter_1.default(node, this.startNode) && isNodeAfter_1.default(this.endNode, node)));\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Gets the text content\r\n     */\r\n    StartEndBlockElement.prototype.getTextContent = function () {\r\n        var range = createRange_1.default(this.startNode, this.endNode);\r\n        return range.toString();\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Get all nodes represented in a Node array\r\n     * This only works for balanced node -- start and end is at same level\r\n     */\r\n    StartEndBlockElement.prototype.getContentNodes = function () {\r\n        return collapseNodes_1.default(StartEndBlockElement.getBlockContext(this.startNode), this.startNode, this.endNode, true /*canSplitParent*/);\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Gets first inline\r\n     */\r\n    StartEndBlockElement.prototype.getFirstInlineElement = function () {\r\n        if (!this.firstInline) {\r\n            this.firstInline = getInlineElementAtNode_1.default(this.rootNode, this.startNode);\r\n        }\r\n        return this.firstInline;\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Gets last inline\r\n     */\r\n    StartEndBlockElement.prototype.getLastInlineElement = function () {\r\n        if (!this.lastInline) {\r\n            this.lastInline = getInlineElementAtNode_1.default(this.rootNode, this.endNode);\r\n        }\r\n        return this.lastInline;\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Gets all inline in the block\r\n     */\r\n    StartEndBlockElement.prototype.getInlineElements = function () {\r\n        var allInlines = [];\r\n        var startInline = this.getFirstInlineElement();\r\n        while (startInline) {\r\n            allInlines.push(startInline);\r\n            startInline = getNextPreviousInlineElement_1.default(this.rootNode, startInline, true /*isNext*/);\r\n        }\r\n        return allInlines;\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Checks if an inline falls inside me\r\n     */\r\n    StartEndBlockElement.prototype.isInBlock = function (inlineElement) {\r\n        return this.contains(inlineElement.getContainerNode());\r\n    };\r\n    return StartEndBlockElement;\r\n}());\r\nexports.default = StartEndBlockElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getTagOfNode_1 = require(\"./getTagOfNode\");\r\n/**\r\n * HTML void elements\r\n * Per https://www.w3.org/TR/html/syntax.html#syntax-elements, cannot have child nodes\r\n * This regex is used when we move focus to very begin of editor. We should avoid putting focus inside\r\n * void elements so users don't accidently create child nodes in them\r\n */\r\nvar HTML_VOID_ELEMENTS = 'AREA,BASE,BR,COL,COMMAND,EMBED,HR,IMG,INPUT,KEYGEN,LINK,META,PARAM,SOURCE,TRACK,WBR'.split(',');\r\n/**\r\n * Check if the given node is html void element. Void element cannot have childen\r\n * @param node The node to check\r\n */\r\nfunction isVoidHtmlElement(node) {\r\n    return !!node && HTML_VOID_ELEMENTS.indexOf(getTagOfNode_1.default(node)) >= 0;\r\n}\r\nexports.default = isVoidHtmlElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Creates an HTML node array from html\r\n * @param html the html string to create HTML elements from\r\n * @param ownerDocument Owner document of the result HTML elements\r\n * @returns An HTML node array to represent the given html string\r\n */\r\nfunction fromHtml(html, ownerDocument) {\r\n    var element = ownerDocument.createElement('DIV');\r\n    element.innerHTML = html;\r\n    return [].slice.call(element.childNodes);\r\n}\r\nexports.default = fromHtml;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar NodeInlineElement_1 = require(\"./NodeInlineElement\");\r\n/**\r\n * This is an inline element representing an Html image\r\n */\r\nvar ImageInlineElement = /** @class */ (function (_super) {\r\n    __extends(ImageInlineElement, _super);\r\n    function ImageInlineElement(containerNode, parentBlock) {\r\n        return _super.call(this, containerNode, parentBlock) || this;\r\n    }\r\n    return ImageInlineElement;\r\n}(NodeInlineElement_1.default));\r\nexports.default = ImageInlineElement;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar NodeInlineElement_1 = require(\"./NodeInlineElement\");\r\n/**\r\n * This is inline element presenting an html hyperlink\r\n */\r\nvar LinkInlineElement = /** @class */ (function (_super) {\r\n    __extends(LinkInlineElement, _super);\r\n    function LinkInlineElement(containerNode, parentBlock) {\r\n        return _super.call(this, containerNode, parentBlock) || this;\r\n    }\r\n    return LinkInlineElement;\r\n}(NodeInlineElement_1.default));\r\nexports.default = LinkInlineElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getLeafNode_1 = require(\"../utils/getLeafNode\");\r\nvar getInlineElementAtNode_1 = require(\"./getInlineElementAtNode\");\r\n/**\r\n * Get the first inline element inside the given node\r\n */\r\nfunction getFirstInlineElement(rootNode) {\r\n    // getFirstLeafNode can return null for empty container\r\n    // do check null before passing on to get inline from the node\r\n    var node = getLeafNode_1.getFirstLeafNode(rootNode);\r\n    return node ? getInlineElementAtNode_1.default(rootNode, node) : null;\r\n}\r\nexports.getFirstInlineElement = getFirstInlineElement;\r\n/**\r\n * Get the last inline element inside the given node\r\n */\r\nfunction getLastInlineElement(rootNode) {\r\n    // getLastLeafNode can return null for empty container\r\n    // do check null before passing on to get inline from the node\r\n    var node = getLeafNode_1.getLastLeafNode(rootNode);\r\n    return node ? getInlineElementAtNode_1.default(rootNode, node) : null;\r\n}\r\nexports.getLastInlineElement = getLastInlineElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar shouldSkipNode_1 = require(\"./shouldSkipNode\");\r\nvar getLeafSibling_1 = require(\"./getLeafSibling\");\r\n/**\r\n * Get first/last leaf node of the given root node.\r\n * @param rootNode Root node to get leaf node from\r\n * @param isFirst True to get first leaf node, false to get last leaf node\r\n */\r\nfunction getLeafNode(rootNode, isFirst) {\r\n    var getChild = function (node) { return (isFirst ? node.firstChild : node.lastChild); };\r\n    var result = getChild(rootNode);\r\n    while (result && getChild(result)) {\r\n        result = getChild(result);\r\n    }\r\n    if (result && shouldSkipNode_1.default(result)) {\r\n        result = getLeafSibling_1.getLeafSibling(rootNode, result, isFirst);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Get the first meaningful leaf node\r\n * @param rootNode Root node to get leaf node from\r\n */\r\nfunction getFirstLeafNode(rootNode) {\r\n    return getLeafNode(rootNode, true /*isFirst*/);\r\n}\r\nexports.getFirstLeafNode = getFirstLeafNode;\r\n/**\r\n * Get the last meaningful leaf node\r\n * @param rootNode Root node to get leaf node from\r\n */\r\nfunction getLastLeafNode(rootNode) {\r\n    return getLeafNode(rootNode, false /*isFirst*/);\r\n}\r\nexports.getLastLeafNode = getLastLeafNode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getBlockElementAtNode_1 = require(\"./getBlockElementAtNode\");\r\n/**\r\n * Get the first/last BlockElement of under the root node.\r\n * If no suitable BlockElement found, returns null\r\n * @param rootNode The root node to get BlockElement from\r\n * @param isFirst True to get first BlockElement, false to get last BlockElement\r\n */\r\nfunction getFirstLastBlockElement(rootNode, isFirst) {\r\n    var node = rootNode;\r\n    do {\r\n        node = node && (isFirst ? node.firstChild : node.lastChild);\r\n    } while (node && node.firstChild);\r\n    return node && getBlockElementAtNode_1.default(rootNode, node);\r\n}\r\nexports.getFirstLastBlockElement = getFirstLastBlockElement;\r\n/**\r\n * Get the first BlockElement of under the root node.\r\n * If no suitable BlockElement found, returns null\r\n * @param rootNode The root node to get BlockElement from\r\n */\r\nfunction getFirstBlockElement(rootNode) {\r\n    return getFirstLastBlockElement(rootNode, true /*isFirst*/);\r\n}\r\nexports.getFirstBlockElement = getFirstBlockElement;\r\n/**\r\n * Get the last BlockElement of under the root node.\r\n * If no suitable BlockElement found, returns null\r\n * @param rootNode The root node to get BlockElement from\r\n */\r\nfunction getLastBlockElement(rootNode) {\r\n    return getFirstLastBlockElement(rootNode, false /*isFirst*/);\r\n}\r\nexports.getLastBlockElement = getLastBlockElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BodyScoper_1 = require(\"./BodyScoper\");\r\nvar EmptyInlineElement_1 = require(\"../inlineElements/EmptyInlineElement\");\r\nvar getBlockElementAtNode_1 = require(\"../blockElements/getBlockElementAtNode\");\r\nvar getNextPreviousInlineElement_1 = require(\"../inlineElements/getNextPreviousInlineElement\");\r\nvar SelectionBlockScoper_1 = require(\"./SelectionBlockScoper\");\r\nvar SelectionScoper_1 = require(\"./SelectionScoper\");\r\nvar getInlineElementBeforeAfter_1 = require(\"../inlineElements/getInlineElementBeforeAfter\");\r\nvar getLeafSibling_1 = require(\"../utils/getLeafSibling\");\r\n/**\r\n * The provides traversing of content inside editor.\r\n * There are two ways to traverse, block by block, or inline element by inline element\r\n * Block and inline traversing is independent from each other, meanning if you traverse block by block, it does not change\r\n * the current inline element position\r\n */\r\nvar ContentTraverser = /** @class */ (function () {\r\n    /**\r\n     * Create a content traverser for the whole body of given root node\r\n     * @param scoper Traversing scoper object to help scope the traversing\r\n     */\r\n    function ContentTraverser(scoper) {\r\n        this.scoper = scoper;\r\n    }\r\n    /**\r\n     * Create a content traverser for the whole body of given root node\r\n     * @param rootNode The root node to traverse in\r\n     */\r\n    ContentTraverser.createBodyTraverser = function (rootNode) {\r\n        return new ContentTraverser(new BodyScoper_1.default(rootNode));\r\n    };\r\n    /**\r\n     * Create a content traverser for the given selection\r\n     * @param rootNode The root node to traverse in\r\n     * @param range The selection range to scope the traversing\r\n     */\r\n    ContentTraverser.createSelectionTraverser = function (rootNode, range) {\r\n        return new ContentTraverser(new SelectionScoper_1.default(rootNode, range));\r\n    };\r\n    /**\r\n     * Create a content traverser for a block element which contains the given position\r\n     * @param rootNode The root node to traverse in\r\n     * @param position A position inside a block, traversing will be scoped within this block.\r\n     * If passing a range, the start position of this range will be used\r\n     * @param startFrom Start position of traversing. The value can be Begin, End, SelectionStart\r\n     */\r\n    ContentTraverser.createBlockTraverser = function (rootNode, position, start) {\r\n        if (start === void 0) { start = 2 /* SelectionStart */; }\r\n        return new ContentTraverser(new SelectionBlockScoper_1.default(rootNode, position, start));\r\n    };\r\n    Object.defineProperty(ContentTraverser.prototype, \"currentBlockElement\", {\r\n        /**\r\n         * Get current block\r\n         */\r\n        get: function () {\r\n            // Prepare currentBlock from the scoper\r\n            if (!this.currentBlock) {\r\n                this.currentBlock = this.scoper.getStartBlockElement();\r\n            }\r\n            return this.currentBlock;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get next block element\r\n     */\r\n    ContentTraverser.prototype.getNextBlockElement = function () {\r\n        return this.getPreviousNextBlockElement(true /*isNext*/);\r\n    };\r\n    /**\r\n     * Get previous block element\r\n     */\r\n    ContentTraverser.prototype.getPreviousBlockElement = function () {\r\n        return this.getPreviousNextBlockElement(false /*isNext*/);\r\n    };\r\n    ContentTraverser.prototype.getPreviousNextBlockElement = function (isNext) {\r\n        var current = this.currentBlockElement;\r\n        var leaf = getLeafSibling_1.getLeafSibling(this.scoper.rootNode, isNext ? current.getEndNode() : current.getStartNode(), isNext);\r\n        var newBlock = leaf ? getBlockElementAtNode_1.default(this.scoper.rootNode, leaf) : null;\r\n        // Make sure this is right block:\r\n        // 1) the block is in scope per scoper\r\n        // 2) the block is after (for next) or before (for previous) the current block\r\n        // Then:\r\n        // 1) Re-position current block to newly found block\r\n        if (newBlock &&\r\n            this.scoper.isBlockInScope(newBlock) &&\r\n            ((isNext && newBlock.isAfter(current)) || (!isNext && current.isAfter(newBlock)))) {\r\n            this.currentBlock = newBlock;\r\n            return this.currentBlock;\r\n        }\r\n        return null;\r\n    };\r\n    Object.defineProperty(ContentTraverser.prototype, \"currentInlineElement\", {\r\n        /**\r\n         * Current inline element getter\r\n         */\r\n        get: function () {\r\n            // Retrieve a start inline from scoper\r\n            if (!this.currentInline) {\r\n                this.currentInline = this.scoper.getStartInlineElement();\r\n            }\r\n            return this.currentInline instanceof EmptyInlineElement_1.default ? null : this.currentInline;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get next inline element\r\n     */\r\n    ContentTraverser.prototype.getNextInlineElement = function () {\r\n        return this.getPreviousNextInlineElement(true /*isNext*/);\r\n    };\r\n    /**\r\n     * Get previous inline element\r\n     */\r\n    ContentTraverser.prototype.getPreviousInlineElement = function () {\r\n        return this.getPreviousNextInlineElement(false /*isNext*/);\r\n    };\r\n    ContentTraverser.prototype.getPreviousNextInlineElement = function (isNext) {\r\n        var current = this.currentInlineElement || this.currentInline;\r\n        var newInline;\r\n        if (current instanceof EmptyInlineElement_1.default) {\r\n            newInline = getInlineElementBeforeAfter_1.getInlineElementBeforeAfter(this.scoper.rootNode, current.getStartPosition(), isNext);\r\n            if (newInline && !current.getParentBlock().isInBlock(newInline)) {\r\n                newInline = null;\r\n            }\r\n        }\r\n        else {\r\n            newInline = getNextPreviousInlineElement_1.default(this.scoper.rootNode, current, isNext);\r\n            newInline =\r\n                newInline &&\r\n                    current &&\r\n                    ((isNext && newInline.isAfter(current)) || (!isNext && current.isAfter(newInline)))\r\n                    ? newInline\r\n                    : null;\r\n        }\r\n        // For inline, we need to make sure:\r\n        // 1) it is really next/previous to current\r\n        // 2) pass on the new inline to this.scoper to do the triming and we still get back an inline\r\n        // Then\r\n        // 1) re-position current inline\r\n        if (newInline && (newInline = this.scoper.trimInlineElement(newInline))) {\r\n            this.currentInline = newInline;\r\n            return this.currentInline;\r\n        }\r\n        return null;\r\n    };\r\n    return ContentTraverser;\r\n}());\r\nexports.default = ContentTraverser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar positionUtils_1 = require(\"../deprecated/positionUtils\");\r\n/**\r\n * Represents an empty InlineElement.\r\n * This is used for ContentTraverser internally only.\r\n * An empty InlineElement means current position is at the end of a tag so nothing is included inside this element\r\n */\r\nvar EmptyInlineElement = /** @class */ (function () {\r\n    function EmptyInlineElement(position, parentBlock) {\r\n        this.position = position;\r\n        this.parentBlock = parentBlock;\r\n    }\r\n    /**\r\n     * Get the text content of this inline element\r\n     */\r\n    EmptyInlineElement.prototype.getTextContent = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * Get the container node of this inline element\r\n     */\r\n    EmptyInlineElement.prototype.getContainerNode = function () {\r\n        return this.position.node;\r\n    };\r\n    /**\r\n     * Get the parent block element of this inline element\r\n     */\r\n    EmptyInlineElement.prototype.getParentBlock = function () {\r\n        return this.parentBlock;\r\n    };\r\n    /**\r\n     * Get the start position of this inline element\r\n     */\r\n    EmptyInlineElement.prototype.getStartPosition = function () {\r\n        return this.position;\r\n    };\r\n    /**\r\n     * Get the end position of this inline element\r\n     */\r\n    EmptyInlineElement.prototype.getEndPosition = function () {\r\n        return this.position;\r\n    };\r\n    /**\r\n     * Checks if the given inline element is after this inline element\r\n     */\r\n    EmptyInlineElement.prototype.isAfter = function (inlineElement) {\r\n        return inlineElement && this.position.isAfter(inlineElement.getEndPosition());\r\n    };\r\n    /**\r\n     * Checks if this inline element is a textual inline element\r\n     */\r\n    EmptyInlineElement.prototype.isTextualInlineElement = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Checks if the given editor position is contained in this inline element\r\n     */\r\n    EmptyInlineElement.prototype.contains = function (position) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Apply inline style to a region of an inline element.\r\n     */\r\n    EmptyInlineElement.prototype.applyStyle = function (styler) { };\r\n    /**\r\n     * @deprecated\r\n     * Get the start position of this inline element\r\n     */\r\n    EmptyInlineElement.prototype.getStartPoint = function () {\r\n        return positionUtils_1.toEditorPoint(this.position);\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Get the end position of this inline element\r\n     */\r\n    EmptyInlineElement.prototype.getEndPoint = function () {\r\n        return positionUtils_1.toEditorPoint(this.position);\r\n    };\r\n    return EmptyInlineElement;\r\n}());\r\nexports.default = EmptyInlineElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// White space matching regex. It matches following chars:\r\n// \\s: white space\r\n// \\u00A0: no-breaking white space\r\n// \\u200B: zero width space\r\n// \\u3000: full width space (which can come from JPN IME)\r\nvar WHITESPACE_REGEX = /[\\s\\u00A0\\u200B\\u3000]+([^\\s\\u00A0\\u200B\\u3000]*)$/i;\r\nfunction matchWhiteSpaces(source) {\r\n    return WHITESPACE_REGEX.exec(source);\r\n}\r\nexports.default = matchWhiteSpaces;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getTagOfNode_1 = require(\"./getTagOfNode\");\r\nvar VISIBLE_ELEMENT_TAGS = ['IMG'];\r\nvar VISIBLE_CHILD_ELEMENT_SELECTOR = ['TABLE', 'IMG', 'LI'].join(',');\r\nvar ZERO_WIDTH_SPACE = /\\u200b/g;\r\n/**\r\n * Check if a given node has no visible content\r\n * @param node The node to check\r\n * @param trimContent Whether trim the text content so that spaces will be treated as empty.\r\n * Default value is false\r\n * @returns True if there isn't any visible element inside node, otherwise false\r\n */\r\nfunction isNodeEmpty(node, trimContent) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    else if (node.nodeType == 3 /* Text */) {\r\n        return trim(node.nodeValue, trimContent) == '';\r\n    }\r\n    else if (node.nodeType == 1 /* Element */) {\r\n        var element = node;\r\n        var textContent = trim(element.textContent, trimContent);\r\n        if (textContent != '' ||\r\n            VISIBLE_ELEMENT_TAGS.indexOf(getTagOfNode_1.default(element)) >= 0 ||\r\n            element.querySelectorAll(VISIBLE_CHILD_ELEMENT_SELECTOR)[0]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.default = isNodeEmpty;\r\nfunction trim(s, trim) {\r\n    s = s.replace(ZERO_WIDTH_SPACE, '');\r\n    return trim ? s.trim() : s;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Query HTML elements in the container by a selector string\r\n * @param container Container element to query from\r\n * @param selector Selector string to query\r\n * @param forEachCallback An optional callback to be invoked on each node in query result\r\n * @param scope The scope of the query, default value is QueryScope.Body\r\n * @param range The selection range to query with. This is required when scope is not Body\r\n * @returns HTML Element array of the query result\r\n */\r\nfunction queryElements(container, selector, forEachCallback, scope, range) {\r\n    if (scope === void 0) { scope = 0 /* Body */; }\r\n    if (!container || !selector) {\r\n        return [];\r\n    }\r\n    var elements = [].slice.call(container.querySelectorAll(selector));\r\n    if (scope != 0 /* Body */ && range) {\r\n        elements = elements.filter(function (element) {\r\n            return isIntersectWithNodeRange(element, range, scope == 2 /* InSelection */);\r\n        });\r\n    }\r\n    if (forEachCallback) {\r\n        elements.forEach(forEachCallback);\r\n    }\r\n    return elements;\r\n}\r\nexports.default = queryElements;\r\nfunction isIntersectWithNodeRange(node, range, nodeContainedByRangeOnly) {\r\n    var startPosition = node.compareDocumentPosition(range.startContainer);\r\n    var endPosition = node.compareDocumentPosition(range.endContainer);\r\n    var targetPositions = [0 /* Same */, 8 /* Contains */];\r\n    if (!nodeContainedByRangeOnly) {\r\n        targetPositions.push(16 /* ContainedBy */);\r\n    }\r\n    return (checkPosition(startPosition, targetPositions) || // intersectStart\r\n        checkPosition(endPosition, targetPositions) || // intersectEnd\r\n        (checkPosition(startPosition, [2 /* Preceding */]) && // Contains\r\n            checkPosition(endPosition, [4 /* Following */]) &&\r\n            !checkPosition(endPosition, [16 /* ContainedBy */])));\r\n}\r\nfunction checkPosition(position, targets) {\r\n    return targets.some(function (target) {\r\n        return target == 0 /* Same */\r\n            ? position == 0 /* Same */\r\n            : (position & target) == target;\r\n    });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction nativeClone(source, existingObj) {\r\n    return Object.assign(existingObj || {}, source);\r\n}\r\nfunction customClone(source, existingObj) {\r\n    var result = existingObj || {};\r\n    if (source) {\r\n        for (var _i = 0, _a = Object.keys(source); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            result[key] = source[key];\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar cloneObject = Object.assign ? nativeClone : customClone;\r\nexports.default = cloneObject;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Inheritable CSS properties\r\n// Ref: https://www.w3.org/TR/CSS21/propidx.html\r\nvar INHERITABLE_PROPERTIES = ('border-spacing,caption-side,color,' +\r\n    'cursor,direction,empty-cells,font-family,font-size,font-style,font-variant,font-weight,' +\r\n    'font,letter-spacing,line-height,list-style-image,list-style-position,list-style-type,' +\r\n    'list-style,orphans,quotes,text-align,text-indent,text-transform,visibility,white-space,' +\r\n    'widows,word-spacing').split(',');\r\n/**\r\n * Get inheritable CSS style values from the given element\r\n * @param element The element to get style from\r\n */\r\nfunction getInheritableStyles(element) {\r\n    var win = element && element.ownerDocument && element.ownerDocument.defaultView;\r\n    var styles = win && win.getComputedStyle(element);\r\n    var result = {};\r\n    INHERITABLE_PROPERTIES.forEach(function (name) { return (result[name] = (styles && styles.getPropertyValue(name)) || ''); });\r\n    return result;\r\n}\r\nexports.default = getInheritableStyles;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar START_FRAGMENT = '<!--StartFragment-->';\r\nvar END_FRAGMENT = '<!--EndFragment-->';\r\n/**\r\n * Build DOM tree from the given HTML string\r\n * @param html Source HTML string\r\n * @param preserveFragmentOnly If there is fragment markup (<!--StartFragment--> and <!--EndFragment-->),\r\n * only preserve content between these markups\r\n * @param fragmentHandler An optional callback to do customized fragment handling\r\n */\r\nfunction htmlToDom(html, preserveFragmentOnly, fragmentHandler) {\r\n    var parser = new DOMParser();\r\n    var doc = parser.parseFromString(html || '', 'text/html');\r\n    if (doc && doc.body && doc.body.firstChild) {\r\n        // 1. Filter out html code outside of Fragment tags if need\r\n        if (preserveFragmentOnly) {\r\n            (fragmentHandler || defaultFragmentTrimmer)(doc, html);\r\n        }\r\n        return doc;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexports.default = htmlToDom;\r\nfunction defaultFragmentTrimmer(doc, sourceHtml) {\r\n    var html = splitWithFragment(sourceHtml)[0];\r\n    doc.body.innerHTML = html;\r\n}\r\n/**\r\n * Split the HTML string using its fragment info\r\n * @param html Source html string\r\n * @returns [String within fragment, String before fragment, String after fragment]\r\n */\r\nfunction splitWithFragment(html) {\r\n    var startIndex = html.indexOf(START_FRAGMENT);\r\n    var endIndex = html.lastIndexOf(END_FRAGMENT);\r\n    if (startIndex >= 0 && endIndex >= 0 && endIndex >= startIndex + START_FRAGMENT.length) {\r\n        var before = html.substr(0, startIndex);\r\n        var after = html.substr(endIndex + END_FRAGMENT.length);\r\n        html = html.substring(startIndex + START_FRAGMENT.length, endIndex);\r\n        return [html, before, after];\r\n    }\r\n    else {\r\n        return [html, null, null];\r\n    }\r\n}\r\nexports.splitWithFragment = splitWithFragment;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * Collapse all selected blocks, return single HTML elements for each block\r\n * @param editor The editor instance\r\n * @param forEachCallback A callback function to invoke for each of the collapsed element\r\n */\r\nfunction collapseSelectedBlocked(editor, forEachCallback) {\r\n    var traverser = editor.getSelectionTraverser();\r\n    var block = traverser && traverser.currentBlockElement;\r\n    var blocks = [];\r\n    while (block) {\r\n        if (!isEmptyBlockUnderTR(block)) {\r\n            blocks.push(block);\r\n        }\r\n        block = traverser.getNextBlockElement();\r\n    }\r\n    blocks.forEach(function (block) {\r\n        var element = block.collapseToSingleElement();\r\n        forEachCallback(element);\r\n    });\r\n}\r\nexports.default = collapseSelectedBlocked;\r\nfunction isEmptyBlockUnderTR(block) {\r\n    var startNode = block.getStartNode();\r\n    return (block instanceof roosterjs_editor_dom_1.StartEndBlockElement &&\r\n        startNode == block.getEndNode() &&\r\n        startNode.nodeType == 3 /* Text */ &&\r\n        ['TR', 'TABLE'].indexOf(roosterjs_editor_dom_1.getTagOfNode(startNode.parentNode)) >= 0);\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar applyInlineStyle_1 = require(\"../utils/applyInlineStyle\");\r\n/**\r\n * Set background color at current selection\r\n * @param editor The editor instance\r\n * @param color The color string, can be any of the predefined color names (e.g, 'red')\r\n * or hexadecimal color string (e.g, '#FF0000') or rgb value (e.g, 'rgb(255, 0, 0)') supported by browser.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n */\r\nfunction setBackgroundColor(editor, color) {\r\n    color = color.trim();\r\n    applyInlineStyle_1.default(editor, function (element) { return (element.style.backgroundColor = color); });\r\n}\r\nexports.default = setBackgroundColor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar applyInlineStyle_1 = require(\"../utils/applyInlineStyle\");\r\n/**\r\n * Set font name at selection\r\n * @param editor The editor instance\r\n * @param fontName The fontName string, should be a valid CSS font-family style.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n */\r\nfunction setFontName(editor, fontName) {\r\n    fontName = fontName.trim();\r\n    // The browser provided execCommand creates a HTML <font> tag with face attribute. <font> is not HTML5 standard\r\n    // (http://www.w3schools.com/tags/tag_font.asp). Use applyInlineStyle which gives flexibility on applying inline style\r\n    // for here, we use CSS font-family style\r\n    applyInlineStyle_1.default(editor, function (element) { return (element.style.fontFamily = fontName); });\r\n}\r\nexports.default = setFontName;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar applyInlineStyle_1 = require(\"../utils/applyInlineStyle\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * Set font size at selection\r\n * @param editor The editor instance\r\n * @param fontSize The fontSize string, should be a valid CSS font-size style.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n */\r\nfunction setFontSize(editor, fontSize) {\r\n    fontSize = fontSize.trim();\r\n    // The browser provided execCommand only accepts 1-7 point value. In addition, it uses HTML <font> tag with size attribute.\r\n    // <font> is not HTML5 standard (http://www.w3schools.com/tags/tag_font.asp). Use applyInlineStyle which gives flexibility on applying inline style\r\n    // for here, we use CSS font-size style\r\n    applyInlineStyle_1.default(editor, function (element) {\r\n        element.style.fontSize = fontSize;\r\n        var lineHeight = roosterjs_editor_dom_1.getComputedStyle(element, 'line-height');\r\n        if (lineHeight != 'normal') {\r\n            element.style.lineHeight = 'normal';\r\n        }\r\n    });\r\n}\r\nexports.default = setFontSize;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar applyInlineStyle_1 = require(\"../utils/applyInlineStyle\");\r\n/**\r\n * Set text color at selection\r\n * @param editor The editor instance\r\n * @param color The color string, can be any of the predefined color names (e.g, 'red')\r\n * or hexadecimal color string (e.g, '#FF0000') or rgb value (e.g, 'rgb(255, 0, 0)') supported by browser.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n */\r\nfunction setTextColor(editor, color) {\r\n    color = color.trim();\r\n    applyInlineStyle_1.default(editor, function (element) { return (element.style.color = color); });\r\n}\r\nexports.default = setTextColor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar execCommand_1 = require(\"../utils/execCommand\");\r\n/**\r\n * Toggle bold at selection\r\n * If selection is collapsed, it will only affect the following input after caret\r\n * If selection contains only bold text, the bold style will be removed\r\n * If selection contains only normal text, bold style will be added to the whole selected text\r\n * If selection contains both bold and normal text, bold stle will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nfunction toggleBold(editor) {\r\n    execCommand_1.default(editor, \"bold\" /* Bold */);\r\n}\r\nexports.default = toggleBold;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar execCommand_1 = require(\"../utils/execCommand\");\r\n/**\r\n * Toggle italic at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only italic text, the italic style will be removed\r\n * If selection contains only normal text, italic style will be added to the whole selected text\r\n * If selection contains both italic and normal text, italic stlye will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nfunction toggleItalic(editor) {\r\n    execCommand_1.default(editor, \"italic\" /* Italic */);\r\n}\r\nexports.default = toggleItalic;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar execCommand_1 = require(\"../utils/execCommand\");\r\n/**\r\n * Toggle underline at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only underlined text, the underline style will be removed\r\n * If selection contains only normal text, underline style will be added to the whole selected text\r\n * If selection contains both underlined and normal text, the underline style will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nfunction toggleUnderline(editor) {\r\n    execCommand_1.default(editor, \"underline\" /* Underline */);\r\n}\r\nexports.default = toggleUnderline;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar KEY_BACKSPACE = 8;\r\n/**\r\n * Provides core editing feature for editor:\r\n * 1. AutoComplete\r\n * 2. Ensure typing under HTMLElement\r\n * 3. IME state\r\n */\r\nvar CorePlugin = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of Core plugin\r\n     * @param contentDiv The DIV HTML element which will be the container element of editor\r\n     * @param disableRestoreSelectionOnFocus Whether auto restore previous selection when focus to editor\r\n     */\r\n    function CorePlugin(contentDiv, disableRestoreSelectionOnFocus) {\r\n        var _this = this;\r\n        this.contentDiv = contentDiv;\r\n        this.disableRestoreSelectionOnFocus = disableRestoreSelectionOnFocus;\r\n        this.name = 'CorePlugin';\r\n        this.disposers = null;\r\n        this.onMouseDown = function () {\r\n            if (_this.editor && !_this.mouseUpEventListerAdded) {\r\n                _this.editor.getDocument().addEventListener('mouseup', _this.onMouseUp, true);\r\n                _this.mouseUpEventListerAdded = true;\r\n            }\r\n        };\r\n        this.onMouseUp = function (event) {\r\n            if (_this.editor) {\r\n                _this.removeMouseUpEventListener();\r\n                _this.editor.triggerEvent({\r\n                    eventType: 5 /* MouseUp */,\r\n                    rawEvent: event,\r\n                });\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Initialize this plugin. This should only be called from Editor\r\n     * @param editor Editor instance\r\n     */\r\n    CorePlugin.prototype.initialize = function (editor) {\r\n        var _this = this;\r\n        this.editor = editor;\r\n        this.disposers = [\r\n            this.editor.addDomEventHandler('compositionstart', function () { return (_this.inIME = true); }),\r\n            this.editor.addDomEventHandler('compositionend', function (event) {\r\n                _this.inIME = false;\r\n                _this.editor.triggerEvent({\r\n                    eventType: 3 /* CompositionEnd */,\r\n                    rawEvent: event,\r\n                });\r\n            }),\r\n            this.editor.addDomEventHandler(roosterjs_editor_dom_1.Browser.isIEOrEdge ? 'beforedeactivate' : 'blur', function () {\r\n                return _this.editor.saveSelectionRange();\r\n            }),\r\n            this.editor.addDomEventHandler('mousedown', this.onMouseDown),\r\n            this.disableRestoreSelectionOnFocus\r\n                ? null\r\n                : this.editor.addDomEventHandler('focus', function () { return _this.editor.restoreSavedRange(); }),\r\n        ];\r\n    };\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    CorePlugin.prototype.dispose = function () {\r\n        this.removeMouseUpEventListener();\r\n        if (this.disposers) {\r\n            this.disposers.forEach(function (disposer) { return disposer && disposer(); });\r\n            this.disposers = null;\r\n        }\r\n        this.editor = null;\r\n    };\r\n    /**\r\n     * Check if editor is in IME input sequence\r\n     * @returns True if editor is in IME input sequence, otherwise false\r\n     */\r\n    CorePlugin.prototype.isInIME = function () {\r\n        return this.inIME;\r\n    };\r\n    /**\r\n     * Perform an auto complete action in the callback, save a snapsnot of content before the action,\r\n     * and trigger ContentChangedEvent with the change source if specified\r\n     * @param callback The auto complete callback, return value will be used as data field of ContentChangedEvent\r\n     * @param changeSource Chagne source of ContentChangedEvent. If not passed, no ContentChangedEvent will be  triggered\r\n     */\r\n    CorePlugin.prototype.performAutoComplete = function (callback, changeSource) {\r\n        var _this = this;\r\n        this.editor.addUndoSnapshot(function (start, end, snapshot) {\r\n            var data = callback();\r\n            _this.autoCompleteInfo = {\r\n                snapshot: snapshot,\r\n                changeSource: changeSource,\r\n            };\r\n            return data;\r\n        }, changeSource);\r\n    };\r\n    /**\r\n     * Ensure we are typing in an HTML Element inside editor, and apply default format if current block is empty\r\n     * @param node Current node\r\n     * @returns A new position to select\r\n     */\r\n    CorePlugin.prototype.ensureTypeInElement = function (position) {\r\n        position = position.normalize();\r\n        var block = roosterjs_editor_dom_1.getBlockElementAtNode(this.contentDiv, position.node);\r\n        var formatNode;\r\n        if (!block) {\r\n            // Only reason we don't get the selection block is that we have an empty content div\r\n            // which can happen when users removes everything (i.e. select all and DEL, or backspace from very end to begin)\r\n            // The fix is to add a DIV wrapping, apply default format and move cursor over\r\n            var document_1 = this.editor.getDocument();\r\n            formatNode = roosterjs_editor_dom_1.fromHtml(roosterjs_editor_dom_1.Browser.isEdge ? '<div><span><br></span></div>' : '<div><br></div>', document_1)[0];\r\n            this.contentDiv.appendChild(formatNode);\r\n            // element points to a wrapping node we added \"<div><br></div>\". We should move the selection left to <br>\r\n            position = new roosterjs_editor_dom_1.Position(formatNode.firstChild, 0 /* Begin */);\r\n        }\r\n        else {\r\n            formatNode = block.collapseToSingleElement();\r\n            // if the block is empty, apply default format\r\n            // Otherwise, leave it as it is as we don't want to change the style for existing data\r\n            formatNode = formatNode && roosterjs_editor_dom_1.isNodeEmpty(formatNode) ? formatNode : null;\r\n        }\r\n        if (formatNode) {\r\n            roosterjs_editor_dom_1.applyFormat(formatNode, this.editor.getDefaultFormat());\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Handle events triggered from editor\r\n     * @param event PluginEvent object\r\n     */\r\n    CorePlugin.prototype.onPluginEvent = function (event) {\r\n        switch (event.eventType) {\r\n            case 6 /* ContentChanged */:\r\n                if (this.autoCompleteInfo && this.autoCompleteInfo.changeSource != event.source) {\r\n                    this.onContentChanged();\r\n                }\r\n                break;\r\n            case 4 /* MouseDown */:\r\n                this.onContentChanged();\r\n                break;\r\n            case 0 /* KeyDown */:\r\n                this.onContentChanged(event.rawEvent);\r\n                break;\r\n            case 1 /* KeyPress */:\r\n                this.onKeyPress();\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Check if the plugin should handle the given event exclusively.\r\n     * Handle an event exclusively means other plugin will not receive this event in\r\n     * onPluginEvent method.\r\n     * If two plugins will return true in willHandleEventExclusively() for the same event,\r\n     * the final result depends on the order of the plugins are added into editor\r\n     * @param event The event to check\r\n     */\r\n    CorePlugin.prototype.willHandleEventExclusively = function (event) {\r\n        return (this.autoCompleteInfo &&\r\n            event.eventType == 0 /* KeyDown */ &&\r\n            event.rawEvent.which == KEY_BACKSPACE);\r\n    };\r\n    CorePlugin.prototype.onContentChanged = function (event) {\r\n        if (this.autoCompleteInfo) {\r\n            if (event && event.which == KEY_BACKSPACE) {\r\n                event.preventDefault();\r\n                this.editor.setContent(this.autoCompleteInfo.snapshot, false /*triggerContentChangedEvent*/);\r\n            }\r\n            this.autoCompleteInfo = null;\r\n        }\r\n    };\r\n    /**\r\n     * Check if user is typing right under the content div\r\n     * When typing goes directly under content div, many things can go wrong\r\n     * We fix it by wrapping it with a div and reposition cursor within the div\r\n     */\r\n    CorePlugin.prototype.onKeyPress = function () {\r\n        var range = this.editor.getSelectionRange();\r\n        if (range &&\r\n            range.collapsed &&\r\n            roosterjs_editor_dom_1.findClosestElementAncestor(range.startContainer) == this.contentDiv) {\r\n            var position = this.ensureTypeInElement(roosterjs_editor_dom_1.Position.getStart(range));\r\n            this.editor.select(position);\r\n        }\r\n    };\r\n    CorePlugin.prototype.removeMouseUpEventListener = function () {\r\n        if (this.mouseUpEventListerAdded) {\r\n            this.mouseUpEventListerAdded = false;\r\n            this.editor.getDocument().removeEventListener('mouseup', this.onMouseUp, true);\r\n        }\r\n    };\r\n    return CorePlugin;\r\n}());\r\nexports.default = CorePlugin;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar hasFocus = function (core) {\r\n    var activeElement = core.document.activeElement;\r\n    return (activeElement && roosterjs_editor_dom_1.contains(core.contentDiv, activeElement, true /*treatSameNodeAsContain*/));\r\n};\r\nexports.default = hasFocus;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar UndoSnapshots_1 = require(\"./UndoSnapshots\");\r\nvar KEY_BACKSPACE = 8;\r\nvar KEY_DELETE = 46;\r\nvar KEY_SPACE = 32;\r\nvar KEY_ENTER = 13;\r\nvar KEY_PAGEUP = 33;\r\nvar KEY_DOWN = 40;\r\n/**\r\n * Provides snapshot based undo service for Editor\r\n */\r\nvar Undo = /** @class */ (function () {\r\n    /**\r\n     * Create an instance of Undo\r\n     * @param preserveSnapshots True to preserve the snapshots after dispose, this allows\r\n     * this object to be reused when editor is disposed and created again\r\n     * @param maxBufferSize The max buffer size for snapshots. Default value is 10MB\r\n     */\r\n    function Undo(preserveSnapshots, maxBufferSize) {\r\n        if (maxBufferSize === void 0) { maxBufferSize = 1e7; }\r\n        var _this = this;\r\n        this.preserveSnapshots = preserveSnapshots;\r\n        this.maxBufferSize = maxBufferSize;\r\n        this.name = 'Undo';\r\n        this.onNativeEvent = function (e) {\r\n            _this.editor.runAsync(function () {\r\n                _this.addUndoSnapshot();\r\n                _this.editor.triggerContentChangedEvent(e.type == 'cut' ? \"Cut\" /* Cut */ : \"Drop\" /* Drop */);\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Initialize this plugin. This should only be called from Editor\r\n     * @param editor Editor instance\r\n     */\r\n    Undo.prototype.initialize = function (editor) {\r\n        this.editor = editor;\r\n        this.onDropDisposer = this.editor.addDomEventHandler('drop', this.onNativeEvent);\r\n        this.onCutDisposer = this.editor.addDomEventHandler('cut', this.onNativeEvent);\r\n    };\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    Undo.prototype.dispose = function () {\r\n        this.onDropDisposer();\r\n        this.onCutDisposer();\r\n        this.onDropDisposer = null;\r\n        this.onCutDisposer = null;\r\n        this.editor = null;\r\n        if (!this.preserveSnapshots) {\r\n            this.clear();\r\n        }\r\n    };\r\n    /**\r\n     * Handle events triggered from editor\r\n     * @param event PluginEvent object\r\n     */\r\n    Undo.prototype.onPluginEvent = function (event) {\r\n        // if editor is in IME, don't do anything\r\n        if (this.editor.isInIME()) {\r\n            return;\r\n        }\r\n        switch (event.eventType) {\r\n            case 10 /* EditorReady */:\r\n                this.addUndoSnapshot();\r\n                break;\r\n            case 0 /* KeyDown */:\r\n                this.onKeyDown(event.rawEvent);\r\n                break;\r\n            case 1 /* KeyPress */:\r\n                this.onKeyPress(event.rawEvent);\r\n                break;\r\n            case 3 /* CompositionEnd */:\r\n                this.clearRedoForInput();\r\n                break;\r\n            case 6 /* ContentChanged */:\r\n                this.onContentChanged(event);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Clear all existing undo snapshots\r\n     */\r\n    Undo.prototype.clear = function () {\r\n        this.undoSnapshots = null;\r\n        this.hasNewContent = false;\r\n    };\r\n    /**\r\n     * Restore an undo snapshot to editor\r\n     */\r\n    Undo.prototype.undo = function () {\r\n        if (this.hasNewContent) {\r\n            this.addUndoSnapshot();\r\n        }\r\n        this.restoreSnapshot(-1 /*previousSnapshot*/);\r\n    };\r\n    /**\r\n     * Restore a redo snapshot to editor\r\n     */\r\n    Undo.prototype.redo = function () {\r\n        this.restoreSnapshot(1 /*nextSnapshot*/);\r\n    };\r\n    /**\r\n     * Whether there is a snapshot for undo\r\n     */\r\n    Undo.prototype.canUndo = function () {\r\n        return this.hasNewContent || this.getSnapshotsManager().canMove(-1 /*previousSnapshot*/);\r\n    };\r\n    /**\r\n     * Whether there is a snapshot for redo\r\n     */\r\n    Undo.prototype.canRedo = function () {\r\n        return this.getSnapshotsManager().canMove(1 /*nextSnapshot*/);\r\n    };\r\n    /**\r\n     * Add an undo snapshot\r\n     */\r\n    Undo.prototype.addUndoSnapshot = function () {\r\n        var snapshot = this.getSnapshot();\r\n        this.getSnapshotsManager().addSnapshot(snapshot);\r\n        this.hasNewContent = false;\r\n        return snapshot;\r\n    };\r\n    Undo.prototype.getSnapshotsManager = function () {\r\n        if (!this.undoSnapshots) {\r\n            this.undoSnapshots = new UndoSnapshots_1.default(this.maxBufferSize);\r\n        }\r\n        return this.undoSnapshots;\r\n    };\r\n    Undo.prototype.restoreSnapshot = function (delta) {\r\n        var snapshot = this.getSnapshotsManager().move(delta);\r\n        if (snapshot != null) {\r\n            try {\r\n                this.isRestoring = true;\r\n                this.editor.setContent(snapshot);\r\n            }\r\n            finally {\r\n                this.isRestoring = false;\r\n            }\r\n        }\r\n    };\r\n    Undo.prototype.onKeyDown = function (evt) {\r\n        // Handle backspace/delete when there is a selection to take a snapshot\r\n        // since we want the state prior to deletion restorable\r\n        if (evt.which == KEY_BACKSPACE || evt.which == KEY_DELETE) {\r\n            var selectionRange = this.editor.getSelectionRange();\r\n            // Add snapshot when\r\n            // 1. Something has been selected (not collapsed), or\r\n            // 2. It has a different key code from the last keyDown event (to prevent adding too many snapshot when keeping press the same key), or\r\n            // 3. Ctrl/Meta key is pressed so that a whole word will be deleted\r\n            if (selectionRange &&\r\n                (!selectionRange.collapsed ||\r\n                    this.lastKeyPress != evt.which ||\r\n                    evt.ctrlKey ||\r\n                    evt.metaKey)) {\r\n                this.addUndoSnapshot();\r\n            }\r\n            // Since some content is deleted, always set hasNewContent to true so that we will take undo snapshot next time\r\n            this.hasNewContent = true;\r\n            this.lastKeyPress = evt.which;\r\n        }\r\n        else if (evt.which >= KEY_PAGEUP && evt.which <= KEY_DOWN) {\r\n            // PageUp, PageDown, Home, End, Left, Right, Up, Down\r\n            if (this.hasNewContent) {\r\n                this.addUndoSnapshot();\r\n            }\r\n            this.lastKeyPress = 0;\r\n        }\r\n    };\r\n    Undo.prototype.onKeyPress = function (evt) {\r\n        if (evt.metaKey) {\r\n            // if metaKey is pressed, simply return since no actual effect will be taken on the editor.\r\n            // this is to prevent changing hasNewContent to true when meta + v to paste on Safari.\r\n            return;\r\n        }\r\n        var shouldTakeUndo = false;\r\n        var selectionRange = this.editor.getSelectionRange();\r\n        if (selectionRange && !selectionRange.collapsed) {\r\n            // The selection will be removed, should take undo\r\n            shouldTakeUndo = true;\r\n        }\r\n        else if ((evt.which == KEY_SPACE && this.lastKeyPress != KEY_SPACE) ||\r\n            evt.which == KEY_ENTER) {\r\n            shouldTakeUndo = true;\r\n        }\r\n        if (shouldTakeUndo) {\r\n            this.addUndoSnapshot();\r\n            if (evt.which == KEY_ENTER) {\r\n                // Treat ENTER as new content so if there is no input after ENTER and undo,\r\n                // we restore the snapshot before ENTER\r\n                this.hasNewContent = true;\r\n            }\r\n        }\r\n        else {\r\n            this.clearRedoForInput();\r\n        }\r\n        this.lastKeyPress = evt.which;\r\n    };\r\n    Undo.prototype.onContentChanged = function (evt) {\r\n        if (!this.isRestoring) {\r\n            var currentSnapshot = this.getSnapshot();\r\n            if (evt.lastSnapshot != currentSnapshot) {\r\n                this.clearRedoForInput();\r\n            }\r\n        }\r\n    };\r\n    Undo.prototype.getSnapshot = function () {\r\n        return this.editor.getContent(false /*triggerExtractContentEvent*/, true /*markSelection*/);\r\n    };\r\n    Undo.prototype.clearRedoForInput = function () {\r\n        this.getSnapshotsManager().clearRedo();\r\n        this.lastKeyPress = 0;\r\n        this.hasNewContent = true;\r\n    };\r\n    return Undo;\r\n}());\r\nexports.default = Undo;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Max stack size that cannot be exceeded. When exceeded, old undo history will be dropped\r\n// to keep size under limit. This is kept at 10MB\r\nvar MAXSIZELIMIT = 10000000;\r\nvar UndoSnapshots = /** @class */ (function () {\r\n    function UndoSnapshots(maxSize) {\r\n        if (maxSize === void 0) { maxSize = MAXSIZELIMIT; }\r\n        this.maxSize = maxSize;\r\n        this.snapshots = [];\r\n        this.totalSize = 0;\r\n        this.currentIndex = -1;\r\n    }\r\n    UndoSnapshots.prototype.canMove = function (delta) {\r\n        var newIndex = this.currentIndex + delta;\r\n        return newIndex >= 0 && newIndex < this.snapshots.length;\r\n    };\r\n    UndoSnapshots.prototype.move = function (delta) {\r\n        if (this.canMove(delta)) {\r\n            this.currentIndex += delta;\r\n            return this.snapshots[this.currentIndex];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UndoSnapshots.prototype.addSnapshot = function (snapshot) {\r\n        if (this.currentIndex < 0 || snapshot != this.snapshots[this.currentIndex]) {\r\n            this.clearRedo();\r\n            this.snapshots.push(snapshot);\r\n            this.currentIndex++;\r\n            this.totalSize += snapshot.length;\r\n            var removeCount = 0;\r\n            while (removeCount < this.snapshots.length && this.totalSize > this.maxSize) {\r\n                this.totalSize -= this.snapshots[removeCount].length;\r\n                removeCount++;\r\n            }\r\n            if (removeCount > 0) {\r\n                this.snapshots.splice(0, removeCount);\r\n                this.currentIndex -= removeCount;\r\n            }\r\n        }\r\n    };\r\n    UndoSnapshots.prototype.clearRedo = function () {\r\n        if (this.canMove(1)) {\r\n            var removedSize = 0;\r\n            for (var i = this.currentIndex + 1; i < this.snapshots.length; i++) {\r\n                removedSize += this.snapshots[i].length;\r\n            }\r\n            this.snapshots.splice(this.currentIndex + 1);\r\n            this.totalSize -= removedSize;\r\n        }\r\n    };\r\n    return UndoSnapshots;\r\n}());\r\nexports.default = UndoSnapshots;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Clear a cached object by its key from an event object\r\n * @param event The event object\r\n * @param key The cache key\r\n */\r\nfunction clearEventDataCache(event, key) {\r\n    if (event && event.eventDataCache && event.eventDataCache.hasOwnProperty(key)) {\r\n        delete event.eventDataCache[key];\r\n    }\r\n}\r\nexports.default = clearEventDataCache;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * Format table\r\n * @param editor The editor which contains the table to format\r\n * @param format A TableFormat object contains format information we want to apply to the table\r\n * @param table The table to format. This is optional. When not passed, the current table (if any) will be formatted\r\n */\r\nfunction formatTable(editor, format, table) {\r\n    table = table || editor.getElementAtCursor('TABLE');\r\n    if (table) {\r\n        editor.addUndoSnapshot(function (start, end) {\r\n            var vtable = new roosterjs_editor_dom_1.VTable(table);\r\n            vtable.applyFormat(format);\r\n            vtable.writeBack();\r\n            editor.focus();\r\n            editor.select(start, end);\r\n        }, \"Format\" /* Format */);\r\n    }\r\n}\r\nexports.default = formatTable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar ZERO_WIDTH_SPACE = '&#8203;';\r\nvar UNWRAPPABLE_NODES = 'LI,THEAD,TBODY,TR,TD,TH'.split(',');\r\nvar DEFAULT_STYLER = function (_) { };\r\n/**\r\n * Toggle a tag at selection, if selection already contains elements of such tag,\r\n * the elements will be untagge and other elements will take no affect\r\n * @param editor The editor instance\r\n * @param tag The tag name\r\n * @param styler (Optional) The styler for setting the style for the blockquote element\r\n * @param wrapFunction (Optional) The wrap function\r\n * @param unwrapFunction (Optional) The unwrap function\r\n */\r\nfunction toggleTagCore(editor, tag, styler, wrapFunction, unwrapFunction) {\r\n    if (wrapFunction === void 0) { wrapFunction = function (nodes) { return roosterjs_editor_dom_1.wrap(nodes, tag); }; }\r\n    if (unwrapFunction === void 0) { unwrapFunction = roosterjs_editor_dom_1.unwrap; }\r\n    editor.focus();\r\n    editor.addUndoSnapshot(function (start, end) {\r\n        var result;\r\n        var range = editor.getSelectionRange();\r\n        if (range &&\r\n            editor.queryElements(tag, 1 /* OnSelection */, unwrapFunction).length == 0) {\r\n            var startNode = roosterjs_editor_dom_1.Position.getStart(range).normalize().node;\r\n            var startBlock = editor.getBlockElementAtNode(startNode);\r\n            var endNode = roosterjs_editor_dom_1.Position.getEnd(range).normalize().node;\r\n            var endBlock = editor.getBlockElementAtNode(endNode);\r\n            var nodes = startBlock && endBlock\r\n                ? editor.collapseNodes(startBlock.getStartNode(), endBlock.getEndNode(), true /*canSplitParent*/)\r\n                : [];\r\n            if (nodes.length == 0) {\r\n                // Selection is collapsed and blockElement is null, we need to create an empty div.\r\n                // In case of IE and Edge, we insert ZWS to put cursor in the div, otherwise insert BR node.\r\n                nodes = roosterjs_editor_dom_1.fromHtml(\"<DIV>\" + (roosterjs_editor_dom_1.Browser.isIEOrEdge ? ZERO_WIDTH_SPACE : '<BR>') + \"</DIV>\", editor.getDocument());\r\n                editor.insertNode(nodes[0]);\r\n                editor.select(nodes[0], 0 /* Begin */);\r\n            }\r\n            else if (nodes.length == 1) {\r\n                var tag_1 = roosterjs_editor_dom_1.getTagOfNode(nodes[0]);\r\n                if (tag_1 == 'BR') {\r\n                    nodes = [roosterjs_editor_dom_1.wrap(nodes[0])];\r\n                }\r\n                else if (tag_1 == 'LI' || tag_1 == 'TD') {\r\n                    nodes = [].slice.call(nodes[0].childNodes);\r\n                }\r\n            }\r\n            else {\r\n                while (nodes[0] &&\r\n                    editor.contains(nodes[0].parentNode) &&\r\n                    nodes.some(function (node) { return UNWRAPPABLE_NODES.indexOf(roosterjs_editor_dom_1.getTagOfNode(node)) >= 0; })) {\r\n                    nodes = [roosterjs_editor_dom_1.splitBalancedNodeRange(nodes)];\r\n                }\r\n            }\r\n            result = wrapFunction(nodes);\r\n            (styler || DEFAULT_STYLER)(result);\r\n        }\r\n        if (!editor.select(start, end) && result) {\r\n            editor.select(result);\r\n        }\r\n        return result;\r\n    }, \"Format\" /* Format */);\r\n}\r\nexports.default = toggleTagCore;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_plugins_1 = require(\"roosterjs-editor-plugins\");\r\nvar roosterjs_plugin_image_resize_1 = require(\"roosterjs-plugin-image-resize\");\r\nvar defaultPluginsString = [\r\n    'var plugins = [',\r\n    '  new roosterPlugins.HyperLink(),',\r\n    '  new roosterPlugins.Paste(),',\r\n    '  new roosterPlugins.ContentEdit(),',\r\n    '];\\n',\r\n].join('\\n');\r\nfunction updateSampleCode(plugins, defaultFormat, features) {\r\n    updateHtmlSampleCode();\r\n    updateJsSampleCode(plugins, defaultFormat, features);\r\n}\r\nexports.default = updateSampleCode;\r\nfunction updateHtmlSampleCode() {\r\n    var htmlSampleCode = document.getElementById('htmlSample');\r\n    htmlSampleCode.innerHTML = '';\r\n    var node = document.createElement('h2');\r\n    node.innerHTML = 'Html Sample Code';\r\n    htmlSampleCode.appendChild(node);\r\n    var codeString = [\r\n        '<html>',\r\n        '   <body>',\r\n        '       <div id=\"editorDiv\" style=\"width: 500px; height: 300px; overflow: auto;',\r\n        '       border: solid 1px black\"></div>',\r\n        '       <script src=\"editor.js\"></script>',\r\n        '   </body>',\r\n        '</html>',\r\n    ].join('\\n');\r\n    htmlSampleCode.appendChild(createElementFromContent('htmlSampleCode', codeString));\r\n}\r\nfunction updateJsSampleCode(plugins, defaultFormat, features) {\r\n    var jsSampleCode = document.getElementById('jsSample');\r\n    jsSampleCode.innerHTML = '';\r\n    var node = document.createElement('h2');\r\n    node.innerHTML = 'JS Sample Code';\r\n    jsSampleCode.appendChild(node);\r\n    var startString = assembleRequireString(plugins, defaultFormat);\r\n    var pluginsString = assemblePluginsString(plugins, features);\r\n    var formatString = assembleFormatString(defaultFormat);\r\n    var optionsString = assembleOptionsString(pluginsString, formatString);\r\n    var endString = assembleEndString(optionsString);\r\n    var jsCodeString = startString +\r\n        pluginsString +\r\n        formatString +\r\n        optionsString +\r\n        endString;\r\n    jsSampleCode.appendChild(createElementFromContent('jsSampleCode', jsCodeString));\r\n}\r\n// Create an 'xmp' block so the code can be displayed as is\r\nfunction createElementFromContent(id, content) {\r\n    var node = document.createElement('xmp');\r\n    node.id = id;\r\n    document.body.insertBefore(node, document.body.childNodes[0]);\r\n    node.innerHTML = content;\r\n    return node;\r\n}\r\nfunction assemblePluginsString(plugins, features) {\r\n    if (plugins) {\r\n        var contentEditOptions_1 = '';\r\n        var pluginsString_1 = '';\r\n        if (features) {\r\n            pluginsString_1 += 'var options = roosterjsPlugins.getDefaultContentEditFeatures();\\n';\r\n            var defaultFeatures = roosterjs_editor_plugins_1.getDefaultContentEditFeatures();\r\n            for (var _i = 0, _a = Object.keys(defaultFeatures); _i < _a.length; _i++) {\r\n                var key = _a[_i];\r\n                if (key != 'smartOrderedListStyles' && features[key] != defaultFeatures[key]) {\r\n                    pluginsString_1 += 'options.' + key + ' = ' + (features[key] ? 'true' : 'false') + ';\\n';\r\n                }\r\n            }\r\n            contentEditOptions_1 += '  new roosterjsPlugins.ContentEdit(options),\\n';\r\n        }\r\n        else {\r\n            contentEditOptions_1 = '  new roosterjsPlugins.ContentEdit(),\\n';\r\n        }\r\n        pluginsString_1 += 'var plugins = [\\n';\r\n        plugins.forEach(function (plugin) {\r\n            if (plugin instanceof roosterjs_editor_plugins_1.Watermark) {\r\n                pluginsString_1 += \"  new roosterjsPlugins.Watermark('Type content here...'),\\n\";\r\n            }\r\n            else if (plugin instanceof roosterjs_plugin_image_resize_1.ImageResize) {\r\n                pluginsString_1 += '  new roosterjsImageResizePlugin.ImageResize(),\\n';\r\n            }\r\n            else if (plugin instanceof roosterjs_editor_plugins_1.HyperLink) {\r\n                pluginsString_1 += '  new roosterjsPlugins.HyperLink(),\\n';\r\n            }\r\n            else if (plugin instanceof roosterjs_editor_plugins_1.Paste) {\r\n                pluginsString_1 += '  new roosterjsPlugins.Paste(),\\n';\r\n            }\r\n            else if (plugin instanceof roosterjs_editor_plugins_1.ContentEdit) {\r\n                pluginsString_1 += contentEditOptions_1;\r\n            }\r\n            else if (plugin instanceof roosterjs_editor_plugins_1.TableResize) {\r\n                pluginsString_1 += '  new roosterjsPlugins.TableResize(),\\n';\r\n            }\r\n        });\r\n        pluginsString_1 += '];\\n';\r\n        if (pluginsString_1 != defaultPluginsString) {\r\n            return pluginsString_1;\r\n        }\r\n    }\r\n    return '';\r\n}\r\nfunction assembleFormatString(defaultFormat) {\r\n    if (!defaultFormat) {\r\n        return '';\r\n    }\r\n    var defaultFormatString = 'var defaultFormat = {\\n';\r\n    if (defaultFormat.bold) {\r\n        defaultFormatString += '  bold: true,\\n';\r\n    }\r\n    if (defaultFormat.italic) {\r\n        defaultFormatString += '  italic: true,\\n';\r\n    }\r\n    if (defaultFormat.underline) {\r\n        defaultFormatString += '  underline: true,\\n';\r\n    }\r\n    if (defaultFormat.textColor) {\r\n        defaultFormatString += \"  textColor: \\\"\" + defaultFormat.textColor + \"\\\",\\n\";\r\n    }\r\n    if (defaultFormat.fontFamily) {\r\n        defaultFormatString += \"  fontFamily: \\\"\" + defaultFormat.fontFamily + \"\\\",\\n\";\r\n    }\r\n    defaultFormatString += '};\\n';\r\n    return defaultFormatString;\r\n}\r\nfunction assembleRequireString(plugins, defaultFormat) {\r\n    //If there is no plugins or defaultFormat provided, require roosterjs package only\r\n    if (!plugins && !defaultFormat) {\r\n        return 'var roosterjs = require(\\'roosterjs\\');\\n';\r\n    }\r\n    var requireString = '';\r\n    //If there is image resize plugin, require the image resize plugin package\r\n    plugins.forEach(function (plugin) {\r\n        if (plugin instanceof roosterjs_plugin_image_resize_1.ImageResize) {\r\n            requireString = requireString.concat(\"var roosterjsImageResizePlugin = require('roosterjs-plugin-image-resize');\\n\");\r\n            return;\r\n        }\r\n    });\r\n    //If there are other plugins than image resize plugins, require roosterjs plugin package\r\n    if (plugins.length > 1) {\r\n        requireString = requireString.concat(\"var roosterjsPlugins = require('roosterjs-editor-plugins');\\n\");\r\n    }\r\n    requireString = requireString.concat(\"var roosterjsCore = require('roosterjs-editor-core');\\n\");\r\n    return requireString;\r\n}\r\nfunction assembleOptionsString(pluginsString, formatString) {\r\n    if (!pluginsString && !formatString) {\r\n        return '';\r\n    }\r\n    var optionsString = 'var options = {\\n';\r\n    if (pluginsString) {\r\n        optionsString = optionsString.concat('  plugins: plugins,\\n');\r\n    }\r\n    if (formatString) {\r\n        optionsString = optionsString.concat('  defaultFormat: defaultFormat,\\n');\r\n    }\r\n    optionsString = optionsString.concat('};\\n');\r\n    return optionsString;\r\n}\r\nfunction assembleEndString(optionsString) {\r\n    var endString = \"var editorDiv = document.getElementById('editorDiv');\\n\";\r\n    if (optionsString) {\r\n        endString = endString.concat('var editor = new roosterjsCore.Editor(editorDiv, options);');\r\n    }\r\n    else {\r\n        endString = endString.concat('var editor = roosterjs.createEditor(editorDiv);');\r\n    }\r\n    return endString;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DefaultShortcut_1 = require(\"./DefaultShortcut/DefaultShortcut\");\r\nexports.DefaultShortcut = DefaultShortcut_1.default;\r\nvar HyperLink_1 = require(\"./HyperLink/HyperLink\");\r\nexports.HyperLink = HyperLink_1.default;\r\nvar ContentEdit_1 = require(\"./ContentEdit/ContentEdit\");\r\nexports.ContentEdit = ContentEdit_1.default;\r\nvar Paste_1 = require(\"./Paste/Paste\");\r\nexports.Paste = Paste_1.default;\r\nvar ContentEditFeatures_1 = require(\"./ContentEdit/ContentEditFeatures\");\r\nexports.getDefaultContentEditFeatures = ContentEditFeatures_1.getDefaultContentEditFeatures;\r\nvar Watermark_1 = require(\"./Watermark/Watermark\");\r\nexports.Watermark = Watermark_1.default;\r\nvar TableResize_1 = require(\"./TableResize/TableResize\");\r\nexports.TableResize = TableResize_1.default;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Get default feature set of ContentEdit plugin\r\n */\r\nfunction getDefaultContentEditFeatures() {\r\n    return {\r\n        autoLink: true,\r\n        indentWhenTab: true,\r\n        outdentWhenShiftTab: true,\r\n        outdentWhenBackspaceOnEmptyFirstLine: true,\r\n        outdentWhenEnterOnEmptyLine: true,\r\n        mergeInNewLineWhenBackspaceOnFirstChar: false,\r\n        unquoteWhenBackspaceOnEmptyFirstLine: true,\r\n        unquoteWhenEnterOnEmptyLine: true,\r\n        autoBullet: true,\r\n        tabInTable: true,\r\n        upDownInTable: true,\r\n        defaultShortcut: true,\r\n        unlinkWhenBackspaceAfterLink: false,\r\n        smartOrderedList: false,\r\n        smartOrderedListStyles: ['lower-alpha', 'lower-roman', 'decimal'],\r\n    };\r\n}\r\nexports.getDefaultContentEditFeatures = getDefaultContentEditFeatures;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar ZERO_WIDTH_SPACE = '&#8203;';\r\n/**\r\n * Convert plain to HTML\r\n * @param text The plain text to convert\r\n * @returns HTML string to present the input text\r\n */\r\nfunction textToHtml(text) {\r\n    text = (text || '')\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/^ /gm, '&nbsp;')\r\n        .replace(/\\r/g, '');\r\n    var lines = text.split('\\n');\r\n    if (lines.length == 2) {\r\n        text = \"<span>\" + lines[0] + \"<br></span><span>\" + lines[1] + \"</span>\";\r\n    }\r\n    else if (lines.length > 2) {\r\n        text = '';\r\n        var lineEnd_1 = roosterjs_editor_dom_1.Browser.isIEOrEdge ? ZERO_WIDTH_SPACE : '<br>';\r\n        lines.forEach(function (line, i) {\r\n            if (i == 0) {\r\n                text += \"<span>\" + line + \"<br></span>\";\r\n            }\r\n            else if (i == lines.length - 1) {\r\n                text += \"<span>\" + line + \"</span>\";\r\n            }\r\n            else {\r\n                text += \"<div>\" + line + lineEnd_1 + \"</div>\";\r\n            }\r\n        });\r\n    }\r\n    text = text.replace(/\\s\\s/g, ' &nbsp;');\r\n    return text;\r\n}\r\nexports.default = textToHtml;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/** NodeId attribute */\r\nvar NODE_ID_ATTRIBUTE_NAME = 'NodeId';\r\n/** create an empty CustomData */\r\nfunction createCustomData() {\r\n    return {\r\n        dict: {},\r\n        nextNodeId: 1,\r\n    };\r\n}\r\nexports.createCustomData = createCustomData;\r\n/**\r\n * Sets the specified object data\r\n */\r\nfunction setObject(customData, element, key, value) {\r\n    // Get the id for the element\r\n    if (element.nodeType == 1 /* Element */) {\r\n        var id = getAndSetNodeId(customData, element);\r\n        if (id != '') {\r\n            // Get the values for the element\r\n            if (!customData.dict[id]) {\r\n                // First time dictionary creation\r\n                customData.dict[id] = {};\r\n            }\r\n            customData.dict[id][key] = value;\r\n        }\r\n    }\r\n}\r\nexports.setObject = setObject;\r\n/**\r\n * Reads the specified object data\r\n */\r\nfunction getObject(customData, element, key) {\r\n    if (element.nodeType == 1 /* Element */) {\r\n        var id = getAndSetNodeId(customData, element);\r\n        if (id != '') {\r\n            return customData.dict[id] && customData.dict[id][key];\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.getObject = getObject;\r\n/** Get the unique id for the specified node... */\r\nfunction getAndSetNodeId(customData, element) {\r\n    var id = element.getAttribute(NODE_ID_ATTRIBUTE_NAME);\r\n    if (!id) {\r\n        id = customData.nextNodeId.toString();\r\n        customData.nextNodeId++;\r\n        element.setAttribute(NODE_ID_ATTRIBUTE_NAME, id);\r\n    }\r\n    return id;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/** create an empty LevelLists */\r\nfunction createLevelLists() {\r\n    return {\r\n        listsMetadata: {},\r\n        currentUniqueListId: -1,\r\n    };\r\n}\r\nexports.createLevelLists = createLevelLists;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ImageResize_1 = require(\"./ImageResize\");\r\nexports.ImageResize = ImageResize_1.default;\r\nexports.ImageResizePlugin = ImageResize_1.ImageResizePlugin;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar initFormatBar_1 = require(\"./initFormatBar\");\r\nvar updateSampleCode_1 = require(\"./updateSampleCode\");\r\nvar initOptions_1 = require(\"./initOptions\");\r\nwindow.onload = function () {\r\n    initTabs();\r\n    initEditor();\r\n    initFormatBar_1.default();\r\n    initOptions_1.default();\r\n    updateSampleCode_1.default();\r\n    switchTab('quickstart');\r\n};\r\nfunction initTabs() {\r\n    document.getElementById('quickstartTab').addEventListener('click', function () {\r\n        switchTab('quickstart');\r\n    });\r\n    document.getElementById('optionsTab').addEventListener('click', function () {\r\n        switchTab('options');\r\n    });\r\n    document.getElementById('advanceTab').addEventListener('click', function () {\r\n        switchTab('advance');\r\n    });\r\n}\r\nfunction switchTab(name) {\r\n    document.getElementById('quickstartTab').className = name == 'quickstart' ? 'selected' : '';\r\n    document.getElementById('optionsTab').className = name == 'options' ? 'selected' : '';\r\n    document.getElementById('advanceTab').className = name == 'advance' ? 'selected' : '';\r\n    document.getElementById('options').className = name == 'options' ? 'tab selected' : 'tab';\r\n    document.getElementById('advance').className = name == 'advance' ? 'tab selected' : 'tab';\r\n    document.getElementById('sampleCodeContainer').style.display = name == 'advance' ? 'none' : '';\r\n    document.getElementById('snapshotContainer').style.display = name != 'advance' ? 'none' : '';\r\n}\r\nfunction initEditor() {\r\n    var editorArea = document.getElementById('editor');\r\n    editorArea.innerHTML = '';\r\n    initOptions_1.initEditorForOptions();\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_api_1 = require(\"roosterjs-editor-api\");\r\nvar currentEditor_1 = require(\"./currentEditor\");\r\nvar roosterjs_html_sanitizer_1 = require(\"roosterjs-html-sanitizer\");\r\nvar TABLE_FORMAT = [\r\n    createTableFormat('#FFF', '#FFF', '#ABABAB', '#ABABAB', '#ABABAB'),\r\n    createTableFormat('#FFF', '#FFF', null, '#92C0E0'),\r\n    createTableFormat('#C0E4FF', '#FFF'),\r\n    createTableFormat('#D8D8D8', '#FFF'),\r\n    createTableFormat('#D8D8D8', '#FFF', '#ABABAB', '#ABABAB', '#ABABAB'),\r\n    createTableFormat('#FFF', '#FFF'),\r\n];\r\nfunction createTableFormat(bgColorEven, bgColorOdd, topBorder, bottomBorder, verticalBorder) {\r\n    return {\r\n        bgColorEven: bgColorEven,\r\n        bgColorOdd: bgColorOdd,\r\n        topBorderColor: topBorder,\r\n        bottomBorderColor: bottomBorder,\r\n        verticalBorderColor: verticalBorder,\r\n    };\r\n}\r\nfunction initFormatBar() {\r\n    // Bold\r\n    document.getElementById('boldButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.toggleBold(currentEditor_1.default());\r\n    });\r\n    // Italic\r\n    document.getElementById('italicButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.toggleItalic(currentEditor_1.default());\r\n    });\r\n    // Underline\r\n    document.getElementById('underlineButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.toggleUnderline(currentEditor_1.default());\r\n    });\r\n    // Bullets\r\n    document.getElementById('bulletButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.toggleBullet(currentEditor_1.default());\r\n    });\r\n    // Numbering\r\n    document.getElementById('numberingButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.toggleNumbering(currentEditor_1.default());\r\n    });\r\n    // Blockquote\r\n    document.getElementById('blockquoteButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.toggleBlockQuote(currentEditor_1.default());\r\n    });\r\n    // Code\r\n    document.getElementById('codeButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.toggleCodeBlock(currentEditor_1.default());\r\n    });\r\n    // StrikeThrough\r\n    document.getElementById('strikeThroughButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.toggleStrikethrough(currentEditor_1.default());\r\n    });\r\n    // SuperScript\r\n    document.getElementById('superScriptButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.toggleSuperscript(currentEditor_1.default());\r\n    });\r\n    // SubScript\r\n    document.getElementById('subScriptButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.toggleSubscript(currentEditor_1.default());\r\n    });\r\n    // Insert link\r\n    document.getElementById('insertLink').addEventListener('click', function () {\r\n        var editor = currentEditor_1.default();\r\n        var range = editor.getSelectionRange();\r\n        var existingLink = editor.queryElements('a[href]', 1 /* OnSelection */)[0];\r\n        var url = window.prompt('Url', existingLink ? existingLink.href : 'http://');\r\n        var text = window.prompt('Text of link', existingLink ? existingLink.textContent : range.collapsed ? url : range.toString());\r\n        roosterjs_editor_api_1.createLink(editor, url, url, text);\r\n    });\r\n    // ClearFormat\r\n    document.getElementById('clearFormatButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.clearFormat(currentEditor_1.default());\r\n    });\r\n    // ClearBlockFormat\r\n    document.getElementById('clearBlockFormatButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.clearBlockFormat(currentEditor_1.default());\r\n    });\r\n    // Edit table\r\n    document.getElementById('editTable').addEventListener('change', function () {\r\n        var select = document.getElementById('editTable');\r\n        var intValue = parseInt(select.value);\r\n        if (intValue >= 0) {\r\n            var operation = intValue;\r\n            roosterjs_editor_api_1.editTable(currentEditor_1.default(), operation);\r\n            select.value = '-1';\r\n        }\r\n    });\r\n    document.getElementById('formatTable').addEventListener('change', function () {\r\n        var select = document.getElementById('formatTable');\r\n        var intValue = parseInt(select.value);\r\n        if (intValue >= 0) {\r\n            roosterjs_editor_api_1.formatTable(currentEditor_1.default(), TABLE_FORMAT[intValue]);\r\n            select.value = '-1';\r\n        }\r\n    });\r\n    // Header\r\n    document.getElementById('header').addEventListener('change', function () {\r\n        var select = document.getElementById('header');\r\n        var level = parseInt(select.value);\r\n        roosterjs_editor_api_1.toggleHeader(currentEditor_1.default(), level);\r\n        select.value = '-1';\r\n    });\r\n    // Insert Table\r\n    document.getElementById('insertTable').addEventListener('click', function () {\r\n        var columns = Math.min(parseInt(window.prompt('How many columns?')), 10);\r\n        var rows = Math.min(parseInt(window.prompt('How many rows?')), 10);\r\n        if (columns > 0 && rows > 0) {\r\n            roosterjs_editor_api_1.insertTable(currentEditor_1.default(), columns, rows);\r\n        }\r\n    });\r\n    // Insert Image\r\n    document.getElementById('insertImage').addEventListener('click', function () {\r\n        document.getElementById('selectFile').click();\r\n    });\r\n    document.getElementById('selectFile').addEventListener('change', function () {\r\n        var input = document.getElementById('selectFile');\r\n        var file = input.files[0];\r\n        if (file) {\r\n            roosterjs_editor_api_1.insertImage(currentEditor_1.default(), file);\r\n            input.value = '';\r\n        }\r\n    });\r\n    // Indent\r\n    document.getElementById('indentButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.setIndentation(currentEditor_1.default(), 0 /* Increase */);\r\n    });\r\n    // Outdent\r\n    document.getElementById('outdentButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.setIndentation(currentEditor_1.default(), 1 /* Decrease */);\r\n    });\r\n    // AlignLeft\r\n    document.getElementById('alignLeftButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.setAlignment(currentEditor_1.default(), 0 /* Left */);\r\n    });\r\n    // AlignCenter\r\n    document.getElementById('alignCenterButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.setAlignment(currentEditor_1.default(), 1 /* Center */);\r\n    });\r\n    // AlignRight\r\n    document.getElementById('alignRightButton').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.setAlignment(currentEditor_1.default(), 2 /* Right */);\r\n    });\r\n    // LTR\r\n    document.getElementById('ltr').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.setDirection(currentEditor_1.default(), 0 /* LeftToRight */);\r\n    });\r\n    // RTL\r\n    document.getElementById('rtl').addEventListener('click', function () {\r\n        roosterjs_editor_api_1.setDirection(currentEditor_1.default(), 1 /* RightToLeft */);\r\n    });\r\n    // undo\r\n    document.getElementById('undoButton').addEventListener('click', function () {\r\n        var editor = currentEditor_1.default();\r\n        editor.focus();\r\n        editor.undo();\r\n    });\r\n    // redo\r\n    document.getElementById('redoButton').addEventListener('click', function () {\r\n        var editor = currentEditor_1.default();\r\n        editor.focus();\r\n        editor.redo();\r\n    });\r\n    // remove link\r\n    document.getElementById('removeLink').addEventListener('click', function () {\r\n        var editor = currentEditor_1.default();\r\n        editor.focus();\r\n        roosterjs_editor_api_1.removeLink(editor);\r\n    });\r\n    // font name\r\n    document.getElementById('fontNameButton').addEventListener('change', function () {\r\n        var editor = currentEditor_1.default();\r\n        var select = document.getElementById('fontNameButton');\r\n        var text = select.value;\r\n        if (text) {\r\n            roosterjs_editor_api_1.setFontName(editor, text);\r\n        }\r\n        select.value = '';\r\n    });\r\n    // font size\r\n    document.getElementById('fontSizeButton').addEventListener('change', function () {\r\n        var editor = currentEditor_1.default();\r\n        var select = document.getElementById('fontSizeButton');\r\n        var text = select.value;\r\n        if (text) {\r\n            roosterjs_editor_api_1.setFontSize(editor, text + 'pt');\r\n        }\r\n        select.value = '';\r\n    });\r\n    // text color\r\n    document.getElementById('textColorButton').addEventListener('change', function () {\r\n        var editor = currentEditor_1.default();\r\n        var select = document.getElementById('textColorButton');\r\n        var text = select.value;\r\n        if (text) {\r\n            roosterjs_editor_api_1.setTextColor(editor, text);\r\n        }\r\n        select.value = '';\r\n    });\r\n    // back color\r\n    document.getElementById('backColorButton').addEventListener('change', function () {\r\n        var editor = currentEditor_1.default();\r\n        var select = document.getElementById('backColorButton');\r\n        var text = select.value;\r\n        if (text) {\r\n            roosterjs_editor_api_1.setBackgroundColor(editor, text);\r\n        }\r\n        select.value = '';\r\n    });\r\n    // Sanitize HTML\r\n    document.getElementById('sanitizeHtmlButton').addEventListener('click', function () {\r\n        var editor = currentEditor_1.default();\r\n        var html = editor.getContent();\r\n        html = roosterjs_html_sanitizer_1.HtmlSanitizer.sanitizeHtml(html);\r\n        editor.setContent(html);\r\n    });\r\n}\r\nexports.default = initFormatBar;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar applyInlineStyle_1 = require(\"../utils/applyInlineStyle\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * Default font size sequence, in pt. Suggest editor UI use this sequence as your font size list,\r\n * So that when increase/decrease font size, the font size can match the sequence of your font size picker\r\n */\r\nexports.FONT_SIZES = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72];\r\nvar MIN_FONT_SIZE = 1;\r\nvar MAX_FONT_SIZE = 1000;\r\n/**\r\n * Increase or decrease font size in selection\r\n * @param editor The editor instance\r\n * @param change Whether increase or decrease font size\r\n * @param fontSizes A sorted font size array, in pt. Default value is FONT_SIZES\r\n */\r\nfunction changeFontSize(editor, change, fontSizes) {\r\n    if (fontSizes === void 0) { fontSizes = exports.FONT_SIZES; }\r\n    var changeBase = change == 0 /* Increase */ ? 1 : -1;\r\n    applyInlineStyle_1.default(editor, function (element) {\r\n        var pt = parseFloat(roosterjs_editor_dom_1.getComputedStyle(element, 'font-size'));\r\n        element.style.fontSize = getNewFontSize(pt, changeBase, fontSizes) + 'pt';\r\n        var lineHeight = roosterjs_editor_dom_1.getComputedStyle(element, 'line-height');\r\n        if (lineHeight != 'normal') {\r\n            element.style.lineHeight = 'normal';\r\n        }\r\n    });\r\n}\r\nexports.default = changeFontSize;\r\nfunction getNewFontSize(pt, changeBase, fontSizes) {\r\n    pt = changeBase == 1 ? Math.floor(pt) : Math.ceil(pt);\r\n    var last = fontSizes[fontSizes.length - 1];\r\n    if (pt <= fontSizes[0]) {\r\n        pt = Math.max(pt + changeBase, MIN_FONT_SIZE);\r\n    }\r\n    else if (pt > last || (pt == last && changeBase == 1)) {\r\n        pt = pt / 10;\r\n        pt = changeBase == 1 ? Math.floor(pt) : Math.ceil(pt);\r\n        pt = Math.min(Math.max((pt + changeBase) * 10, last), MAX_FONT_SIZE);\r\n    }\r\n    else if (changeBase == 1) {\r\n        for (var i = 0; i < fontSizes.length; i++) {\r\n            if (pt < fontSizes[i]) {\r\n                pt = fontSizes[i];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (var i = fontSizes.length - 1; i >= 0; i--) {\r\n            if (pt > fontSizes[i]) {\r\n                pt = fontSizes[i];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return pt;\r\n}\r\nexports.getNewFontSize = getNewFontSize;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar contains_1 = require(\"../utils/contains\");\r\nvar getFirstLastBlockElement_1 = require(\"../blockElements/getFirstLastBlockElement\");\r\nvar getFirstLastInlineElement_1 = require(\"../inlineElements/getFirstLastInlineElement\");\r\n/**\r\n * provides scoper for traversing the entire editor body starting from the beginning\r\n */\r\nvar BodyScoper = /** @class */ (function () {\r\n    /**\r\n     * Construct a new instance of BodyScoper class\r\n     * @param rootNode Root node of the body\r\n     */\r\n    function BodyScoper(rootNode) {\r\n        this.rootNode = rootNode;\r\n    }\r\n    /**\r\n     * Get the start block element\r\n     */\r\n    BodyScoper.prototype.getStartBlockElement = function () {\r\n        return getFirstLastBlockElement_1.getFirstBlockElement(this.rootNode);\r\n    };\r\n    /**\r\n     * Get the start inline element\r\n     */\r\n    BodyScoper.prototype.getStartInlineElement = function () {\r\n        return getFirstLastInlineElement_1.getFirstInlineElement(this.rootNode);\r\n    };\r\n    /**\r\n     * Since the scope is global, all blocks under the root node are in scope\r\n     */\r\n    BodyScoper.prototype.isBlockInScope = function (blockElement) {\r\n        return contains_1.default(this.rootNode, blockElement.getStartNode());\r\n    };\r\n    /**\r\n     * Since we're at body scope, inline elements never need to be trimmed\r\n     */\r\n    BodyScoper.prototype.trimInlineElement = function (inlineElement) {\r\n        return inlineElement;\r\n    };\r\n    return BodyScoper;\r\n}());\r\nexports.default = BodyScoper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar EmptyInlineElement_1 = require(\"../inlineElements/EmptyInlineElement\");\r\nvar getBlockElementAtNode_1 = require(\"../blockElements/getBlockElementAtNode\");\r\nvar Position_1 = require(\"../selection/Position\");\r\nvar getInlineElementBeforeAfter_1 = require(\"../inlineElements/getInlineElementBeforeAfter\");\r\n/**\r\n * This provides traversing content in a selection start block\r\n * This is commonly used for those cursor context sensitive plugin,\r\n * they want to know text being typed at cursor\r\n * This provides a scope for parsing from cursor position up to begin of the selection block\r\n */\r\nvar SelectionBlockScoper = /** @class */ (function () {\r\n    /**\r\n     * Create a new instance of SelectionBlockScoper class\r\n     * @param rootNode The root node of the whole scope\r\n     * @param position Position of the selection start\r\n     * @param startFrom Where to start, can be Begin, End, SelectionStart\r\n     */\r\n    function SelectionBlockScoper(rootNode, position, startFrom) {\r\n        this.rootNode = rootNode;\r\n        this.startFrom = startFrom;\r\n        position = position instanceof Range ? Position_1.default.getStart(position) : position;\r\n        this.position = position.normalize();\r\n        this.block = getBlockElementAtNode_1.default(this.rootNode, this.position.node);\r\n    }\r\n    /**\r\n     * Get the start block element\r\n     */\r\n    SelectionBlockScoper.prototype.getStartBlockElement = function () {\r\n        return this.block;\r\n    };\r\n    /**\r\n     * Get the start inline element\r\n     * The start inline refers to inline before the selection start\r\n     *  The reason why we choose the one before rather after is, when cursor is at the end of a paragragh,\r\n     * the one after likely will point to inline in next paragragh which may be null if the cursor is at bottom of editor\r\n     */\r\n    SelectionBlockScoper.prototype.getStartInlineElement = function () {\r\n        if (this.block) {\r\n            switch (this.startFrom) {\r\n                case 0 /* Begin */:\r\n                    return this.block.getFirstInlineElement();\r\n                case 1 /* End */:\r\n                    return this.block.getLastInlineElement();\r\n                case 2 /* SelectionStart */:\r\n                    // Get the inline before selection start point, and ensure it falls in the selection block\r\n                    var startInline = getInlineElementBeforeAfter_1.getInlineElementAfter(this.rootNode, this.position);\r\n                    return startInline && this.block.isInBlock(startInline)\r\n                        ? startInline\r\n                        : new EmptyInlineElement_1.default(this.position, this.block);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Check if the given block element is in current scope\r\n     * @param blockElement The block element to check\r\n     */\r\n    SelectionBlockScoper.prototype.isBlockInScope = function (blockElement) {\r\n        return this.block && blockElement ? this.block.equals(blockElement) : false;\r\n    };\r\n    /**\r\n     * Trim the incoming inline element, and return an inline element\r\n     * This just tests and return the inline element if it is in block\r\n     * This is a block scoper, which is not like selection scoper where it may cut an inline element in half\r\n     * A block scoper does not cut an inline in half\r\n     */\r\n    SelectionBlockScoper.prototype.trimInlineElement = function (inlineElement) {\r\n        return this.block && inlineElement && this.block.isInBlock(inlineElement)\r\n            ? inlineElement\r\n            : null;\r\n    };\r\n    return SelectionBlockScoper;\r\n}());\r\nexports.default = SelectionBlockScoper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getBlockElementAtNode_1 = require(\"../blockElements/getBlockElementAtNode\");\r\nvar PartialInlineElement_1 = require(\"../inlineElements/PartialInlineElement\");\r\nvar Position_1 = require(\"../selection/Position\");\r\nvar getInlineElementBeforeAfter_1 = require(\"../inlineElements/getInlineElementBeforeAfter\");\r\n/**\r\n * This is selection scoper that provide a start inline as the start of the selection\r\n * and checks if a block falls in the selection (isBlockInScope)\r\n * last trimInlineElement to trim any inline element to return a partial that falls in the selection\r\n */\r\nvar SelectionScoper = /** @class */ (function () {\r\n    /**\r\n     * Create a new instance of SelectionScoper class\r\n     * @param rootNode The root node of the content\r\n     * @param range The selection range to scope to\r\n     */\r\n    function SelectionScoper(rootNode, range) {\r\n        this.rootNode = rootNode;\r\n        this.start = Position_1.default.getStart(range).normalize();\r\n        this.end = Position_1.default.getEnd(range).normalize();\r\n    }\r\n    /**\r\n     * Provide a start block as the first block after the cursor\r\n     */\r\n    SelectionScoper.prototype.getStartBlockElement = function () {\r\n        if (!this.startBlock) {\r\n            this.startBlock = getBlockElementAtNode_1.default(this.rootNode, this.start.node);\r\n        }\r\n        return this.startBlock;\r\n    };\r\n    /**\r\n     * Provide a start inline as the first inline after the cursor\r\n     */\r\n    SelectionScoper.prototype.getStartInlineElement = function () {\r\n        if (!this.startInline) {\r\n            this.startInline = this.trimInlineElement(getInlineElementBeforeAfter_1.getInlineElementAfter(this.rootNode, this.start));\r\n        }\r\n        return this.startInline;\r\n    };\r\n    /**\r\n     * Checks if a block completely falls in the selection\r\n     * @param block The BlockElement to check\r\n     */\r\n    SelectionScoper.prototype.isBlockInScope = function (block) {\r\n        if (!block) {\r\n            return false;\r\n        }\r\n        var inScope = false;\r\n        var selStartBlock = this.getStartBlockElement();\r\n        if (this.start.equalTo(this.end)) {\r\n            inScope = selStartBlock && selStartBlock.equals(block);\r\n        }\r\n        else {\r\n            var selEndBlock = getBlockElementAtNode_1.default(this.rootNode, this.end.node);\r\n            // There are three cases that are considered as \"block in scope\"\r\n            // 1) The start of selection falls on the block\r\n            // 2) The end of selection falls on the block\r\n            // 3) the block falls in-between selection start and end\r\n            inScope =\r\n                selStartBlock &&\r\n                    selEndBlock &&\r\n                    (block.equals(selStartBlock) ||\r\n                        block.equals(selEndBlock) ||\r\n                        (block.isAfter(selStartBlock) && selEndBlock.isAfter(block)));\r\n        }\r\n        return inScope;\r\n    };\r\n    /**\r\n     * Trim an incoming inline. If it falls completely outside selection, return null\r\n     * otherwise return a partial that represents the portion that falls in the selection\r\n     * @param inline The InlineElement to check\r\n     */\r\n    SelectionScoper.prototype.trimInlineElement = function (inline) {\r\n        if (!inline || this.start.equalTo(this.end)) {\r\n            return null;\r\n        }\r\n        // Temp code. Will be changed to using InlineElement.getStart/EndPosition() soon\r\n        var start = inline.getStartPosition();\r\n        var end = inline.getEndPosition();\r\n        if (start.isAfter(this.end) || this.start.isAfter(end)) {\r\n            return null;\r\n        }\r\n        var startPartial = false;\r\n        var endPartial = false;\r\n        if (this.start.isAfter(start)) {\r\n            start = this.start;\r\n            startPartial = true;\r\n        }\r\n        if (end.isAfter(this.end)) {\r\n            end = this.end;\r\n            endPartial = true;\r\n        }\r\n        return start.isAfter(end) || start.equalTo(end)\r\n            ? null\r\n            : startPartial || endPartial\r\n                ? new PartialInlineElement_1.default(inline, startPartial && start, endPartial && end)\r\n                : inline;\r\n    };\r\n    return SelectionScoper;\r\n}());\r\nexports.default = SelectionScoper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ContentTraverser_1 = require(\"./ContentTraverser\");\r\nvar createRange_1 = require(\"../selection/createRange\");\r\nvar matchWhiteSpaces_1 = require(\"../utils/matchWhiteSpaces\");\r\n/**\r\n * The class that helps search content around a position\r\n */\r\nvar PositionContentSearcher = /** @class */ (function () {\r\n    /**\r\n     * Create a new CursorData instance\r\n     * @param rootNode Root node of the whole scope\r\n     * @param position Start position\r\n     */\r\n    function PositionContentSearcher(rootNode, position) {\r\n        this.rootNode = rootNode;\r\n        this.position = position;\r\n        // The cached text before position that has been read so far\r\n        this.text = '';\r\n        // All inline elements before position that have been read so far\r\n        this.inlineElements = [];\r\n    }\r\n    /**\r\n     * Get the word before position. The word is determined by scanning backwards till the first white space, the portion\r\n     * between position and the white space is the word before position\r\n     * @returns The word before position\r\n     */\r\n    PositionContentSearcher.prototype.getWordBefore = function () {\r\n        var _this = this;\r\n        if (!this.word) {\r\n            this.traverse(function () { return _this.word; });\r\n        }\r\n        return this.word;\r\n    };\r\n    /**\r\n     * Get the inline element before position\r\n     * @returns The inlineElement before position\r\n     */\r\n    PositionContentSearcher.prototype.getInlineElementBefore = function () {\r\n        if (!this.inlineBefore) {\r\n            this.traverse(null);\r\n        }\r\n        return this.inlineBefore;\r\n    };\r\n    /**\r\n     * Get the inline element after position\r\n     * @returns The inline element after position\r\n     */\r\n    PositionContentSearcher.prototype.getInlineElementAfter = function () {\r\n        if (!this.inlineAfter) {\r\n            this.inlineAfter = ContentTraverser_1.default.createBlockTraverser(this.rootNode, this.position).currentInlineElement;\r\n        }\r\n        return this.inlineAfter;\r\n    };\r\n    /**\r\n     * Get X number of chars before position\r\n     * The actual returned chars may be less than what is requested.\r\n     * @param length The length of string user want to get, the string always ends at the position,\r\n     * so this length determins the start position of the string\r\n     * @returns The actual string we get as a sub string, or the whole string before position when\r\n     * there is not enough chars in the string\r\n     */\r\n    PositionContentSearcher.prototype.getSubStringBefore = function (length) {\r\n        var _this = this;\r\n        if (this.text.length < length) {\r\n            this.traverse(function () { return _this.text.length >= length; });\r\n        }\r\n        return this.text.substr(Math.max(0, this.text.length - length));\r\n    };\r\n    /**\r\n     * Try to get a range matches the given text before the position\r\n     * @param text The text to match against\r\n     * @param exactMatch Whether it is an exact match\r\n     * @returns The range for the matched text, null if unable to find a match\r\n     */\r\n    PositionContentSearcher.prototype.getRangeFromText = function (text, exactMatch) {\r\n        if (!text) {\r\n            return null;\r\n        }\r\n        var startPosition;\r\n        var endPosition;\r\n        var textIndex = text.length - 1;\r\n        this.forEachTextInlineElement(function (textInline) {\r\n            var nodeContent = textInline.getTextContent() || '';\r\n            var nodeIndex = nodeContent.length - 1;\r\n            for (; nodeIndex >= 0 && textIndex >= 0; nodeIndex--) {\r\n                if (text.charCodeAt(textIndex) == nodeContent.charCodeAt(nodeIndex)) {\r\n                    textIndex--;\r\n                    // on first time when end is matched, set the end of range\r\n                    if (!endPosition) {\r\n                        endPosition = textInline.getStartPosition().move(nodeIndex + 1);\r\n                    }\r\n                }\r\n                else if (exactMatch || endPosition) {\r\n                    // Mismatch found when exact match or end already match, so return since matching failed\r\n                    return true;\r\n                }\r\n            }\r\n            // when textIndex == -1, we have a successful complete match\r\n            if (textIndex == -1) {\r\n                startPosition = textInline.getStartPosition().move(nodeIndex + 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return startPosition && endPosition && createRange_1.default(startPosition, endPosition);\r\n    };\r\n    /**\r\n     * Get text section before position till stop condition is met.\r\n     * This offers consumers to retrieve text section by section\r\n     * The section essentially is just an inline element which has Container element\r\n     * so that the consumer can remember it for anchoring popup or verification purpose\r\n     * when position moves out of context etc.\r\n     * @param stopFunc The callback stop function\r\n     */\r\n    PositionContentSearcher.prototype.forEachTextInlineElement = function (callback) {\r\n        // We cache all text sections read so far\r\n        // Every time when you ask for textSection, we start with the cached first\r\n        // and resort to further reading once we exhausted with the cache\r\n        if (!this.inlineElements.some(callback)) {\r\n            this.traverse(callback);\r\n        }\r\n    };\r\n    /**\r\n     * Get first non textual inline element before position\r\n     * @returns First non textutal inline element before position or null if no such element exists\r\n     */\r\n    PositionContentSearcher.prototype.getNearestNonTextInlineElement = function () {\r\n        var _this = this;\r\n        if (!this.nearestNonTextInlineElement) {\r\n            this.traverse(function () { return _this.nearestNonTextInlineElement; });\r\n        }\r\n        return this.nearestNonTextInlineElement;\r\n    };\r\n    /**\r\n     * Continue traversing backward till stop condition is met or begin of block is reached\r\n     */\r\n    PositionContentSearcher.prototype.traverse = function (callback) {\r\n        this.traverser =\r\n            this.traverser || ContentTraverser_1.default.createBlockTraverser(this.rootNode, this.position);\r\n        if (!this.traverser || this.traversingComplete) {\r\n            return;\r\n        }\r\n        var previousInline = this.traverser.getPreviousInlineElement();\r\n        while (!this.traversingComplete) {\r\n            this.inlineBefore = this.inlineBefore || previousInline;\r\n            if (previousInline && previousInline.isTextualInlineElement()) {\r\n                var textContent = previousInline.getTextContent();\r\n                // build the word before position if it is not built yet\r\n                if (!this.word) {\r\n                    // Match on the white space, the portion after space is on the index of 1 of the matched result\r\n                    // (index at 0 is whole match result, index at 1 is the word)\r\n                    var matches = matchWhiteSpaces_1.default(textContent);\r\n                    if (matches && matches.length == 2) {\r\n                        this.word = matches[1] + this.text;\r\n                    }\r\n                }\r\n                this.text = textContent + this.text;\r\n                this.inlineElements.push(previousInline);\r\n                // Check if stop condition is met\r\n                if (callback && callback(previousInline)) {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                this.nearestNonTextInlineElement = previousInline;\r\n                this.traversingComplete = true;\r\n                if (!this.word) {\r\n                    // if parsing is done, whatever we get so far in this.cachedText should also be in this.cachedWordBeforeCursor\r\n                    this.word = this.text;\r\n                }\r\n                // When a non-textual inline element, or null is seen, we consider parsing complete\r\n                // TODO: we may need to change this if there is a future need to parse beyond text, i.e.\r\n                // we have aaa @someone bbb<position>, and we want to read the text before @someone\r\n                break;\r\n            }\r\n            previousInline = this.traverser.getPreviousInlineElement();\r\n        }\r\n    };\r\n    return PositionContentSearcher;\r\n}());\r\nexports.default = PositionContentSearcher;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar NodeInlineElement_1 = require(\"./NodeInlineElement\");\r\n// This refers to an inline element that represents a text node\r\nvar TextInlineElement = /** @class */ (function (_super) {\r\n    __extends(TextInlineElement, _super);\r\n    function TextInlineElement(containerNode, parentBlock) {\r\n        return _super.call(this, containerNode, parentBlock) || this;\r\n    }\r\n    return TextInlineElement;\r\n}(NodeInlineElement_1.default));\r\nexports.default = TextInlineElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Get current browser information from user agent string\r\n * @param userAgent The userAgent string of a browser\r\n * @param appVersion The appVersion string of a browser\r\n * @returns The BrowserInfo object calculated from the given userAgent and appVersion\r\n */\r\nfunction getBrowserInfo(userAgent, appVersion) {\r\n    // checks whether the browser is running in IE\r\n    // IE11 will use rv in UA instead of MSIE. Unfortunately Firefox also uses this. We should also look for \"Trident\" to confirm this.\r\n    // There have been cases where companies using older version of IE and custom UserAgents have broken this logic (e.g. IE 10 and KellyServices)\r\n    // therefore we should check that the Trident/rv combo is not just from an older IE browser\r\n    var isIE11OrGreater = userAgent.indexOf('rv:') != -1 && userAgent.indexOf('Trident') != -1;\r\n    var isIE = userAgent.indexOf('MSIE') != -1 || isIE11OrGreater;\r\n    // IE11+ may also have 'Chrome', 'Firefox' and 'Safari' in user agent. But it will have 'trident' as well\r\n    var isChrome = false;\r\n    var isFirefox = false;\r\n    var isSafari = false;\r\n    var isEdge = false;\r\n    var isWebKit = userAgent.indexOf('WebKit') != -1;\r\n    if (!isIE) {\r\n        isChrome = userAgent.indexOf('Chrome') != -1;\r\n        isFirefox = userAgent.indexOf('Firefox') != -1;\r\n        if (userAgent.indexOf('Safari') != -1) {\r\n            // Android and Chrome have Safari in the user string\r\n            isSafari = userAgent.indexOf('Chrome') == -1 && userAgent.indexOf('Android') == -1;\r\n        }\r\n        // Sample Edge UA: Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.10121\r\n        isEdge = userAgent.indexOf('Edge') != -1;\r\n        // When it is edge, it should not be chrome or firefox. and it is also not webkit\r\n        if (isEdge) {\r\n            isWebKit = isChrome = isFirefox = false;\r\n        }\r\n    }\r\n    var isMac = appVersion.indexOf('Mac') != -1;\r\n    var isWin = appVersion.indexOf('Win') != -1 || appVersion.indexOf('NT') != -1;\r\n    return {\r\n        isMac: isMac,\r\n        isWin: isWin,\r\n        isWebKit: isWebKit,\r\n        isIE: isIE,\r\n        isIE11OrGreater: isIE11OrGreater,\r\n        isSafari: isSafari,\r\n        isChrome: isChrome,\r\n        isFirefox: isFirefox,\r\n        isEdge: isEdge,\r\n        isIEOrEdge: isIE || isEdge,\r\n    };\r\n}\r\nexports.getBrowserInfo = getBrowserInfo;\r\nvar Browser = window\r\n    ? getBrowserInfo(window.navigator.userAgent, window.navigator.appVersion)\r\n    : {};\r\nexports.default = Browser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Apply format to an HTML element\r\n * @param element The HTML element to apply format to\r\n * @param format The format to apply\r\n */\r\nfunction applyFormat(element, format) {\r\n    if (format) {\r\n        var elementStyle = element.style;\r\n        var fontFamily = format.fontFamily, fontSize = format.fontSize, textColor = format.textColor, backgroundColor = format.backgroundColor, bold = format.bold, italic = format.italic, underline = format.underline;\r\n        if (fontFamily) {\r\n            elementStyle.fontFamily = fontFamily;\r\n        }\r\n        if (fontSize) {\r\n            elementStyle.fontSize = fontSize;\r\n        }\r\n        if (textColor) {\r\n            elementStyle.color = textColor;\r\n        }\r\n        if (backgroundColor) {\r\n            elementStyle.backgroundColor = backgroundColor;\r\n        }\r\n        if (bold) {\r\n            elementStyle.fontWeight = 'bold';\r\n        }\r\n        if (italic) {\r\n            elementStyle.fontStyle = 'italic';\r\n        }\r\n        if (underline) {\r\n            elementStyle.textDecoration = 'underline';\r\n        }\r\n    }\r\n}\r\nexports.default = applyFormat;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getComputedStyles_1 = require(\"./getComputedStyles\");\r\nvar getTagOfNode_1 = require(\"./getTagOfNode\");\r\nfunction changeElementTag(element, newTag) {\r\n    var _a;\r\n    if (!element || !newTag) {\r\n        return null;\r\n    }\r\n    var newElement = element.ownerDocument.createElement(newTag);\r\n    for (var i = 0; i < element.attributes.length; i++) {\r\n        var attr = element.attributes[i];\r\n        newElement.setAttribute(attr.name, attr.value);\r\n    }\r\n    while (element.firstChild) {\r\n        newElement.appendChild(element.firstChild);\r\n    }\r\n    if (getTagOfNode_1.default(element) == 'P' || getTagOfNode_1.default(newElement) == 'P') {\r\n        _a = getComputedStyles_1.default(element, [\r\n            'margin-top',\r\n            'margin-bottom',\r\n        ]), newElement.style.marginTop = _a[0], newElement.style.marginBottom = _a[1];\r\n    }\r\n    if (element.parentNode) {\r\n        element.parentNode.replaceChild(newElement, element);\r\n    }\r\n    return newElement;\r\n}\r\nexports.default = changeElementTag;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// http exclude matching regex\r\n// invalid URL example (in paricular on IE and Edge):\r\n// - http://www.bing.com%00, %00 before ? (question mark) is considered invalid. IE/Edge throws invalid argument exception\r\n// - http://www.bing.com%1, %1 is invalid\r\n// - http://www.bing.com%g, %g is invalid (IE and Edge expects a two hex value after a %)\r\n// - http://www.bing.com%, % as ending is invalid (IE and Edge expects a two hex value after a %)\r\n// All above % cases if they're after ? (question mark) is then considered valid again\r\n// Similar for @, it needs to be after / (forward slash), or ? (question mark). Otherwise IE/Edge will throw security exception\r\n// - http://www.bing.com@name, @name before ? (question mark) is considered invalid\r\n// - http://www.bing.com/@name, is valid sine it is after / (forward slash)\r\n// - http://www.bing.com?@name, is also valid sinve it is after ? (question mark)\r\n// The regex below is essentially a break down of:\r\n// ^[^?]+%[^0-9a-f]+ => to exclude URL like www.bing.com%%\r\n// ^[^?]+%[0-9a-f][^0-9a-f]+ => to exclude URL like www.bing.com%1\r\n// ^[^?]+%00 => to exclude URL like www.bing.com%00\r\n// ^[^?]+%$ => to exclude URL like www.bing.com%\r\n// ^https?:\\/\\/[^?\\/]+@ => to exclude URL like http://www.bing.com@name\r\n// ^www\\.[^?\\/]+@ => to exclude URL like www.bing.com@name\r\n// , => to exclude url like www.bing,,com\r\nvar httpExcludeRegEx = /^[^?]+%[^0-9a-f]+|^[^?]+%[0-9a-f][^0-9a-f]+|^[^?]+%00|^[^?]+%$|^https?:\\/\\/[^?\\/]+@|^www\\.[^?\\/]+@/i;\r\n// via https://tools.ietf.org/html/rfc1035 Page 7\r\nvar labelRegEx = '[a-z0-9](?:[a-z0-9-]*[a-z0-9])?'; // We're using case insensitive regexes below so don't bother including A-Z\r\nvar domainNameRegEx = \"(?:\" + labelRegEx + \"\\\\.)*\" + labelRegEx;\r\nvar domainPortRegEx = domainNameRegEx + \"(?:\\\\:[0-9]+)?\";\r\nvar domainPortWithUrlRegEx = domainPortRegEx + \"(?:[\\\\/\\\\?]\\\\S*)?\";\r\nvar linkMatchRules = {\r\n    http: {\r\n        match: new RegExp(\"^(?:microsoft-edge:)?http:\\\\/\\\\/\" + domainPortWithUrlRegEx + \"|www\\\\.\" + domainPortWithUrlRegEx, 'i'),\r\n        except: httpExcludeRegEx,\r\n        normalizeUrl: function (url) {\r\n            return new RegExp('^(?:microsoft-edge:)?http:\\\\/\\\\/', 'i').test(url) ? url : 'http://' + url;\r\n        },\r\n    },\r\n    https: {\r\n        match: new RegExp(\"^(?:microsoft-edge:)?https:\\\\/\\\\/\" + domainPortWithUrlRegEx, 'i'),\r\n        except: httpExcludeRegEx,\r\n    },\r\n    mailto: { match: new RegExp('^mailto:\\\\S+@\\\\S+\\\\.\\\\S+', 'i') },\r\n    notes: { match: new RegExp('^notes:\\\\/\\\\/\\\\S+', 'i') },\r\n    file: { match: new RegExp('^file:\\\\/\\\\/\\\\/?\\\\S+', 'i') },\r\n    unc: { match: new RegExp('^\\\\\\\\\\\\\\\\\\\\S+', 'i') },\r\n    ftp: {\r\n        match: new RegExp(\"^ftp:\\\\/\\\\/\" + domainPortWithUrlRegEx + \"|ftp\\\\.\" + domainPortWithUrlRegEx, 'i'),\r\n        normalizeUrl: function (url) { return (new RegExp('^ftp:\\\\/\\\\/', 'i').test(url) ? url : 'ftp://' + url); },\r\n    },\r\n    news: { match: new RegExp(\"^news:(\\\\/\\\\/)?\" + domainPortWithUrlRegEx, 'i') },\r\n    telnet: { match: new RegExp(\"^telnet:(\\\\/\\\\/)?\" + domainPortWithUrlRegEx, 'i') },\r\n    gopher: { match: new RegExp(\"^gopher:\\\\/\\\\/\" + domainPortWithUrlRegEx, 'i') },\r\n    wais: { match: new RegExp(\"^wais:(\\\\/\\\\/)?\" + domainPortWithUrlRegEx, 'i') },\r\n};\r\n/**\r\n * Try to match a given string with link match rules, return matched link\r\n * @param url Input url to match\r\n * @param option Link match option, exact or partial. If it is exact match, we need\r\n * to check the length of matched link and url\r\n * @param rules Optional link match rules, if not passed, only the default link match\r\n * rules will be applied\r\n * @returns The matched link data, or null if no match found.\r\n * The link data includes an original url and a normalized url\r\n */\r\nfunction matchLink(url) {\r\n    if (url) {\r\n        for (var _i = 0, _a = Object.keys(linkMatchRules); _i < _a.length; _i++) {\r\n            var schema = _a[_i];\r\n            var rule = linkMatchRules[schema];\r\n            var matches = url.match(rule.match);\r\n            if (matches && matches[0] == url && (!rule.except || !rule.except.test(url))) {\r\n                return {\r\n                    scheme: schema,\r\n                    originalUrl: url,\r\n                    normalizedUrl: rule.normalizeUrl ? rule.normalizeUrl(url) : url,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.default = matchLink;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Removes the node and keep all children in place, return the parentNode where the children are attached\r\n * @param node the node to remove\r\n */\r\nfunction unwrap(node) {\r\n    // Unwrap requires a parentNode\r\n    var parentNode = node ? node.parentNode : null;\r\n    if (!parentNode) {\r\n        return null;\r\n    }\r\n    while (node.firstChild) {\r\n        parentNode.insertBefore(node.firstChild, node);\r\n    }\r\n    parentNode.removeChild(node);\r\n    return parentNode;\r\n}\r\nexports.default = unwrap;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * A virtual table class, represent an HTML table, by expand all merged cells to each separated cells\r\n */\r\nvar VTable = /** @class */ (function () {\r\n    /**\r\n     * Create a new instance of VTable object using HTML TABLE or TD node\r\n     * @param node The HTML Table or TD node\r\n     */\r\n    function VTable(node) {\r\n        var _this = this;\r\n        this.trs = [];\r\n        this.table = node instanceof HTMLTableElement ? node : getTableFromTd(node);\r\n        if (this.table) {\r\n            var currentTd_1 = node instanceof HTMLTableElement ? null : node;\r\n            var trs = [].slice.call(this.table.rows);\r\n            this.cells = trs.map(function (row) { return []; });\r\n            trs.forEach(function (tr, rowIndex) {\r\n                _this.trs[rowIndex % 2] = tr;\r\n                for (var sourceCol = 0, targetCol = 0; sourceCol < tr.cells.length; sourceCol++) {\r\n                    // Skip the cells which already initialized\r\n                    for (; _this.cells[rowIndex][targetCol]; targetCol++) { }\r\n                    var td = tr.cells[sourceCol];\r\n                    if (td == currentTd_1) {\r\n                        _this.col = targetCol;\r\n                        _this.row = rowIndex;\r\n                    }\r\n                    for (var colSpan = 0; colSpan < td.colSpan; colSpan++, targetCol++) {\r\n                        for (var rowSpan = 0; rowSpan < td.rowSpan; rowSpan++) {\r\n                            _this.cells[rowIndex + rowSpan][targetCol] = {\r\n                                td: colSpan + rowSpan == 0 ? td : null,\r\n                                spanLeft: colSpan > 0,\r\n                                spanAbove: rowSpan > 0,\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Write the virtual table back to DOM tree to represent the change of VTable\r\n     */\r\n    VTable.prototype.writeBack = function () {\r\n        var _this = this;\r\n        if (this.cells) {\r\n            moveChildren(this.table);\r\n            this.cells.forEach(function (row, r) {\r\n                var tr = cloneNode(_this.trs[r % 2] || _this.trs[0]);\r\n                _this.table.appendChild(tr);\r\n                row.forEach(function (cell, c) {\r\n                    if (cell.td) {\r\n                        _this.recalcSpans(r, c);\r\n                        tr.appendChild(cell.td);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else if (this.table) {\r\n            this.table.parentNode.removeChild(this.table);\r\n        }\r\n    };\r\n    /**\r\n     * Apply the given table format to this virtual table\r\n     * @param format Table format to apply\r\n     */\r\n    VTable.prototype.applyFormat = function (format) {\r\n        if (!format || !this.table) {\r\n            return;\r\n        }\r\n        this.table.style.borderCollapse = 'collapse';\r\n        this.trs[0].style.backgroundColor = format.bgColorOdd || 'transparent';\r\n        if (this.trs[1]) {\r\n            this.trs[1].style.backgroundColor = format.bgColorEven || 'transparent';\r\n        }\r\n        this.cells.forEach(function (row) {\r\n            return row.filter(function (cell) { return cell.td; }).forEach(function (cell) {\r\n                cell.td.style.borderTop = getBorderStyle(format.topBorderColor);\r\n                cell.td.style.borderBottom = getBorderStyle(format.bottomBorderColor);\r\n                cell.td.style.borderLeft = getBorderStyle(format.verticalBorderColor);\r\n                cell.td.style.borderRight = getBorderStyle(format.verticalBorderColor);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Edit table with given operation.\r\n     * @param operation Table operation\r\n     */\r\n    VTable.prototype.edit = function (operation) {\r\n        var _this = this;\r\n        if (!this.table) {\r\n            return;\r\n        }\r\n        var currentRow = this.cells[this.row];\r\n        var currentCell = currentRow[this.col];\r\n        switch (operation) {\r\n            case 0 /* InsertAbove */:\r\n                this.cells.splice(this.row, 0, currentRow.map(cloneCell));\r\n                break;\r\n            case 1 /* InsertBelow */:\r\n                var newRow_1 = this.row + this.countSpanAbove(this.row, this.col);\r\n                this.cells.splice(newRow_1, 0, this.cells[newRow_1 - 1].map(function (cell, colIndex) {\r\n                    var nextCell = _this.getCell(newRow_1, colIndex);\r\n                    if (nextCell.spanAbove) {\r\n                        return cloneCell(nextCell);\r\n                    }\r\n                    else if (cell.spanLeft) {\r\n                        var newCell = cloneCell(cell);\r\n                        newCell.spanAbove = false;\r\n                        return newCell;\r\n                    }\r\n                    else {\r\n                        return {\r\n                            td: cloneNode(_this.getTd(_this.row, colIndex)),\r\n                        };\r\n                    }\r\n                }));\r\n                break;\r\n            case 2 /* InsertLeft */:\r\n                this.forEachCellOfCurrentColumn(function (cell, row) {\r\n                    row.splice(_this.col, 0, cloneCell(cell));\r\n                });\r\n                break;\r\n            case 3 /* InsertRight */:\r\n                var newCol_1 = this.col + this.countSpanLeft(this.row, this.col);\r\n                this.forEachCellOfColumn(newCol_1 - 1, function (cell, row, i) {\r\n                    var nextCell = _this.getCell(i, newCol_1);\r\n                    var newCell;\r\n                    if (nextCell.spanLeft) {\r\n                        newCell = cloneCell(nextCell);\r\n                    }\r\n                    else if (cell.spanAbove) {\r\n                        newCell = cloneCell(cell);\r\n                        newCell.spanLeft = false;\r\n                    }\r\n                    else {\r\n                        newCell = {\r\n                            td: cloneNode(_this.getTd(i, _this.col)),\r\n                        };\r\n                    }\r\n                    row.splice(newCol_1, 0, newCell);\r\n                });\r\n                break;\r\n            case 6 /* DeleteRow */:\r\n                this.forEachCellOfCurrentRow(function (cell, i) {\r\n                    var nextCell = _this.getCell(_this.row + 1, i);\r\n                    if (cell.td && cell.td.rowSpan > 1 && nextCell.spanAbove) {\r\n                        nextCell.td = cell.td;\r\n                    }\r\n                });\r\n                this.cells.splice(this.row, 1);\r\n                break;\r\n            case 5 /* DeleteColumn */:\r\n                this.forEachCellOfCurrentColumn(function (cell, row, i) {\r\n                    var nextCell = _this.getCell(i, _this.col + 1);\r\n                    if (cell.td && cell.td.colSpan > 1 && nextCell.spanLeft) {\r\n                        nextCell.td = cell.td;\r\n                    }\r\n                    row.splice(_this.col, 1);\r\n                });\r\n                break;\r\n            case 7 /* MergeAbove */:\r\n            case 8 /* MergeBelow */:\r\n                var rowStep = operation == 7 /* MergeAbove */ ? -1 : 1;\r\n                for (var rowIndex = this.row + rowStep; rowIndex >= 0 && rowIndex < this.cells.length; rowIndex += rowStep) {\r\n                    var cell = this.getCell(rowIndex, this.col);\r\n                    if (cell.td && !cell.spanAbove) {\r\n                        var aboveCell = rowIndex < this.row ? cell : currentCell;\r\n                        var belowCell = rowIndex < this.row ? currentCell : cell;\r\n                        if (aboveCell.td.colSpan == belowCell.td.colSpan) {\r\n                            moveChildren(belowCell.td, aboveCell.td);\r\n                            belowCell.td = null;\r\n                            belowCell.spanAbove = true;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case 9 /* MergeLeft */:\r\n            case 10 /* MergeRight */:\r\n                var colStep = operation == 9 /* MergeLeft */ ? -1 : 1;\r\n                for (var colIndex = this.col + colStep; colIndex >= 0 && colIndex < this.cells[this.row].length; colIndex += colStep) {\r\n                    var cell = this.getCell(this.row, colIndex);\r\n                    if (cell.td && !cell.spanLeft) {\r\n                        var leftCell = colIndex < this.col ? cell : currentCell;\r\n                        var rightCell = colIndex < this.col ? currentCell : cell;\r\n                        if (leftCell.td.rowSpan == rightCell.td.rowSpan) {\r\n                            moveChildren(rightCell.td, leftCell.td);\r\n                            rightCell.td = null;\r\n                            rightCell.spanLeft = true;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case 4 /* DeleteTable */:\r\n                this.cells = null;\r\n                break;\r\n            case 12 /* SplitVertically */:\r\n                if (currentCell.td.rowSpan > 1) {\r\n                    this.getCell(this.row + 1, this.col).td = cloneNode(currentCell.td);\r\n                }\r\n                else {\r\n                    var splitRow = currentRow.map(function (cell) {\r\n                        return {\r\n                            td: cell == currentCell ? cloneNode(cell.td) : null,\r\n                            spanAbove: cell != currentCell,\r\n                            spanLeft: cell.spanLeft,\r\n                        };\r\n                    });\r\n                    this.cells.splice(this.row + 1, 0, splitRow);\r\n                }\r\n                break;\r\n            case 11 /* SplitHorizontally */:\r\n                if (currentCell.td.colSpan > 1) {\r\n                    this.getCell(this.row, this.col + 1).td = cloneNode(currentCell.td);\r\n                }\r\n                else {\r\n                    this.forEachCellOfCurrentColumn(function (cell, row) {\r\n                        row.splice(_this.col + 1, 0, {\r\n                            td: row == currentRow ? cloneNode(cell.td) : null,\r\n                            spanAbove: cell.spanAbove,\r\n                            spanLeft: row != currentRow,\r\n                        });\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Loop each cell of current column and invoke a callback function\r\n     * @param callback The callback function to invoke\r\n     */\r\n    VTable.prototype.forEachCellOfCurrentColumn = function (callback) {\r\n        this.forEachCellOfColumn(this.col, callback);\r\n    };\r\n    /**\r\n     * Loop each cell of current row and invoke a callback function\r\n     * @param callback The callback function to invoke\r\n     */\r\n    VTable.prototype.forEachCellOfCurrentRow = function (callback) {\r\n        this.forEachCellOfRow(this.row, callback);\r\n    };\r\n    /**\r\n     * Get a table cell using its row and column index. This function will always return an object\r\n     * even if the given indexes don't exist in table.\r\n     * @param row The row index\r\n     * @param col The column index\r\n     */\r\n    VTable.prototype.getCell = function (row, col) {\r\n        return (this.cells && this.cells[row] && this.cells[row][col]) || {};\r\n    };\r\n    /**\r\n     * Get current HTML table cell object. If the current table cell is a virtual expanded cell, return its root cell\r\n     */\r\n    VTable.prototype.getCurrentTd = function () {\r\n        return this.getTd(this.row, this.col);\r\n    };\r\n    VTable.prototype.getTd = function (row, col) {\r\n        if (this.cells) {\r\n            row = Math.min(this.cells.length - 1, row);\r\n            col = Math.min(this.cells[row].length - 1, col);\r\n            while (row >= 0 && col >= 0) {\r\n                var cell = this.getCell(row, col);\r\n                if (cell.td) {\r\n                    return cell.td;\r\n                }\r\n                else if (cell.spanLeft) {\r\n                    col--;\r\n                }\r\n                else if (cell.spanAbove) {\r\n                    row--;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    VTable.prototype.forEachCellOfColumn = function (col, callback) {\r\n        for (var i = 0; i < this.cells.length; i++) {\r\n            callback(this.getCell(i, col), this.cells[i], i);\r\n        }\r\n    };\r\n    VTable.prototype.forEachCellOfRow = function (row, callback) {\r\n        for (var i = 0; i < this.cells[row].length; i++) {\r\n            callback(this.getCell(row, i), i);\r\n        }\r\n    };\r\n    VTable.prototype.recalcSpans = function (row, col) {\r\n        var td = this.getCell(row, col).td;\r\n        if (td) {\r\n            td.colSpan = this.countSpanLeft(row, col);\r\n            td.rowSpan = this.countSpanAbove(row, col);\r\n            if (td.colSpan == 1) {\r\n                td.removeAttribute('colSpan');\r\n            }\r\n            if (td.rowSpan == 1) {\r\n                td.removeAttribute('rowSpan');\r\n            }\r\n        }\r\n    };\r\n    VTable.prototype.countSpanLeft = function (row, col) {\r\n        var result = 1;\r\n        for (var i = col + 1; i < this.cells[row].length; i++) {\r\n            var cell = this.getCell(row, i);\r\n            if (cell.td || !cell.spanLeft) {\r\n                break;\r\n            }\r\n            result++;\r\n        }\r\n        return result;\r\n    };\r\n    VTable.prototype.countSpanAbove = function (row, col) {\r\n        var result = 1;\r\n        for (var i = row + 1; i < this.cells.length; i++) {\r\n            var cell = this.getCell(i, col);\r\n            if (cell.td || !cell.spanAbove) {\r\n                break;\r\n            }\r\n            result++;\r\n        }\r\n        return result;\r\n    };\r\n    return VTable;\r\n}());\r\nexports.default = VTable;\r\nfunction getTableFromTd(td) {\r\n    var result = td;\r\n    for (; result && result.tagName != 'TABLE'; result = result.parentElement) { }\r\n    return result;\r\n}\r\nfunction getBorderStyle(style) {\r\n    return 'solid 1px ' + (style || 'transparent');\r\n}\r\n/**\r\n * Clone a table cell\r\n * @param cell The cell to clone\r\n */\r\nfunction cloneCell(cell) {\r\n    return {\r\n        td: cloneNode(cell.td),\r\n        spanAbove: cell.spanAbove,\r\n        spanLeft: cell.spanLeft,\r\n    };\r\n}\r\n/**\r\n * Clone a node without its children.\r\n * @param node The node to clone\r\n */\r\nfunction cloneNode(node) {\r\n    var newNode = node ? node.cloneNode(false /*deep*/) : null;\r\n    if (newNode && newNode instanceof HTMLTableCellElement) {\r\n        newNode.removeAttribute('id');\r\n        if (!newNode.firstChild) {\r\n            newNode.appendChild(node.ownerDocument.createElement('br'));\r\n        }\r\n    }\r\n    return newNode;\r\n}\r\n/**\r\n * Move all children from one node to another\r\n * @param fromNode The source node to move children from\r\n * @param toNode Target node. If not passed, children nodes of source node will be removed\r\n */\r\nfunction moveChildren(fromNode, toNode) {\r\n    while (fromNode.firstChild) {\r\n        if (toNode) {\r\n            toNode.appendChild(fromNode.firstChild);\r\n        }\r\n        else {\r\n            fromNode.removeChild(fromNode.firstChild);\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar createRange_1 = require(\"./createRange\");\r\n/**\r\n * Get bounding rect of this position\r\n * @param position The positioin to get rect from\r\n */\r\nfunction getPositionRect(position) {\r\n    if (!position) {\r\n        return null;\r\n    }\r\n    var range = createRange_1.default(position);\r\n    // 1) try to get rect using range.getBoundingClientRect()\r\n    var rect = range.getBoundingClientRect && normalizeRect(range.getBoundingClientRect());\r\n    if (rect) {\r\n        return rect;\r\n    }\r\n    // 2) try to get rect using range.getClientRects\r\n    position = position.normalize();\r\n    var rects = range.getClientRects && range.getClientRects();\r\n    rect = rects && rects.length == 1 && normalizeRect(rects[0]);\r\n    if (rect) {\r\n        return rect;\r\n    }\r\n    // 3) if node is text node, try inserting a SPAN and get the rect of SPAN for others\r\n    if (position.node.nodeType == 3 /* Text */) {\r\n        var span = document.createElement('SPAN');\r\n        span.innerHTML = '\\u200b';\r\n        range = createRange_1.default(position);\r\n        range.insertNode(span);\r\n        rect = span.getBoundingClientRect && normalizeRect(span.getBoundingClientRect());\r\n        span.parentNode.removeChild(span);\r\n        if (rect) {\r\n            return rect;\r\n        }\r\n    }\r\n    // 4) try getBoundingClientRect on element\r\n    var element = position.element;\r\n    if (element && element.getBoundingClientRect) {\r\n        rect = normalizeRect(element.getBoundingClientRect());\r\n        if (rect) {\r\n            return rect;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.default = getPositionRect;\r\nfunction normalizeRect(clientRect) {\r\n    // A ClientRect of all 0 is possible. i.e. chrome returns a ClientRect of 0 when the cursor is on an empty p\r\n    // We validate that and only return a rect when the passed in ClientRect is valid\r\n    var _a = clientRect || {}, left = _a.left, right = _a.right, top = _a.top, bottom = _a.bottom;\r\n    return left + right + top + bottom > 0\r\n        ? {\r\n            left: Math.round(left),\r\n            right: Math.round(right),\r\n            top: Math.round(top),\r\n            bottom: Math.round(bottom),\r\n        }\r\n        : null;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar contains_1 = require(\"../utils/contains\");\r\nvar isNodeEmpty_1 = require(\"../utils/isNodeEmpty\");\r\n/**\r\n * Check if this position is at beginning of the given node.\r\n * This will return true if all nodes between the beginning of target node and the position are empty.\r\n * @param position The position to check\r\n * @param targetNode The node to check\r\n * @returns True if position is at beginning of the node, otherwise false\r\n */\r\nfunction isPositionAtBeginningOf(position, targetNode) {\r\n    if (position) {\r\n        var _a = position.normalize(), node = _a.node, offset = _a.offset;\r\n        if (offset == 0) {\r\n            while (contains_1.default(targetNode, node) && areAllPrevousNodesEmpty(node)) {\r\n                node = node.parentNode;\r\n            }\r\n            return node == targetNode;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.default = isPositionAtBeginningOf;\r\nfunction areAllPrevousNodesEmpty(node) {\r\n    while (node.previousSibling) {\r\n        node = node.previousSibling;\r\n        if (!isNodeEmpty_1.default(node)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar contains_1 = require(\"../utils/contains\");\r\nvar createRange_1 = require(\"./createRange\");\r\nvar Position_1 = require(\"./Position\");\r\n/**\r\n * Get path of the given selection range related to the given rootNode\r\n * @param rootNode The root node where the path start from\r\n * @param range The range of selection\r\n */\r\nfunction getSelectionPath(rootNode, range) {\r\n    if (!range) {\r\n        return null;\r\n    }\r\n    var selectionPath = {\r\n        start: getPositionPath(Position_1.default.getStart(range), rootNode),\r\n        end: getPositionPath(Position_1.default.getEnd(range), rootNode),\r\n    };\r\n    return selectionPath;\r\n}\r\nexports.default = getSelectionPath;\r\n/**\r\n * Get range from the given selection path\r\n * @param rootNode Root node of the selection path\r\n * @param path The selection path which contains start and end position path\r\n */\r\nfunction getRangeFromSelectionPath(rootNode, path) {\r\n    var start = getPositionFromPath(rootNode, path.start);\r\n    var end = getPositionFromPath(rootNode, path.end);\r\n    return createRange_1.default(start, end);\r\n}\r\nexports.getRangeFromSelectionPath = getRangeFromSelectionPath;\r\nfunction getPositionFromPath(node, path) {\r\n    if (!node || !path) {\r\n        return null;\r\n    }\r\n    // Iterate with a for loop to avoid mutating the passed in element path stack\r\n    // or needing to copy it.\r\n    var offset;\r\n    for (var i = 0; i < path.length; i++) {\r\n        offset = path[i];\r\n        if (i < path.length - 1 &&\r\n            node &&\r\n            node.nodeType == 1 /* Element */ &&\r\n            node.childNodes.length > offset) {\r\n            node = node.childNodes[offset];\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return new Position_1.default(node, offset);\r\n}\r\n/**\r\n * Get the path of the node relative to rootNode.\r\n * The path of the node is an array of integer indecies into the childNodes of the given node.\r\n *\r\n * The node path will be what the node path will be on a _normalized_ dom\r\n * (e.g. empty text nodes will be ignored and adjacent text nodes will be concatenated)\r\n *\r\n * @param rootNode the node the path will be relative to\r\n * @param position the position to get indexes from. Follows the same semantics\r\n * as selectionRange (if node is of type Text, it is an offset into the text of that node.\r\n * If node is of type Element, it is the index of a child in that Element node.)\r\n */\r\nfunction getPositionPath(position, rootNode) {\r\n    if (!position || !rootNode) {\r\n        return [];\r\n    }\r\n    var node = position.node, offset = position.offset;\r\n    var result = [];\r\n    var parent;\r\n    if (!contains_1.default(rootNode, node, true)) {\r\n        return [];\r\n    }\r\n    if (node.nodeType == 3 /* Text */) {\r\n        parent = node.parentNode;\r\n        while (node.previousSibling && node.previousSibling.nodeType == 3 /* Text */) {\r\n            offset += node.previousSibling.nodeValue.length;\r\n            node = node.previousSibling;\r\n        }\r\n        result.unshift(offset);\r\n    }\r\n    else {\r\n        parent = node;\r\n        node = node.childNodes[offset];\r\n    }\r\n    do {\r\n        offset = 0;\r\n        var isPreviousText = false;\r\n        for (var c = parent.firstChild; c && c != node; c = c.nextSibling) {\r\n            if (c.nodeType == 3 /* Text */) {\r\n                if (c.nodeValue.length == 0 || isPreviousText) {\r\n                    continue;\r\n                }\r\n                isPreviousText = true;\r\n            }\r\n            else {\r\n                isPreviousText = false;\r\n            }\r\n            offset++;\r\n        }\r\n        result.unshift(offset);\r\n        node = parent;\r\n        parent = parent.parentNode;\r\n    } while (node && node != rootNode);\r\n    return result;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @deprecated Use inlineElement.isTextualInlineElement() instead\r\n */\r\nfunction isTextualInlineElement(inlineElement) {\r\n    return inlineElement && inlineElement.isTextualInlineElement();\r\n}\r\nexports.default = isTextualInlineElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar wrap_1 = require(\"../utils/wrap\");\r\n/**\r\n * @deprecated Use wrap() instead\r\n */\r\nfunction wrapAll(nodes, htmlFragment) {\r\n    if (htmlFragment === void 0) { htmlFragment = '<div></div>'; }\r\n    return wrap_1.default(nodes, htmlFragment);\r\n}\r\nexports.default = wrapAll;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_html_sanitizer_1 = require(\"roosterjs-html-sanitizer\");\r\n/**\r\n * @deprecated Use HtmlSanitizer.convertInlineCss from roosterjs-html-sanitizer package instead\r\n * Convert global CSS to inline CSS and remove the global CSS\r\n * @param html The source HTML string\r\n * @param additionalStyleNodes Optional additional style nodes\r\n */\r\nvar convertInlineCss = roosterjs_html_sanitizer_1.HtmlSanitizer.convertInlineCss;\r\nexports.default = convertInlineCss;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar cloneObject_1 = require(\"../utils/cloneObject\");\r\nvar getInheritableStyles_1 = require(\"../utils/getInheritableStyles\");\r\nvar htmlToDom_1 = require(\"../utils/htmlToDom\");\r\nvar getAllowedValues_1 = require(\"../utils/getAllowedValues\");\r\nvar HtmlSanitizer = /** @class */ (function () {\r\n    function HtmlSanitizer(options) {\r\n        options = options || {};\r\n        this.elementCallbacks = cloneObject_1.default(options.elementCallbacks);\r\n        this.styleCallbacks = getAllowedValues_1.getStyleCallbacks(options.styleCallbacks);\r\n        this.attributeCallbacks = cloneObject_1.default(options.attributeCallbacks);\r\n        this.allowedTags = getAllowedValues_1.getAllowedTags(options.additionalAllowedTags);\r\n        this.allowedAttributes = getAllowedValues_1.getAllowedAttributes(options.additionalAllowAttributes);\r\n        this.defaultStyleValues = getAllowedValues_1.getDefaultStyleValues(options.additionalDefaultStyleValues);\r\n        this.additionalGlobalStyleNodes = options.additionalGlobalStyleNodes || [];\r\n        this.allowPreserveWhiteSpace = options.allowPreserveWhiteSpace;\r\n    }\r\n    /**\r\n     * Convert global CSS to inline CSS if any\r\n     * @param html HTML source\r\n     * @param additionalStyleNodes (Optional) additional HTML STYLE elements used as global CSS\r\n     */\r\n    HtmlSanitizer.convertInlineCss = function (html, additionalStyleNodes) {\r\n        var sanitizer = new HtmlSanitizer({\r\n            additionalGlobalStyleNodes: additionalStyleNodes,\r\n        });\r\n        return sanitizer.exec(html, true /*convertCssOnly*/);\r\n    };\r\n    /**\r\n     * Sanitize HTML string, remove any unuseful HTML node/attribute/CSS.\r\n     * @param html HTML source string\r\n     * @param options Options used for this sanitizing process\r\n     */\r\n    HtmlSanitizer.sanitizeHtml = function (html, options) {\r\n        options = options || {};\r\n        var sanitizer = new HtmlSanitizer(options);\r\n        var currentStyles = options.currentElementOrStyle instanceof HTMLElement\r\n            ? getInheritableStyles_1.default(options.currentElementOrStyle)\r\n            : options.currentElementOrStyle;\r\n        return sanitizer.exec(html, options.convertCssOnly, options.preserveFragmentOnly, currentStyles);\r\n    };\r\n    /**\r\n     * Sanitize HTML string\r\n     * This function will do the following work:\r\n     * 1. Convert global CSS into inline CSS\r\n     * 2. Remove dangerous HTML tags and attributes\r\n     * 3. Remove useless CSS properties\r\n     * @param html The input HTML\r\n     * @param convertInlineCssOnly Whether only convert inline css and skip html content sanitizing\r\n     * @param preserveFragmentOnly If set to true, only preserve the html content between <!--StartFragment--> and <!--Endfragment-->\r\n     * @param currentStyles Current inheritable CSS styles\r\n     */\r\n    HtmlSanitizer.prototype.exec = function (html, convertCssOnly, preserveFragmentOnly, currentStyles) {\r\n        var doc = htmlToDom_1.default(html, preserveFragmentOnly);\r\n        if (doc) {\r\n            this.convertGlobalCssToInlineCss(doc);\r\n            if (!convertCssOnly) {\r\n                this.sanitize(doc.body, currentStyles);\r\n            }\r\n        }\r\n        return (doc && doc.body && doc.body.innerHTML) || '';\r\n    };\r\n    HtmlSanitizer.prototype.sanitize = function (rootNode, currentStyles) {\r\n        if (!rootNode) {\r\n            return '';\r\n        }\r\n        currentStyles = cloneObject_1.default(currentStyles, getInheritableStyles_1.default(null));\r\n        this.processNode(rootNode, currentStyles, {});\r\n    };\r\n    HtmlSanitizer.prototype.convertGlobalCssToInlineCss = function (rootNode) {\r\n        var styleNodes = toArray(rootNode.querySelectorAll('style'));\r\n        var styleSheets = this.additionalGlobalStyleNodes\r\n            .reverse()\r\n            .map(function (node) { return node.sheet; })\r\n            .concat(styleNodes.map(function (node) { return node.sheet; }).reverse());\r\n        for (var _i = 0, styleSheets_1 = styleSheets; _i < styleSheets_1.length; _i++) {\r\n            var styleSheet = styleSheets_1[_i];\r\n            var _loop_1 = function (j) {\r\n                // Skip any none-style rule, i.e. @page\r\n                var styleRule = styleSheet.cssRules[j];\r\n                var text = styleRule && styleRule.style ? styleRule.style.cssText : null;\r\n                if (styleRule.type != CSSRule.STYLE_RULE || !text || !styleRule.selectorText) {\r\n                    return \"continue\";\r\n                }\r\n                // Make sure the selector is not empty\r\n                for (var _i = 0, _a = styleRule.selectorText.split(','); _i < _a.length; _i++) {\r\n                    var selector = _a[_i];\r\n                    if (!selector || !selector.trim() || selector.indexOf(':') >= 0) {\r\n                        continue;\r\n                    }\r\n                    var nodes = toArray(rootNode.querySelectorAll(selector));\r\n                    // Always put existing styles after so that they have higher priority\r\n                    // Which means if both global style and inline style apply to the same element,\r\n                    // inline style will have higher priority\r\n                    nodes.forEach(function (node) {\r\n                        return node.setAttribute('style', text + (node.getAttribute('style') || ''));\r\n                    });\r\n                }\r\n            };\r\n            for (var j = styleSheet.cssRules.length - 1; j >= 0; j--) {\r\n                _loop_1(j);\r\n            }\r\n        }\r\n        styleNodes.forEach(function (node) {\r\n            if (node.parentNode) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        });\r\n    };\r\n    HtmlSanitizer.prototype.processNode = function (node, currentStyle, context) {\r\n        var nodeType = node.nodeType;\r\n        var isElement = nodeType == Node.ELEMENT_NODE;\r\n        var isText = nodeType == Node.TEXT_NODE;\r\n        var element = node;\r\n        var tag = isElement ? element.tagName.toUpperCase() : '';\r\n        if ((isElement && !this.allowElement(element, tag, context)) ||\r\n            (isText && /^[\\r\\n]*$/g.test(node.nodeValue) && !currentStyle.insidePRE) ||\r\n            (!isElement && !isText)) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        else if (isText &&\r\n            !this.allowPreserveWhiteSpace &&\r\n            currentStyle['white-space'] == 'pre') {\r\n            node.nodeValue = node.nodeValue.replace(/^ /gm, '\\u00A0').replace(/ {2}/g, ' \\u00A0');\r\n        }\r\n        else if (isElement) {\r\n            var thisStyle = cloneObject_1.default(currentStyle);\r\n            this.processAttributes(element, context);\r\n            this.processCss(element, tag, thisStyle, context);\r\n            // Special handling for PRE tag, need to preserve \\r\\n inside PRE\r\n            if (tag == 'PRE') {\r\n                thisStyle.insidePRE = 'true';\r\n            }\r\n            var child = element.firstChild;\r\n            var next = void 0;\r\n            for (; child; child = next) {\r\n                next = child.nextSibling;\r\n                this.processNode(child, thisStyle, context);\r\n            }\r\n        }\r\n    };\r\n    HtmlSanitizer.prototype.processCss = function (element, tag, thisStyle, context) {\r\n        var _this = this;\r\n        var styleNode = element.getAttributeNode('style');\r\n        if (!styleNode) {\r\n            return;\r\n        }\r\n        var source = styleNode.value.split(';');\r\n        var result = source.filter(function (style) {\r\n            var pair;\r\n            if (!style || style.trim() == '' || (pair = style.split(':')).length != 2) {\r\n                return false;\r\n            }\r\n            var name = pair[0].trim().toLowerCase();\r\n            var value = pair[1].trim().toLowerCase();\r\n            var callback = _this.styleCallbacks[name];\r\n            var isInheritable = thisStyle[name] != undefined;\r\n            var keep = (!callback || callback(value, element, context)) &&\r\n                value != 'inherit' &&\r\n                value.indexOf('expression') < 0 &&\r\n                name.substr(0, 1) != '-' &&\r\n                _this.defaultStyleValues[name] != value &&\r\n                ((isInheritable && value != thisStyle[name]) ||\r\n                    (!isInheritable && value != 'initial' && value != 'normal'));\r\n            if (keep && isInheritable) {\r\n                thisStyle[name] = value;\r\n            }\r\n            return keep && (_this.allowPreserveWhiteSpace || name != 'white-space');\r\n        });\r\n        if (source.length != result.length) {\r\n            if (result.length > 0) {\r\n                element.setAttribute('style', result.map(function (s) { return s.trim(); }).join('; '));\r\n            }\r\n            else {\r\n                element.removeAttribute('style');\r\n            }\r\n        }\r\n    };\r\n    HtmlSanitizer.prototype.processAttributes = function (element, context) {\r\n        for (var i = element.attributes.length - 1; i >= 0; i--) {\r\n            var attribute = element.attributes[i];\r\n            var name_1 = attribute.name.toLowerCase().trim();\r\n            var value = attribute.value;\r\n            var callback = this.attributeCallbacks[name_1];\r\n            if (callback) {\r\n                value = callback(value, element, context);\r\n            }\r\n            else if (this.allowedAttributes.indexOf(name_1) < 0) {\r\n                value = null;\r\n            }\r\n            if (value === null ||\r\n                value === undefined ||\r\n                value.toLowerCase().indexOf('script:') >= 0) {\r\n                element.removeAttribute(name_1);\r\n            }\r\n            else {\r\n                attribute.value = value;\r\n            }\r\n        }\r\n    };\r\n    HtmlSanitizer.prototype.allowElement = function (element, tag, context) {\r\n        var callback = this.elementCallbacks[tag];\r\n        return callback\r\n            ? callback(element, context)\r\n            : this.allowedTags.indexOf(tag) >= 0 || tag.indexOf(':') > 0;\r\n    };\r\n    return HtmlSanitizer;\r\n}());\r\nexports.default = HtmlSanitizer;\r\nfunction toArray(list) {\r\n    return [].slice.call(list);\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar cloneObject_1 = require(\"./cloneObject\");\r\nvar ALLOWED_HTML_TAGS = ('BODY,H1,H2,H3,H4,H5,H6,FORM,P,BR,NOBR,HR,ACRONYM,ABBR,ADDRESS,B,' +\r\n    'BDI,BDO,BIG,BLOCKQUOTE,CENTER,CITE,CODE,DEL,DFN,EM,FONT,I,INS,KBD,MARK,METER,PRE,PROGRESS,' +\r\n    'Q,RP,RT,RUBY,S,SAMP,SMALL,STRIKE,STRONG,SUB,SUP,TEMPLATE,TIME,TT,U,VAR,WBR,XMP,INPUT,TEXTAREA,' +\r\n    'BUTTON,SELECT,OPTGROUP,OPTION,LABEL,FIELDSET,LEGEND,DATALIST,OUTPUT,IMG,MAP,AREA,CANVAS,FIGCAPTION,' +\r\n    'FIGURE,PICTURE,A,NAV,UL,OL,LI,DIR,UL,DL,DT,DD,MENU,MENUITEM,TABLE,CAPTION,TH,TR,TD,THEAD,TBODY,' +\r\n    'TFOOT,COL,COLGROUP,DIV,SPAN,HEADER,FOOTER,MAIN,SECTION,ARTICLE,ASIDE,DETAILS,DIALOG,SUMMARY,DATA').split(',');\r\nvar ALLOWED_HTML_ATTRIBUTES = ('accept,align,alt,checked,cite,color,cols,colspan,contextmenu,' +\r\n    'coords,datetime,default,dir,dirname,disabled,download,face,headers,height,hidden,high,href,' +\r\n    'hreflang,ismap,kind,label,lang,list,low,max,maxlength,media,min,multiple,open,optimum,pattern,' +\r\n    'placeholder,readonly,rel,required,reversed,rows,rowspan,scope,selected,shape,size,sizes,span,' +\r\n    'spellcheck,src,srclang,srcset,start,step,style,tabindex,target,title,translate,type,usemap,value,' +\r\n    'width,wrap').split(',');\r\nvar DEFAULT_STYLE_VALUES = {\r\n    'background-color': 'transparent',\r\n    'border-bottom-color': 'rgb(0, 0, 0)',\r\n    'border-bottom-style': 'none',\r\n    'border-bottom-width': '0px',\r\n    'border-image-outset': '0',\r\n    'border-image-repeat': 'stretch',\r\n    'border-image-slice': '100%',\r\n    'border-image-source': 'none',\r\n    'border-image-width': '1',\r\n    'border-left-color': 'rgb(0, 0, 0)',\r\n    'border-left-style': 'none',\r\n    'border-left-width': '0px',\r\n    'border-right-color': 'rgb(0, 0, 0)',\r\n    'border-right-style': 'none',\r\n    'border-right-width': '0px',\r\n    'border-top-color': 'rgb(0, 0, 0)',\r\n    'border-top-style': 'none',\r\n    'border-top-width': '0px',\r\n    'outline-color': 'transparent',\r\n    'outline-style': 'none',\r\n    'outline-width': '0px',\r\n    overflow: 'visible',\r\n    'text-decoration': 'none',\r\n    '-webkit-text-stroke-width': '0px',\r\n    'word-wrap': 'break-word',\r\n    'margin-left': '0px',\r\n    'margin-right': '0px',\r\n    padding: '0px',\r\n    'padding-top': '0px',\r\n    'padding-left': '0px',\r\n    'padding-right': '0px',\r\n    'padding-bottom': '0px',\r\n    border: '0px',\r\n    'border-top': '0px',\r\n    'border-left': '0px',\r\n    'border-right': '0px',\r\n    'border-bottom': '0px',\r\n    'vertical-align': 'baseline',\r\n    float: 'none',\r\n};\r\nfunction getAllowedTags(additionalTags) {\r\n    return unique(ALLOWED_HTML_TAGS.concat(additionalTags || [])).map(function (tag) { return tag.toUpperCase(); });\r\n}\r\nexports.getAllowedTags = getAllowedTags;\r\nfunction getAllowedAttributes(additionalAttributes) {\r\n    return unique(ALLOWED_HTML_ATTRIBUTES.concat(additionalAttributes || [])).map(function (attr) {\r\n        return attr.toLocaleLowerCase();\r\n    });\r\n}\r\nexports.getAllowedAttributes = getAllowedAttributes;\r\nfunction getDefaultStyleValues(additionalDefaultStyles) {\r\n    var result = cloneObject_1.default(DEFAULT_STYLE_VALUES);\r\n    if (additionalDefaultStyles) {\r\n        Object.keys(additionalDefaultStyles).forEach(function (name) {\r\n            var value = additionalDefaultStyles[name];\r\n            if (value !== null && value !== undefined) {\r\n                result[name] = value;\r\n            }\r\n            else {\r\n                delete result[name];\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}\r\nexports.getDefaultStyleValues = getDefaultStyleValues;\r\nfunction getStyleCallbacks(callbacks) {\r\n    var result = cloneObject_1.default(callbacks);\r\n    result.position = result.position || removeValue;\r\n    result.width = result.width || removeWidthForLiAndDiv;\r\n    return result;\r\n}\r\nexports.getStyleCallbacks = getStyleCallbacks;\r\nfunction removeValue() {\r\n    return null;\r\n}\r\nfunction removeWidthForLiAndDiv(value, element) {\r\n    var tag = element.tagName;\r\n    return !(tag == 'LI' || tag == 'DIV');\r\n}\r\nfunction unique(array) {\r\n    return array.filter(function (value, index, self) { return self.indexOf(value) == index; });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_html_sanitizer_1 = require(\"roosterjs-html-sanitizer\");\r\n/**\r\n * @deprecated Use HtmlSanitizer.sanitizeHtml from roosterjs-html-sanitizer instead\r\n * Sanitize HTML string\r\n * This function will do the following work:\r\n * 1. Convert global CSS into inline CSS\r\n * 2. Remove dangerous HTML tags and attributes\r\n * 3. Remove useless CSS properties\r\n * @param html The input HTML\r\n * @param additionalStyleNodes additional style nodes for inline css converting\r\n * @param convertInlineCssOnly Whether only convert inline css and skip html content sanitizing\r\n * @param propertyCallbacks A callback function map to handle HTML properties\r\n * @param preserveFragmentOnly If set to true, only preserve the html content between <!--StartFragment--> and <!--Endfragment-->\r\n */\r\nfunction sanitizeHtml(html, additionalStyleNodes, convertInlineCssOnly, propertyCallbacks, preserveFragmentOnly, currentStyle) {\r\n    return roosterjs_html_sanitizer_1.HtmlSanitizer.sanitizeHtml(html, {\r\n        additionalGlobalStyleNodes: additionalStyleNodes,\r\n        convertCssOnly: convertInlineCssOnly,\r\n        attributeCallbacks: propertyCallbacks,\r\n        currentElementOrStyle: currentStyle,\r\n        preserveFragmentOnly: preserveFragmentOnly,\r\n    });\r\n}\r\nexports.default = sanitizeHtml;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar createRange_1 = require(\"../selection/createRange\");\r\nvar Position_1 = require(\"../selection/Position\");\r\nvar queryElements_1 = require(\"../utils/queryElements\");\r\nvar OFFSET_1_ATTRIBUTE = 'data-offset1';\r\nvar OFFSET_2_ATTRIBUTE = 'data-offset2';\r\nvar CURSOR_START = 'cursor-start';\r\nvar CURSOR_END = 'cursor-end';\r\nvar CURSOR_SINGLE = 'cursor-single';\r\nvar CURSOR_MARK_SELECTOR = \"SPAN#\" + CURSOR_START + \",SPAN#\" + CURSOR_END + \",SPAN#\" + CURSOR_SINGLE;\r\n/**\r\n * @deprecated\r\n * Insert selection marker element into content, so that after doing some modification,\r\n * we can still restore the selection as long as the selection marker is still there\r\n * @param container Container HTML element to query selection markers from\r\n * @param rawRange Current selection range\r\n * @param useInlineMarker Inline marker will be inserted at the position where current selection is,\r\n * so that even some content is changed, we can still still restore the selection. But this can cause\r\n * adjacent text nodes to be created. If we are sure the content won't be changed and we don't want to\r\n * create adjacent text nodes, set this parameter to false. This usually happens for undo/redo.\r\n * @returns True if selection markers are added, otherwise false.\r\n */\r\nfunction markSelection(container, range, useInlineMarker) {\r\n    if (!range || queryElements_1.default(container, CURSOR_MARK_SELECTOR).length > 0) {\r\n        return false;\r\n    }\r\n    var start = Position_1.default.getStart(range).normalize();\r\n    var end = Position_1.default.getEnd(range).normalize();\r\n    if (start.equalTo(end) || (!useInlineMarker && start.node == end.node)) {\r\n        insertMarker(CURSOR_SINGLE, useInlineMarker, start, end);\r\n    }\r\n    else {\r\n        insertMarker(CURSOR_END, useInlineMarker, end);\r\n        insertMarker(CURSOR_START, useInlineMarker, start);\r\n    }\r\n    return true;\r\n}\r\nexports.markSelection = markSelection;\r\n/**\r\n * @deprecated\r\n * If there is selection marker in content, convert into back to a selection range and remove the markers,\r\n * otherwise no op.\r\n * @param container Container HTML element to query selection markers from\r\n * @param retrieveSelectionRange Whether retrieve selection range from the markers if any\r\n * @returns The selection range converted from makers, or null if no valid marker found.\r\n */\r\nfunction removeMarker(container, retrieveSelectionRange) {\r\n    var start;\r\n    var end;\r\n    var range;\r\n    var markers = queryElements_1.default(container, CURSOR_MARK_SELECTOR, retrieveSelectionRange\r\n        ? function (marker) {\r\n            switch (marker.id) {\r\n                case CURSOR_START:\r\n                    start = safeCreatePosition(marker, OFFSET_1_ATTRIBUTE);\r\n                    break;\r\n                case CURSOR_END:\r\n                    end = safeCreatePosition(marker, OFFSET_1_ATTRIBUTE);\r\n                    break;\r\n                case CURSOR_SINGLE:\r\n                    start = safeCreatePosition(marker, OFFSET_1_ATTRIBUTE);\r\n                    end = safeCreatePosition(marker, OFFSET_2_ATTRIBUTE);\r\n                    break;\r\n            }\r\n        }\r\n        : null);\r\n    if (start && end && markers.length <= 2) {\r\n        range = createRange_1.default(start, end);\r\n    }\r\n    markers.forEach(function (marker) { return marker.parentNode && marker.parentNode.removeChild(marker); });\r\n    return range;\r\n}\r\nexports.removeMarker = removeMarker;\r\nfunction safeCreatePosition(marker, attrName) {\r\n    var node = marker.nextSibling;\r\n    var offset = parseInt(marker.getAttribute(attrName)) || 0;\r\n    return node ? new Position_1.default(node, offset) : new Position_1.default(marker, -3 /* After */);\r\n}\r\nfunction insertMarker(type, useInlineMarker, pos1, pos2) {\r\n    var node = pos1.node;\r\n    var marker = node.ownerDocument.createElement('SPAN');\r\n    var offset = getRestorableOffset(pos1);\r\n    marker.id = type;\r\n    marker.setAttribute(OFFSET_1_ATTRIBUTE, useInlineMarker ? '0' : '' + offset);\r\n    marker.setAttribute(OFFSET_2_ATTRIBUTE, useInlineMarker || !pos2 ? '0' : '' + getRestorableOffset(pos2));\r\n    if (!useInlineMarker || offset == 0) {\r\n        node.parentNode.insertBefore(marker, node);\r\n    }\r\n    else if (pos1.isAtEnd) {\r\n        node.parentNode.insertBefore(marker, node.nextSibling);\r\n    }\r\n    else {\r\n        var range = node.ownerDocument.createRange();\r\n        range.setStart(node, offset);\r\n        range.collapse(true /* toStart */);\r\n        range.insertNode(marker);\r\n    }\r\n}\r\nfunction getRestorableOffset(position) {\r\n    return position.offset == 0 && position.isAtEnd ? 1 : position.offset;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar collapseSelectedBlocks_1 = require(\"../utils/collapseSelectedBlocks\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nexports.TAGS_TO_UNWRAP = 'B,I,U,STRONG,EM,SUB,SUP,STRIKE,FONT,CENTER,H1,H2,H3,H4,H5,H6,UL,OL,LI,SPAN,P,BLOCKQUOTE,CODE,S,PRE'.split(',');\r\nexports.TAGS_TO_STOP_UNWRAP = ['TD', 'TH', 'TR', 'TABLE', 'TBODY', 'THEAD'];\r\nexports.ATTRIBUTES_TO_PRESERVE = ['href'];\r\n/**\r\n * Clear all formats of selected blocks.\r\n * When selection is collapsed, only clear format of current block.\r\n * @param editor The editor instance\r\n * @param tagsToUnwrap Optional. A string array contains HTML tags in upper case which we will unwrap when clear format\r\n * @param tagsToStopUnwrap Optional. A string array contains HTML tags in upper case which we will stop unwrap if these tags are hit\r\n */\r\nfunction clearBlockFormat(editor, tagsToUnwrap, tagsToStopUnwrap, attributesToPreserve) {\r\n    if (tagsToUnwrap === void 0) { tagsToUnwrap = exports.TAGS_TO_UNWRAP; }\r\n    if (tagsToStopUnwrap === void 0) { tagsToStopUnwrap = exports.TAGS_TO_STOP_UNWRAP; }\r\n    if (attributesToPreserve === void 0) { attributesToPreserve = exports.ATTRIBUTES_TO_PRESERVE; }\r\n    editor.focus();\r\n    editor.addUndoSnapshot(function (start, end) {\r\n        var groups = [{}];\r\n        var stopUnwrapSelector = tagsToStopUnwrap.join(',');\r\n        // 1. Collapse the selected blocks and get first and last element\r\n        collapseSelectedBlocks_1.default(editor, function (element) {\r\n            var group = groups[groups.length - 1];\r\n            var td = editor.getElementAtCursor(stopUnwrapSelector, element);\r\n            if (td != group.td && group.first) {\r\n                groups.push((group = {}));\r\n            }\r\n            group.td = td;\r\n            group.first = group.first || element;\r\n            group.last = element;\r\n        });\r\n        groups.filter(function (group) { return group.first; }).forEach(function (group) {\r\n            // 2. Collapse with first and last element to make them under same parent\r\n            var nodes = editor.collapseNodes(group.first, group.last, true /*canSplitParent*/);\r\n            // 3. Continue collapse until we can't collapse any more (hit root node, or a table)\r\n            if (canCollapse(tagsToStopUnwrap, nodes[0])) {\r\n                while (editor.contains(nodes[0].parentNode) &&\r\n                    canCollapse(tagsToStopUnwrap, nodes[0].parentNode)) {\r\n                    nodes = [roosterjs_editor_dom_1.splitBalancedNodeRange(nodes)];\r\n                }\r\n            }\r\n            // 4. Clear formats of the nodes\r\n            nodes.forEach(function (node) {\r\n                return clearNodeFormat(node, tagsToUnwrap, tagsToStopUnwrap, attributesToPreserve);\r\n            });\r\n            // 5. Clear CSS of container TD if exist\r\n            if (group.td) {\r\n                var styles = group.td.getAttribute('style') || '';\r\n                var styleArray = styles.split(';');\r\n                styleArray = styleArray.filter(function (style) {\r\n                    return style\r\n                        .trim()\r\n                        .toLowerCase()\r\n                        .indexOf('border') == 0;\r\n                });\r\n                styles = styleArray.join(';');\r\n                if (styles) {\r\n                    group.td.setAttribute('style', styles);\r\n                }\r\n                else {\r\n                    group.td.removeAttribute('style');\r\n                }\r\n            }\r\n        });\r\n        editor.select(start, end);\r\n    }, \"Format\" /* Format */);\r\n}\r\nexports.default = clearBlockFormat;\r\nfunction clearNodeFormat(node, tagsToUnwrap, tagsToStopUnwrap, attributesToPreserve) {\r\n    if (node.nodeType != 1 /* Element */) {\r\n        return false;\r\n    }\r\n    // 1. Recursively clear format of all its child nodes\r\n    var allChildrenAreBlock = [].slice.call(node.childNodes)\r\n        .map(function (n) { return clearNodeFormat(n, tagsToUnwrap, tagsToStopUnwrap, attributesToPreserve); })\r\n        .reduce(function (previousValue, value) { return previousValue && value; }, true);\r\n    if (!canCollapse(tagsToStopUnwrap, node)) {\r\n        return false;\r\n    }\r\n    var returnBlockElement = roosterjs_editor_dom_1.isBlockElement(node);\r\n    // 2. If we should unwrap this tag, put it into an array and unwrap it later\r\n    if (tagsToUnwrap.indexOf(roosterjs_editor_dom_1.getTagOfNode(node)) >= 0 || allChildrenAreBlock) {\r\n        if (returnBlockElement && !allChildrenAreBlock) {\r\n            roosterjs_editor_dom_1.wrap(node);\r\n        }\r\n        roosterjs_editor_dom_1.unwrap(node);\r\n    }\r\n    else {\r\n        // 3. Otherwise, remove all attributes\r\n        clearAttribute(node, attributesToPreserve);\r\n    }\r\n    return returnBlockElement;\r\n}\r\nfunction clearAttribute(element, attributesToPreserve) {\r\n    for (var _i = 0, _a = [].slice.call(element.attributes); _i < _a.length; _i++) {\r\n        var attr = _a[_i];\r\n        if (attributesToPreserve.indexOf(attr.name.toLowerCase()) < 0) {\r\n            element.removeAttribute(attr.name);\r\n        }\r\n    }\r\n}\r\nfunction canCollapse(tagsToStopUnwrap, node) {\r\n    return tagsToStopUnwrap.indexOf(roosterjs_editor_dom_1.getTagOfNode(node)) < 0;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar execCommand_1 = require(\"../utils/execCommand\");\r\nvar setBackgroundColor_1 = require(\"./setBackgroundColor\");\r\nvar setFontName_1 = require(\"./setFontName\");\r\nvar setFontSize_1 = require(\"./setFontSize\");\r\nvar setTextColor_1 = require(\"./setTextColor\");\r\nvar toggleBold_1 = require(\"./toggleBold\");\r\nvar toggleItalic_1 = require(\"./toggleItalic\");\r\nvar toggleUnderline_1 = require(\"./toggleUnderline\");\r\nvar STYLES_TO_REMOVE = ['font', 'text-decoration', 'color', 'background'];\r\n/**\r\n * Clear the format in current selection, after cleaning, the format will be\r\n * changed to default format. The format that get cleaned include B/I/U/font name/\r\n * font size/text color/background color/align left/align right/align center/superscript/subscript\r\n * @param editor The editor instance\r\n */\r\nfunction clearFormat(editor) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(function () {\r\n        execCommand_1.default(editor, \"removeFormat\" /* RemoveFormat */);\r\n        editor.queryElements('[class]', 1 /* OnSelection */, function (node) {\r\n            return node.removeAttribute('class');\r\n        });\r\n        var defaultFormat = editor.getDefaultFormat();\r\n        var isDefaultFormatEmpty = Object.keys(defaultFormat).length === 0;\r\n        editor.queryElements('[style]', 2 /* InSelection */, function (node) {\r\n            STYLES_TO_REMOVE.forEach(function (style) { return node.style.removeProperty(style); });\r\n            // when default format is empty, keep the HTML minimum by removing style attribute if there's no style\r\n            // (note: because default format is empty, we're not adding style back in)\r\n            if (isDefaultFormatEmpty && node.getAttribute('style') === '') {\r\n                node.removeAttribute('style');\r\n            }\r\n        });\r\n        if (!isDefaultFormatEmpty) {\r\n            if (defaultFormat.fontFamily) {\r\n                setFontName_1.default(editor, defaultFormat.fontFamily);\r\n            }\r\n            if (defaultFormat.fontSize) {\r\n                setFontSize_1.default(editor, defaultFormat.fontSize);\r\n            }\r\n            if (defaultFormat.textColor) {\r\n                setTextColor_1.default(editor, defaultFormat.textColor);\r\n            }\r\n            if (defaultFormat.backgroundColor) {\r\n                setBackgroundColor_1.default(editor, defaultFormat.backgroundColor);\r\n            }\r\n            if (defaultFormat.bold) {\r\n                toggleBold_1.default(editor);\r\n            }\r\n            if (defaultFormat.italic) {\r\n                toggleItalic_1.default(editor);\r\n            }\r\n            if (defaultFormat.underline) {\r\n                toggleUnderline_1.default(editor);\r\n            }\r\n        }\r\n    }, \"Format\" /* Format */);\r\n}\r\nexports.default = clearFormat;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n// Regex matching Uri scheme\r\nvar URI_REGEX = /^[a-zA-Z]+:/i;\r\n// Regex matching begin of email address\r\nvar MAILTO_REGEX = /^[\\w.%+-]+@/i;\r\n// Regex matching begin of ftp, i.e. ftp.microsoft.com\r\nvar FTP_REGEX = /^ftp\\./i;\r\nvar TEMP_TITLE = 'istemptitle';\r\nfunction applyLinkPrefix(url) {\r\n    if (!url) {\r\n        return url;\r\n    }\r\n    // Add link prefix per rule:\r\n    // (a) if the url always starts with a URI scheme, leave it as it is\r\n    // (b) if the url is an email address, xxx@... add mailto: prefix\r\n    // (c) if the url starts with ftp., add ftp:// prefix\r\n    // (d) rest, add http:// prefix\r\n    var prefix = '';\r\n    if (url.search(URI_REGEX) < 0) {\r\n        if (url.search(MAILTO_REGEX) == 0) {\r\n            prefix = 'mailto:';\r\n        }\r\n        else if (url.search(FTP_REGEX) == 0) {\r\n            prefix = 'ftp://';\r\n        }\r\n        else {\r\n            // fallback to http://\r\n            prefix = 'http://';\r\n        }\r\n    }\r\n    return prefix + url;\r\n}\r\n/**\r\n * Insert a hyperlink at cursor.\r\n * When there is a selection, hyperlink will be applied to the selection,\r\n * otherwise a hyperlink will be inserted to the cursor position.\r\n * @param editor Editor object\r\n * @param link Link address, can be http(s), mailto, notes, file, unc, ftp, news, telnet, gopher, wais.\r\n * When protocol is not specified, a best matched protocol will be predicted.\r\n * @param altText Optional alt text of the link, will be shown when hover on the link\r\n * @param displayText Optional display text for the link.\r\n * If specified, the display text of link will be replaced with this text.\r\n * If not specified and there wasn't a link, the link url will be used as display text.\r\n */\r\nfunction createLink(editor, link, altText, displayText) {\r\n    editor.focus();\r\n    var url = link ? link.trim() : '';\r\n    if (url) {\r\n        var linkData = roosterjs_editor_dom_1.matchLink(url);\r\n        // matchLink can match most links, but not all, i.e. if you pass link a link as \"abc\", it won't match\r\n        // we know in that case, users will want to insert a link like http://abc\r\n        // so we have separate logic in applyLinkPrefix to add link prefix depending on the format of the link\r\n        // i.e. if the link starts with something like abc@xxx, we will add mailto: prefix\r\n        // if the link starts with ftp.xxx, we will add ftp:// link. For more, see applyLinkPrefix\r\n        var normalizedUrl_1 = linkData ? linkData.normalizedUrl : applyLinkPrefix(url);\r\n        var originalUrl_1 = linkData ? linkData.originalUrl : url;\r\n        editor.addUndoSnapshot(function () {\r\n            var range = editor.getSelectionRange();\r\n            var anchor = null;\r\n            if (range && range.collapsed) {\r\n                anchor = getAnchorNodeAtCursor(editor);\r\n                // If there is already a link, just change its href\r\n                if (anchor) {\r\n                    anchor.href = normalizedUrl_1;\r\n                    // Change text content if it is specified\r\n                    updateAnchorDisplayText(anchor, displayText);\r\n                }\r\n                else {\r\n                    anchor = editor.getDocument().createElement('A');\r\n                    anchor.textContent = displayText || originalUrl_1;\r\n                    anchor.href = normalizedUrl_1;\r\n                    editor.insertNode(anchor);\r\n                }\r\n            }\r\n            else {\r\n                // the selection is not collapsed, use browser execCommand\r\n                editor.getDocument().execCommand(\"createLink\" /* CreateLink */, false, normalizedUrl_1);\r\n                anchor = getAnchorNodeAtCursor(editor);\r\n                updateAnchorDisplayText(anchor, displayText);\r\n            }\r\n            if (altText && anchor) {\r\n                // Hack: Ideally this should be done by HyperLink plugin.\r\n                // We make a hack here since we don't have an event to notify HyperLink plugin\r\n                // before we apply the link.\r\n                anchor.removeAttribute(TEMP_TITLE);\r\n                anchor.title = altText;\r\n            }\r\n            return anchor;\r\n        }, \"CreateLink\" /* CreateLink */);\r\n    }\r\n}\r\nexports.default = createLink;\r\nfunction getAnchorNodeAtCursor(editor) {\r\n    return editor.queryElements('a[href]', 1 /* OnSelection */)[0];\r\n}\r\nfunction updateAnchorDisplayText(anchor, displayText) {\r\n    if (displayText && anchor.textContent != displayText) {\r\n        anchor.textContent = displayText;\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_core_1 = require(\"roosterjs-editor-core\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * Get format state at cursor\r\n * A format state is a collection of all format related states, e.g.,\r\n * bold, italic, underline, font name, font size, etc.\r\n * @param editor The editor\r\n * @param (Optional) The plugin event, it stores the event cached data for looking up.\r\n * In this function the event cache is used to get list state and header level. If not passed,\r\n * it will query the node within selection to get the info\r\n * @returns The format state at cursor\r\n */\r\nfunction getFormatState(editor, event) {\r\n    var range = editor.getSelectionRange();\r\n    var node = range && roosterjs_editor_dom_1.Position.getStart(range).normalize().node;\r\n    var styles = node ? roosterjs_editor_dom_1.getComputedStyles(node) : [];\r\n    var listTag = roosterjs_editor_dom_1.getTagOfNode(roosterjs_editor_core_1.cacheGetElementAtCursor(editor, event, 'OL,UL'));\r\n    var headerTag = roosterjs_editor_dom_1.getTagOfNode(roosterjs_editor_core_1.cacheGetElementAtCursor(editor, event, 'H1,H2,H3,H4,H5,H6'));\r\n    var document = editor.getDocument();\r\n    return {\r\n        fontName: styles[0],\r\n        fontSize: styles[1],\r\n        textColor: styles[2],\r\n        backgroundColor: styles[3],\r\n        isBold: document.queryCommandState(\"bold\" /* Bold */),\r\n        isItalic: document.queryCommandState(\"italic\" /* Italic */),\r\n        isUnderline: document.queryCommandState(\"underline\" /* Underline */),\r\n        isStrikeThrough: document.queryCommandState(\"strikeThrough\" /* StrikeThrough */),\r\n        isSubscript: document.queryCommandState(\"subscript\" /* Subscript */),\r\n        isSuperscript: document.queryCommandState(\"superscript\" /* Superscript */),\r\n        isBullet: listTag == 'UL',\r\n        isNumbering: listTag == 'OL',\r\n        headerLevel: (headerTag && parseInt(headerTag[1])) || 0,\r\n        canUnlink: !!editor.queryElements('a[href]', 1 /* OnSelection */)[0],\r\n        canAddImageAltText: !!editor.queryElements('img', 1 /* OnSelection */)[0],\r\n        isBlockQuote: !!editor.queryElements('blockquote', 1 /* OnSelection */)[0],\r\n        canUndo: editor.canUndo(),\r\n        canRedo: editor.canRedo(),\r\n    };\r\n}\r\nexports.default = getFormatState;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar createEditorCore_1 = require(\"./createEditorCore\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar roosterjs_editor_dom_2 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * RoosterJs core editor class\r\n */\r\nvar Editor = /** @class */ (function () {\r\n    //#region Lifecycle\r\n    /**\r\n     * Creates an instance of Editor\r\n     * @param contentDiv The DIV HTML element which will be the container element of editor\r\n     * @param options An optional options object to customize the editor\r\n     */\r\n    function Editor(contentDiv, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = this;\r\n        // 1. Make sure all parameters are valid\r\n        if (roosterjs_editor_dom_2.getTagOfNode(contentDiv) != 'DIV') {\r\n            throw new Error('contentDiv must be an HTML DIV element');\r\n        }\r\n        // 2. Store options values to local variables\r\n        this.core = createEditorCore_1.default(contentDiv, options);\r\n        // 3. Initialize plugins\r\n        this.core.plugins.forEach(function (plugin) { return plugin.initialize(_this); });\r\n        // 4. Ensure initial content and its format\r\n        this.setContent(options.initialContent || contentDiv.innerHTML || '');\r\n        // 5. Create event handler to bind DOM events\r\n        this.eventDisposers = [\r\n            this.core.api.attachDomEvent(this.core, 'keypress', 1 /* KeyPress */),\r\n            this.core.api.attachDomEvent(this.core, 'keydown', 0 /* KeyDown */),\r\n            this.core.api.attachDomEvent(this.core, 'keyup', 2 /* KeyUp */),\r\n            this.core.api.attachDomEvent(this.core, 'mousedown', 4 /* MouseDown */),\r\n        ];\r\n        // 6. Make the container editable and set its selection styles\r\n        if (!options.omitContentEditableAttributeChanges && !contentDiv.isContentEditable) {\r\n            contentDiv.setAttribute('contenteditable', 'true');\r\n            var styles = contentDiv.style;\r\n            styles.userSelect = styles.msUserSelect = styles.webkitUserSelect = 'text';\r\n            this.contenteditableChanged = true;\r\n        }\r\n        // 7. Disable these operations for firefox since its behavior is usually wrong\r\n        // Catch any possible exception since this should not block the initialization of editor\r\n        try {\r\n            this.core.document.execCommand(\"enableObjectResizing\" /* EnableObjectResizing */, false, (false));\r\n            this.core.document.execCommand(\"enableInlineTableEditing\" /* EnableInlineTableEditing */, false, false);\r\n        }\r\n        catch (e) { }\r\n        // 8. Let plugins know that we are ready\r\n        this.triggerEvent({\r\n            eventType: 10 /* EditorReady */,\r\n        }, true /*broadcast*/);\r\n        // 9. Before give editor to user, make sure there is at least one DIV element to accept typing\r\n        this.core.corePlugin.ensureTypeInElement(new roosterjs_editor_dom_2.Position(contentDiv, 0 /* Begin */));\r\n    }\r\n    /**\r\n     * Dispose this editor, dispose all plugins and custom data\r\n     */\r\n    Editor.prototype.dispose = function () {\r\n        this.triggerEvent({\r\n            eventType: 11 /* BeforeDispose */,\r\n        }, true /*broadcast*/);\r\n        this.core.plugins.forEach(function (plugin) { return plugin.dispose(); });\r\n        this.eventDisposers.forEach(function (disposer) { return disposer(); });\r\n        this.eventDisposers = null;\r\n        for (var _i = 0, _a = Object.keys(this.core.customData); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            var data = this.core.customData[key];\r\n            if (data && data.disposer) {\r\n                data.disposer(data.value);\r\n            }\r\n            delete this.core.customData[key];\r\n        }\r\n        if (this.contenteditableChanged) {\r\n            var styles = this.core.contentDiv.style;\r\n            styles.userSelect = styles.msUserSelect = styles.webkitUserSelect = '';\r\n            this.core.contentDiv.removeAttribute('contenteditable');\r\n        }\r\n        this.core = null;\r\n    };\r\n    /**\r\n     * Get whether this editor is disposed\r\n     * @returns True if editor is disposed, otherwise false\r\n     */\r\n    Editor.prototype.isDisposed = function () {\r\n        return !this.core;\r\n    };\r\n    //#endregion\r\n    //#region Node API\r\n    /**\r\n     * Insert node into editor\r\n     * @param node The node to insert\r\n     * @param option Insert options. Default value is:\r\n     *  position: ContentPosition.SelectionStart\r\n     *  updateCursor: true\r\n     *  replaceSelection: true\r\n     *  insertOnNewLine: false\r\n     * @returns true if node is inserted. Otherwise false\r\n     */\r\n    Editor.prototype.insertNode = function (node, option) {\r\n        return node ? this.core.api.insertNode(this.core, node, option) : false;\r\n    };\r\n    /**\r\n     * Delete a node from editor content\r\n     * @param node The node to delete\r\n     * @returns true if node is deleted. Otherwise false\r\n     */\r\n    Editor.prototype.deleteNode = function (node) {\r\n        // Only remove the node when it falls within editor\r\n        if (node && this.contains(node)) {\r\n            node.parentNode.removeChild(node);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Replace a node in editor content with another node\r\n     * @param existingNode The existing node to be replaced\r\n     * @param new node to replace to\r\n     * @returns true if node is replaced. Otherwise false\r\n     */\r\n    Editor.prototype.replaceNode = function (existingNode, toNode) {\r\n        // Only replace the node when it falls within editor\r\n        if (existingNode && toNode && this.contains(existingNode)) {\r\n            existingNode.parentNode.replaceChild(toNode, existingNode);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Get InlineElement at given node\r\n     * @param node The node to create InlineElement\r\n     * @returns The InlineElement result\r\n     */\r\n    Editor.prototype.getInlineElementAtNode = function (node) {\r\n        return roosterjs_editor_dom_2.getInlineElementAtNode(this.core.contentDiv, node);\r\n    };\r\n    /**\r\n     * Get BlockElement at given node\r\n     * @param node The node to create InlineElement\r\n     * @returns The BlockElement result\r\n     */\r\n    Editor.prototype.getBlockElementAtNode = function (node) {\r\n        return roosterjs_editor_dom_2.getBlockElementAtNode(this.core.contentDiv, node);\r\n    };\r\n    Editor.prototype.contains = function (arg) {\r\n        return roosterjs_editor_dom_2.contains(this.core.contentDiv, arg);\r\n    };\r\n    Editor.prototype.queryElements = function (selector, scopeOrCallback, callback) {\r\n        if (scopeOrCallback === void 0) { scopeOrCallback = 0 /* Body */; }\r\n        var scope = scopeOrCallback instanceof Function ? 0 /* Body */ : scopeOrCallback;\r\n        callback = scopeOrCallback instanceof Function ? scopeOrCallback : callback;\r\n        var range = scope == 0 /* Body */ ? null : this.getSelectionRange();\r\n        return roosterjs_editor_dom_2.queryElements(this.core.contentDiv, selector, callback, scope, range);\r\n    };\r\n    /**\r\n     * Collapse nodes within the given start and end nodes to their common ascenstor node,\r\n     * split parent nodes if necessary\r\n     * @param start The start node\r\n     * @param end The end node\r\n     * @param canSplitParent True to allow split parent node there are nodes before start or after end under the same parent\r\n     * and the returned nodes will be all nodes from start trhough end after splitting\r\n     * False to disallow split parent\r\n     * @returns When cansplitParent is true, returns all node from start through end after splitting,\r\n     * otherwise just return start and end\r\n     */\r\n    Editor.prototype.collapseNodes = function (start, end, canSplitParent) {\r\n        return roosterjs_editor_dom_2.collapseNodes(this.core.contentDiv, start, end, canSplitParent);\r\n    };\r\n    //#endregion\r\n    //#region Content API\r\n    /**\r\n     * Check whether the editor contains any visible content\r\n     * @param trim Whether trime the content string before check. Default is false\r\n     * @returns True if there's no visible content, otherwise false\r\n     */\r\n    Editor.prototype.isEmpty = function (trim) {\r\n        return roosterjs_editor_dom_2.isNodeEmpty(this.core.contentDiv, trim);\r\n    };\r\n    /**\r\n     * Get current editor content as HTML string\r\n     * @param triggerExtractContentEvent Whether trigger ExtractContent event to all plugins\r\n     * before return. Use this parameter to remove any temporary content added by plugins.\r\n     * @param includeSelectionMarker Set to true if need include selection marker inside the content.\r\n     * When restore this content, editor will set the selection to the position marked by these markers\r\n     * @returns HTML string representing current editor content\r\n     */\r\n    Editor.prototype.getContent = function (triggerExtractContentEvent, includeSelectionMarker) {\r\n        if (triggerExtractContentEvent === void 0) { triggerExtractContentEvent = true; }\r\n        if (includeSelectionMarker === void 0) { includeSelectionMarker = false; }\r\n        var contentDiv = this.core.contentDiv;\r\n        var content = contentDiv.innerHTML;\r\n        var selectionPath;\r\n        if (includeSelectionMarker &&\r\n            (selectionPath = roosterjs_editor_dom_1.getSelectionPath(contentDiv, this.getSelectionRange()))) {\r\n            content += \"<!--\" + JSON.stringify(selectionPath) + \"-->\";\r\n        }\r\n        if (triggerExtractContentEvent) {\r\n            var extractContentEvent = {\r\n                eventType: 7 /* ExtractContent */,\r\n                content: content,\r\n            };\r\n            this.triggerEvent(extractContentEvent, true /*broadcast*/);\r\n            content = extractContentEvent.content;\r\n        }\r\n        return content;\r\n    };\r\n    /**\r\n     * Get plain text content inside editor\r\n     * @returns The text content inside editor\r\n     */\r\n    Editor.prototype.getTextContent = function () {\r\n        return this.core.contentDiv.innerText;\r\n    };\r\n    /**\r\n     * Set HTML content to this editor. All existing content will be replaced. A ContentChanged event will be triggered\r\n     * @param content HTML content to set in\r\n     * @param triggerContentChangedEvent True to trigger a ContentChanged event. Default value is true\r\n     */\r\n    Editor.prototype.setContent = function (content, triggerContentChangedEvent) {\r\n        if (triggerContentChangedEvent === void 0) { triggerContentChangedEvent = true; }\r\n        var contentDiv = this.core.contentDiv;\r\n        if (contentDiv.innerHTML != content) {\r\n            contentDiv.innerHTML = content || '';\r\n            var pathComment = contentDiv.lastChild;\r\n            if (pathComment && pathComment.nodeType == 8 /* Comment */) {\r\n                try {\r\n                    var path = JSON.parse(pathComment.nodeValue);\r\n                    this.deleteNode(pathComment);\r\n                    var range = roosterjs_editor_dom_1.getRangeFromSelectionPath(contentDiv, path);\r\n                    this.select(range);\r\n                }\r\n                catch (_a) { }\r\n            }\r\n            if (triggerContentChangedEvent) {\r\n                this.triggerContentChangedEvent();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Insert HTML content into editor\r\n     * @param HTML content to insert\r\n     * @param option Insert options. Default value is:\r\n     *  position: ContentPosition.SelectionStart\r\n     *  updateCursor: true\r\n     *  replaceSelection: true\r\n     *  insertOnNewLine: false\r\n     */\r\n    Editor.prototype.insertContent = function (content, option) {\r\n        if (content) {\r\n            var allNodes = roosterjs_editor_dom_2.fromHtml(content, this.core.document);\r\n            // If it is to insert on new line, and there are more than one node in the collection, wrap all nodes with\r\n            // a parent DIV before calling insertNode on each top level sub node. Otherwise, every sub node may get wrapped\r\n            // separately to show up on its own line\r\n            if (option && option.insertOnNewLine && allNodes.length > 0) {\r\n                allNodes = [roosterjs_editor_dom_2.wrap(allNodes)];\r\n            }\r\n            for (var i = 0; i < allNodes.length; i++) {\r\n                this.insertNode(allNodes[i], option);\r\n            }\r\n        }\r\n    };\r\n    //#endregion\r\n    //#region Focus and Selection\r\n    /**\r\n     * Get current selection range from Editor.\r\n     * It does a live pull on the selection, if nothing retrieved, return whatever we have in cache.\r\n     * @returns current selection range, or null if editor never got focus before\r\n     */\r\n    Editor.prototype.getSelectionRange = function () {\r\n        return this.core.api.getSelectionRange(this.core, true /*tryGetFromCache*/);\r\n    };\r\n    /**\r\n     * Check if focus is in editor now\r\n     * @returns true if focus is in editor, otherwise false\r\n     */\r\n    Editor.prototype.hasFocus = function () {\r\n        return this.core.api.hasFocus(this.core);\r\n    };\r\n    /**\r\n     * Focus to this editor, the selection was restored to where it was before, no unexpected scroll.\r\n     */\r\n    Editor.prototype.focus = function () {\r\n        this.core.api.focus(this.core);\r\n    };\r\n    Editor.prototype.select = function (arg1, arg2, arg3, arg4) {\r\n        return this.core.api.select(this.core, arg1, arg2, arg3, arg4);\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Insert selection marker element into content, so that after doing some modification,\r\n     * we can still restore the selection as long as the selection marker is still there\r\n     * @returns The return value of callback\r\n     */\r\n    Editor.prototype.runWithSelectionMarker = function (callback, useInlineMarker) {\r\n        var selectionMarked = roosterjs_editor_dom_2.markSelection(this.core.contentDiv, this.getSelectionRange(), useInlineMarker);\r\n        try {\r\n            return callback && callback();\r\n        }\r\n        finally {\r\n            if (selectionMarked) {\r\n                // In safari the selection will be lost after inserting markers, so need to restore it\r\n                // For other browsers we just need to delete markers here\r\n                this.select(roosterjs_editor_dom_2.removeMarker(this.core.contentDiv, roosterjs_editor_dom_2.Browser.isSafari || roosterjs_editor_dom_2.Browser.isChrome /*applySelection*/));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Save the current selection in editor so that when focus again, the selection can be restored\r\n     */\r\n    Editor.prototype.saveSelectionRange = function () {\r\n        this.core.cachedSelectionRange = this.core.api.getSelectionRange(this.core, false /*tryGetFromCache*/);\r\n    };\r\n    /**\r\n     * Restore the saved selection range and clear it\r\n     */\r\n    Editor.prototype.restoreSavedRange = function () {\r\n        this.select(this.core.cachedSelectionRange);\r\n        this.core.cachedSelectionRange = null;\r\n    };\r\n    /**\r\n     * Get current focused position. Return null if editor doesn't have focus at this time.\r\n     */\r\n    Editor.prototype.getFocusedPosition = function () {\r\n        var sel = this.getSelection();\r\n        if (this.contains(sel && sel.focusNode)) {\r\n            return new roosterjs_editor_dom_2.Position(sel.focusNode, sel.focusOffset);\r\n        }\r\n        var range = this.getSelectionRange();\r\n        if (range) {\r\n            return roosterjs_editor_dom_2.Position.getStart(range);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get a rect representing the location of the cursor.\r\n     * @returns a Rect object representing cursor location\r\n     */\r\n    Editor.prototype.getCursorRect = function () {\r\n        var position = this.getFocusedPosition();\r\n        return position && roosterjs_editor_dom_2.getPositionRect(position);\r\n    };\r\n    /**\r\n     * Get an HTML element from current cursor position.\r\n     * When expectedTags is not specified, return value is the current node (if it is HTML element)\r\n     * or its parent node (if current node is a Text node).\r\n     * When expectedTags is specified, return value is the first anscestor of current node which has\r\n     * one of the expected tags.\r\n     * If no element found within editor by the given tag, return null.\r\n     * @param selector Optional, an HTML selector to find HTML element with.\r\n     * @param startFrom Start search from this node. If not specified, start from current focused position\r\n     */\r\n    Editor.prototype.getElementAtCursor = function (selector, startFrom) {\r\n        if (!startFrom) {\r\n            var position = this.getFocusedPosition();\r\n            startFrom = position && position.node;\r\n        }\r\n        return startFrom && roosterjs_editor_dom_2.findClosestElementAncestor(startFrom, this.core.contentDiv, selector);\r\n    };\r\n    //#endregion\r\n    //#region EVENT API\r\n    /**\r\n     * Add a custom DOM event handler to handle events not handled by roosterjs.\r\n     * Caller need to take the responsibility to dispose the handler properly\r\n     * @param eventName DOM event name to handle\r\n     * @param handler Handler callback\r\n     * @returns A dispose function. Call the function to dispose this event handler\r\n     */\r\n    Editor.prototype.addDomEventHandler = function (eventName, handler) {\r\n        return this.core.api.attachDomEvent(this.core, eventName, null /*pluginEventType*/, handler);\r\n    };\r\n    /**\r\n     * Trigger an event to be dispatched to all plugins\r\n     * @param pluginEvent The event object to trigger\r\n     * @param broadcast indicates if the event needs to be dispatched to all plugins\r\n     * True means to all, false means to allow exclusive handling from one plugin unless no one wants that\r\n     */\r\n    Editor.prototype.triggerEvent = function (pluginEvent, broadcast) {\r\n        if (broadcast === void 0) { broadcast = true; }\r\n        this.core.api.triggerEvent(this.core, pluginEvent, broadcast);\r\n    };\r\n    /**\r\n     * Trigger a ContentChangedEvent\r\n     * @param source Source of this event, by default is 'SetContent'\r\n     * @param data additional data for this event\r\n     */\r\n    Editor.prototype.triggerContentChangedEvent = function (source, data) {\r\n        if (source === void 0) { source = \"SetContent\" /* SetContent */; }\r\n        this.triggerEvent({\r\n            eventType: 6 /* ContentChanged */,\r\n            source: source,\r\n            data: data,\r\n        });\r\n    };\r\n    //#endregion\r\n    //#region Undo API\r\n    /**\r\n     * Undo last edit operation\r\n     */\r\n    Editor.prototype.undo = function () {\r\n        this.focus();\r\n        this.core.undo.undo();\r\n    };\r\n    /**\r\n     * Redo next edit operation\r\n     */\r\n    Editor.prototype.redo = function () {\r\n        this.focus();\r\n        this.core.undo.redo();\r\n    };\r\n    /**\r\n     * Add undo snapshot, and execute a format callback function, then add another undo snapshot, then trigger\r\n     * ContentChangedEvent with given change source.\r\n     * If this function is called nested, undo snapshot will only be added in the outside one\r\n     * @param callback The callback function to perform formatting, returns a data object which will be used as\r\n     * the data field in ContentChangedEvent if changeSource is not null.\r\n     * @param changeSource The change source to use when fire ContentChangedEvent. When the value is not null,\r\n     * a ContentChangedEvent will be fired with change source equal to this value\r\n     */\r\n    Editor.prototype.addUndoSnapshot = function (callback, changeSource) {\r\n        this.core.api.editWithUndo(this.core, callback, changeSource);\r\n    };\r\n    /**\r\n     * Perform an auto complete action in the callback, save a snapsnot of content before the action,\r\n     * and trigger ContentChangedEvent with the change source if specified\r\n     * @param callback The auto complete callback, return value will be used as data field of ContentChangedEvent\r\n     * @param changeSource Chagne source of ContentChangedEvent. If not passed, no ContentChangedEvent will be  triggered\r\n     */\r\n    Editor.prototype.performAutoComplete = function (callback, changeSource) {\r\n        this.core.corePlugin.performAutoComplete(callback, changeSource);\r\n    };\r\n    /**\r\n     * Whether there is an available undo snapshot\r\n     */\r\n    Editor.prototype.canUndo = function () {\r\n        return this.core.undo.canUndo();\r\n    };\r\n    /**\r\n     * Whether there is an available redo snapshot\r\n     */\r\n    Editor.prototype.canRedo = function () {\r\n        return this.core.undo.canRedo();\r\n    };\r\n    //#endregion\r\n    //#region Misc\r\n    /**\r\n     * Get document which contains this editor\r\n     * @returns The HTML document which contains this editor\r\n     */\r\n    Editor.prototype.getDocument = function () {\r\n        return this.core.document;\r\n    };\r\n    /**\r\n     * Get custom data related to this editor\r\n     * @param key Key of the custom data\r\n     * @param getter Getter function. If custom data for the given key doesn't exist,\r\n     * call this function to get one and store it.\r\n     * @param disposer An optional disposer function to dispose this custom data when\r\n     * dispose editor.\r\n     */\r\n    Editor.prototype.getCustomData = function (key, getter, disposer) {\r\n        return this.core.api.getCustomData(this.core, key, getter, disposer);\r\n    };\r\n    /**\r\n     * Check if editor is in IME input sequence\r\n     * @returns True if editor is in IME input sequence, otherwise false\r\n     */\r\n    Editor.prototype.isInIME = function () {\r\n        return this.core.corePlugin.isInIME();\r\n    };\r\n    /**\r\n     * Get default format of this editor\r\n     * @returns Default format object of this editor\r\n     */\r\n    Editor.prototype.getDefaultFormat = function () {\r\n        return this.core.defaultFormat;\r\n    };\r\n    /**\r\n     * Get a content traverser for the whole editor\r\n     */\r\n    Editor.prototype.getBodyTraverser = function () {\r\n        return roosterjs_editor_dom_2.ContentTraverser.createBodyTraverser(this.core.contentDiv);\r\n    };\r\n    /**\r\n     * Get a content traverser for current selection\r\n     */\r\n    Editor.prototype.getSelectionTraverser = function () {\r\n        var range = this.getSelectionRange();\r\n        return (range &&\r\n            roosterjs_editor_dom_2.ContentTraverser.createSelectionTraverser(this.core.contentDiv, this.getSelectionRange()));\r\n    };\r\n    /**\r\n     * Get a content traverser for current block element start from specified position\r\n     * @param startFrom Start position of the traverser. Default value is ContentPosition.SelectionStart\r\n     */\r\n    Editor.prototype.getBlockTraverser = function (startFrom) {\r\n        if (startFrom === void 0) { startFrom = 2 /* SelectionStart */; }\r\n        var range = this.getSelectionRange();\r\n        return (range && roosterjs_editor_dom_2.ContentTraverser.createBlockTraverser(this.core.contentDiv, range, startFrom));\r\n    };\r\n    /**\r\n     * Get a text traverser of current selection\r\n     */\r\n    Editor.prototype.getContentSearcherOfCursor = function () {\r\n        var range = this.getSelectionRange();\r\n        return range && new roosterjs_editor_dom_2.PositionContentSearcher(this.core.contentDiv, roosterjs_editor_dom_2.Position.getStart(range));\r\n    };\r\n    /**\r\n     * Run a callback function asynchronously\r\n     * @param callback The callback function to run\r\n     */\r\n    Editor.prototype.runAsync = function (callback) {\r\n        var _this = this;\r\n        var win = this.core.contentDiv.ownerDocument.defaultView || window;\r\n        win.requestAnimationFrame(function () {\r\n            if (!_this.isDisposed() && callback) {\r\n                callback();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Set DOM attribute of editor content DIV\r\n     * @param name Name of the attribute\r\n     * @param value Value of the attribute\r\n     */\r\n    Editor.prototype.setEditorDomAttribute = function (name, value) {\r\n        if (value === null) {\r\n            this.core.contentDiv.removeAttribute(name);\r\n        }\r\n        else {\r\n            this.core.contentDiv.setAttribute(name, value);\r\n        }\r\n    };\r\n    //#endregion\r\n    //#region Deprecated methods\r\n    /**\r\n     * @deprecated Use queryElements instead\r\n     */\r\n    Editor.prototype.queryContent = function (selector) {\r\n        return this.core.contentDiv.querySelectorAll(selector);\r\n    };\r\n    /**\r\n     * Get current selection\r\n     * @return current selection object\r\n     */\r\n    Editor.prototype.getSelection = function () {\r\n        return this.core.document.defaultView.getSelection();\r\n    };\r\n    /**\r\n     * @deprecated Use select() instead\r\n     * Update selection in editor\r\n     * @param selectionRange The selection range to update to\r\n     * @returns true if selection range is updated. Otherwise false.\r\n     */\r\n    Editor.prototype.updateSelection = function (selectionRange) {\r\n        return this.select(selectionRange);\r\n    };\r\n    /**\r\n     * @deprecated Use editWithUndo() instead\r\n     */\r\n    Editor.prototype.runWithoutAddingUndoSnapshot = function (callback) {\r\n        try {\r\n            this.core.currentUndoSnapshot = this.getContent(false, true);\r\n            callback();\r\n        }\r\n        finally {\r\n            this.core.currentUndoSnapshot = null;\r\n        }\r\n    };\r\n    /**\r\n     * @deprecated Use getBodyTraverser, getSelectionTraverser, getBlockTraverser instead\r\n     */\r\n    Editor.prototype.getContentTraverser = function (scope, position) {\r\n        if (position === void 0) { position = 2 /* SelectionStart */; }\r\n        switch (scope) {\r\n            case 0 /* Block */:\r\n                return this.getBlockTraverser(position);\r\n            case 1 /* Selection */:\r\n                return this.getSelectionTraverser();\r\n            case 2 /* Body */:\r\n                return this.getBodyTraverser();\r\n        }\r\n        return null;\r\n    };\r\n    return Editor;\r\n}());\r\nexports.default = Editor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar attachDomEvent_1 = require(\"../coreAPI/attachDomEvent\");\r\nvar CorePlugin_1 = require(\"./CorePlugin\");\r\nvar editWithUndo_1 = require(\"../coreAPI/editWithUndo\");\r\nvar focus_1 = require(\"../coreAPI/focus\");\r\nvar getCustomData_1 = require(\"../coreAPI/getCustomData\");\r\nvar getSelectionRange_1 = require(\"../coreAPI/getSelectionRange\");\r\nvar hasFocus_1 = require(\"../coreAPI/hasFocus\");\r\nvar insertNode_1 = require(\"../coreAPI/insertNode\");\r\nvar select_1 = require(\"../coreAPI/select\");\r\nvar triggerEvent_1 = require(\"../coreAPI/triggerEvent\");\r\nvar Undo_1 = require(\"../undo/Undo\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nfunction createEditorCore(contentDiv, options) {\r\n    var undo = options.undo || new Undo_1.default();\r\n    var corePlugin = new CorePlugin_1.default(contentDiv, options.disableRestoreSelectionOnFocus);\r\n    return {\r\n        contentDiv: contentDiv,\r\n        document: contentDiv.ownerDocument,\r\n        defaultFormat: calcDefaultFormat(contentDiv, options.defaultFormat),\r\n        corePlugin: corePlugin,\r\n        undo: undo,\r\n        currentUndoSnapshot: null,\r\n        customData: {},\r\n        cachedSelectionRange: null,\r\n        plugins: [corePlugin].concat((options.plugins || []), [undo]).filter(function (plugin) { return !!plugin; }),\r\n        api: createCoreApiMap(options.coreApiOverride),\r\n        defaultApi: createCoreApiMap(),\r\n    };\r\n}\r\nexports.default = createEditorCore;\r\nfunction calcDefaultFormat(node, baseFormat) {\r\n    if (baseFormat && Object.keys(baseFormat).length === 0) {\r\n        return {};\r\n    }\r\n    baseFormat = baseFormat || {};\r\n    var styles = roosterjs_editor_dom_1.getComputedStyles(node);\r\n    return {\r\n        fontFamily: baseFormat.fontFamily || styles[0],\r\n        fontSize: baseFormat.fontSize || styles[1],\r\n        textColor: baseFormat.textColor || styles[2],\r\n        backgroundColor: baseFormat.backgroundColor || '',\r\n        bold: baseFormat.bold,\r\n        italic: baseFormat.italic,\r\n        underline: baseFormat.underline,\r\n    };\r\n}\r\nfunction createCoreApiMap(map) {\r\n    map = map || {};\r\n    return {\r\n        attachDomEvent: map.attachDomEvent || attachDomEvent_1.default,\r\n        editWithUndo: map.editWithUndo || editWithUndo_1.default,\r\n        focus: map.focus || focus_1.default,\r\n        getCustomData: map.getCustomData || getCustomData_1.default,\r\n        getSelectionRange: map.getSelectionRange || getSelectionRange_1.default,\r\n        hasFocus: map.hasFocus || hasFocus_1.default,\r\n        insertNode: map.insertNode || insertNode_1.default,\r\n        select: map.select || select_1.default,\r\n        triggerEvent: map.triggerEvent || triggerEvent_1.default,\r\n    };\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar attachDomEvent = function (core, eventName, pluginEventType, beforeDispatch) {\r\n    var onEvent = function (event) {\r\n        if (beforeDispatch) {\r\n            beforeDispatch(event);\r\n        }\r\n        if (pluginEventType != null) {\r\n            core.api.triggerEvent(core, {\r\n                eventType: pluginEventType,\r\n                rawEvent: event,\r\n            }, false /*broadcast*/);\r\n        }\r\n    };\r\n    core.contentDiv.addEventListener(eventName, onEvent);\r\n    return function () {\r\n        core.contentDiv.removeEventListener(eventName, onEvent);\r\n    };\r\n};\r\nexports.default = attachDomEvent;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar editWithUndo = function (core, callback, changeSource) {\r\n    var isNested = core.currentUndoSnapshot !== null;\r\n    var data;\r\n    var currentSnapshot;\r\n    if (!isNested) {\r\n        core.currentUndoSnapshot = core.undo.addUndoSnapshot();\r\n    }\r\n    try {\r\n        if (callback) {\r\n            var range = core.api.getSelectionRange(core, true /*tryGetFromCache*/);\r\n            data = callback(range && roosterjs_editor_dom_1.Position.getStart(range).normalize(), range && roosterjs_editor_dom_1.Position.getEnd(range).normalize(), core.currentUndoSnapshot);\r\n            if (!isNested) {\r\n                currentSnapshot = core.undo.addUndoSnapshot();\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        if (!isNested) {\r\n            core.currentUndoSnapshot = null;\r\n        }\r\n    }\r\n    if (callback && changeSource) {\r\n        var event_1 = {\r\n            eventType: 6 /* ContentChanged */,\r\n            source: changeSource,\r\n            lastSnapshot: currentSnapshot,\r\n            data: data,\r\n        };\r\n        core.api.triggerEvent(core, event_1, true /*broadcast*/);\r\n    }\r\n};\r\nexports.default = editWithUndo;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar focus = function (core) {\r\n    if (!core.api.hasFocus(core) || !core.api.getSelectionRange(core, false /*tryGetFromCache*/)) {\r\n        // Focus (document.activeElement indicates) and selection are mostly in sync, but could be out of sync in some extreme cases.\r\n        // i.e. if you programmatically change window selection to point to a non-focusable DOM element (i.e. tabindex=-1 etc.).\r\n        // On Chrome/Firefox, it does not change document.activeElement. On Edge/IE, it change document.activeElement to be body\r\n        // Although on Chrome/Firefox, document.activeElement points to editor, you cannot really type which we don't want (no cursor).\r\n        // So here we always do a live selection pull on DOM and make it point in Editor. The pitfall is, the cursor could be reset\r\n        // to very begin to of editor since we don't really have last saved selection (created on blur which does not fire in this case).\r\n        // It should be better than the case you cannot type\r\n        if (!core.cachedSelectionRange || !core.api.select(core, core.cachedSelectionRange)) {\r\n            var node = roosterjs_editor_dom_1.getFirstLeafNode(core.contentDiv) || core.contentDiv;\r\n            core.api.select(core, node, 0 /* Begin */);\r\n        }\r\n    }\r\n    // remember to clear cachedSelectionRange\r\n    core.cachedSelectionRange = null;\r\n    // This is more a fallback to ensure editor gets focus if it didn't manage to move focus to editor\r\n    if (!core.api.hasFocus(core)) {\r\n        core.contentDiv.focus();\r\n    }\r\n};\r\nexports.default = focus;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar getCustomData = function (core, key, getter, disposer) {\r\n    return (core.customData[key] = core.customData[key] || {\r\n        value: getter(),\r\n        disposer: disposer,\r\n    }).value;\r\n};\r\nexports.default = getCustomData;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar getSelectionRange = function (core, tryGetFromCache) {\r\n    var result = null;\r\n    if (!tryGetFromCache || core.api.hasFocus(core)) {\r\n        var selection = core.document.defaultView.getSelection();\r\n        if (selection && selection.rangeCount > 0) {\r\n            var range = selection.getRangeAt(0);\r\n            if (roosterjs_editor_dom_1.contains(core.contentDiv, range)) {\r\n                result = range;\r\n            }\r\n        }\r\n    }\r\n    if (!result && tryGetFromCache) {\r\n        result = core.cachedSelectionRange;\r\n    }\r\n    return result;\r\n};\r\nexports.default = getSelectionRange;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar insertNode = function (core, node, option) {\r\n    var position = option ? option.position : 2 /* SelectionStart */;\r\n    var updateCursor = option ? option.updateCursor : true;\r\n    var replaceSelection = option ? option.replaceSelection : true;\r\n    var insertOnNewLine = option ? option.insertOnNewLine : false;\r\n    var contentDiv = core.contentDiv;\r\n    if (updateCursor) {\r\n        core.api.focus(core);\r\n    }\r\n    switch (position) {\r\n        case 0 /* Begin */:\r\n        case 1 /* End */:\r\n            var isBegin = position == 0 /* Begin */;\r\n            var block = roosterjs_editor_dom_1.getFirstLastBlockElement(contentDiv, isBegin);\r\n            var insertedNode = void 0;\r\n            if (block) {\r\n                var refNode = isBegin ? block.getStartNode() : block.getEndNode();\r\n                var refParentNode = refNode.parentNode;\r\n                if (insertOnNewLine ||\r\n                    refNode.nodeType == 3 /* Text */ ||\r\n                    roosterjs_editor_dom_1.isVoidHtmlElement(refNode)) {\r\n                    // For insert on new line, or refNode is text or void html element (HR, BR etc.)\r\n                    // which cannot have children, i.e. <div>hello<br>world</div>. 'hello', 'world' are the\r\n                    // first and last node. Insert before 'hello' or after 'world', but still inside DIV\r\n                    insertedNode = refParentNode.insertBefore(node, isBegin ? refNode : refNode.nextSibling);\r\n                }\r\n                else {\r\n                    // if the refNode can have child, use appendChild (which is like to insert as first/last child)\r\n                    // i.e. <div>hello</div>, the content will be inserted before/after hello\r\n                    insertedNode = refNode.insertBefore(node, isBegin ? refNode.firstChild : null);\r\n                }\r\n            }\r\n            else {\r\n                // No first block, this can happen when editor is empty. Use appendChild to insert the content in contentDiv\r\n                insertedNode = contentDiv.appendChild(node);\r\n            }\r\n            // Final check to see if the inserted node is a block. If not block and the ask is to insert on new line,\r\n            // add a DIV wrapping\r\n            if (insertedNode && insertOnNewLine && !roosterjs_editor_dom_1.isBlockElement(insertedNode)) {\r\n                roosterjs_editor_dom_1.wrap(insertedNode);\r\n            }\r\n            break;\r\n        case 2 /* SelectionStart */:\r\n            var range = core.api.getSelectionRange(core, true /*tryGetFromCache*/);\r\n            if (range) {\r\n                // if to replace the selection and the selection is not collapsed, remove the the content at selection first\r\n                if (replaceSelection && !range.collapsed) {\r\n                    range.deleteContents();\r\n                }\r\n                // Create a clone (backup) for the selection first as we may need to restore to it later\r\n                var clonedRange = range.cloneRange();\r\n                var position_1 = roosterjs_editor_dom_1.Position.getStart(range).normalize();\r\n                var blockElement = roosterjs_editor_dom_1.getBlockElementAtNode(contentDiv, position_1.node);\r\n                if (blockElement) {\r\n                    var endNode = blockElement.getEndNode();\r\n                    if (insertOnNewLine) {\r\n                        // Adjust the insertion point\r\n                        // option.insertOnNewLine means to insert on a block after the selection, not really right at the selection\r\n                        // This is commonly used when users want to insert signature. They could place cursor somewhere mid of a line\r\n                        // and insert signature, they actually want signature to be inserted the line after the selection\r\n                        range.setEndAfter(endNode);\r\n                        range.collapse(false /*toStart*/);\r\n                    }\r\n                    else {\r\n                        range = preprocessNode(core, range, node, endNode);\r\n                    }\r\n                }\r\n                var nodeForCursor = node.nodeType == 11 /* DocumentFragment */ ? node.lastChild : node;\r\n                range.insertNode(node);\r\n                if (updateCursor && nodeForCursor) {\r\n                    core.api.select(core, new roosterjs_editor_dom_1.Position(nodeForCursor, -3 /* After */).normalize());\r\n                }\r\n                else {\r\n                    core.api.select(core, clonedRange);\r\n                }\r\n            }\r\n            break;\r\n        case 3 /* Outside */:\r\n            core.contentDiv.parentNode.insertBefore(node, contentDiv.nextSibling);\r\n            break;\r\n    }\r\n    return true;\r\n};\r\nexports.default = insertNode;\r\nfunction preprocessNode(core, range, nodeToInsert, currentNode) {\r\n    var rootNodeToInsert = nodeToInsert;\r\n    if (rootNodeToInsert.nodeType == 11 /* DocumentFragment */) {\r\n        var rootNodes = [].slice.call(rootNodeToInsert.childNodes).filter(function (n) { return roosterjs_editor_dom_1.getTagOfNode(n) != 'BR'; });\r\n        rootNodeToInsert = rootNodes.length == 1 ? rootNodes[0] : null;\r\n    }\r\n    var tag = roosterjs_editor_dom_1.getTagOfNode(rootNodeToInsert);\r\n    if ((tag == 'OL' || tag == 'UL') && roosterjs_editor_dom_1.getTagOfNode(rootNodeToInsert.firstChild) == 'LI') {\r\n        var shouldInsertListAsText = !rootNodeToInsert.firstChild.nextSibling &&\r\n            roosterjs_editor_dom_1.getTagOfNode(rootNodeToInsert.nextSibling) != 'BR';\r\n        if (roosterjs_editor_dom_1.getTagOfNode(rootNodeToInsert.nextSibling) == 'BR' && rootNodeToInsert.parentNode) {\r\n            rootNodeToInsert.parentNode.removeChild(rootNodeToInsert.nextSibling);\r\n        }\r\n        if (shouldInsertListAsText) {\r\n            roosterjs_editor_dom_1.unwrap(rootNodeToInsert.firstChild);\r\n            roosterjs_editor_dom_1.unwrap(rootNodeToInsert);\r\n        }\r\n        else {\r\n            var listNode = currentNode;\r\n            while (roosterjs_editor_dom_1.getTagOfNode(listNode.parentNode) != tag &&\r\n                roosterjs_editor_dom_1.contains(core.contentDiv, listNode)) {\r\n                listNode = listNode.parentNode;\r\n            }\r\n            if (roosterjs_editor_dom_1.getTagOfNode(listNode.parentNode) == tag) {\r\n                if (roosterjs_editor_dom_1.isNodeEmpty(listNode) ||\r\n                    roosterjs_editor_dom_1.isPositionAtBeginningOf(roosterjs_editor_dom_1.Position.getStart(range), listNode)) {\r\n                    range.setEndBefore(listNode);\r\n                }\r\n                else {\r\n                    range.setEndAfter(listNode);\r\n                }\r\n                range.collapse(false /*toStart*/);\r\n                roosterjs_editor_dom_1.unwrap(rootNodeToInsert);\r\n            }\r\n        }\r\n    }\r\n    if (roosterjs_editor_dom_1.getTagOfNode(currentNode) == 'P') {\r\n        // Insert into a P tag may cause issues when the inserted content contains any block element.\r\n        // Change P tag to DIV to make sure it works well\r\n        var start = roosterjs_editor_dom_1.Position.getStart(range).normalize();\r\n        var end = roosterjs_editor_dom_1.Position.getEnd(range).normalize();\r\n        var div = roosterjs_editor_dom_1.changeElementTag(currentNode, 'div');\r\n        var newRange = roosterjs_editor_dom_1.createRange(start, end);\r\n        if (start.node != div && end.node != div && roosterjs_editor_dom_1.contains(core.contentDiv, newRange)) {\r\n            range = newRange;\r\n        }\r\n    }\r\n    if (roosterjs_editor_dom_1.isVoidHtmlElement(range.endContainer)) {\r\n        range.setEndBefore(range.endContainer);\r\n    }\r\n    return range;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar hasFocus_1 = require(\"./hasFocus\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar select = function (core, arg1, arg2, arg3, arg4) {\r\n    var range;\r\n    if (!arg1) {\r\n        return false;\r\n    }\r\n    else if (arg1 instanceof Range) {\r\n        range = arg1;\r\n    }\r\n    else {\r\n        if (arg1.node) {\r\n            range = roosterjs_editor_dom_1.createRange(new roosterjs_editor_dom_1.Position(arg1), arg2 && arg2.node ? new roosterjs_editor_dom_1.Position(arg2) : null);\r\n        }\r\n        else if (arg1 instanceof Node) {\r\n            var start = void 0;\r\n            var end = void 0;\r\n            if (arg2 == undefined) {\r\n                start = new roosterjs_editor_dom_1.Position(arg1, -2 /* Before */);\r\n                end = new roosterjs_editor_dom_1.Position(arg1, -3 /* After */);\r\n            }\r\n            else {\r\n                start = new roosterjs_editor_dom_1.Position(arg1, arg2);\r\n                end =\r\n                    arg3 instanceof Node\r\n                        ? new roosterjs_editor_dom_1.Position(arg3, arg4)\r\n                        : null;\r\n            }\r\n            range = roosterjs_editor_dom_1.createRange(start, end);\r\n        }\r\n    }\r\n    if (roosterjs_editor_dom_1.contains(core.contentDiv, range)) {\r\n        var selection = core.document.defaultView.getSelection();\r\n        if (selection) {\r\n            var needAddRange = true;\r\n            if (selection.rangeCount > 0) {\r\n                // Workaround IE exception 800a025e\r\n                try {\r\n                    // Do not remove/add range if current selection is the same with target range\r\n                    // Without this check, execCommand() may fail in Edge since we changed the selection\r\n                    var currentRange = roosterjs_editor_dom_1.Browser.isEdge && selection.rangeCount == 1\r\n                        ? selection.getRangeAt(0)\r\n                        : null;\r\n                    if (currentRange &&\r\n                        currentRange.startContainer == range.startContainer &&\r\n                        currentRange.startOffset == range.startOffset &&\r\n                        currentRange.endContainer == range.endContainer &&\r\n                        currentRange.endOffset == range.endOffset) {\r\n                        needAddRange = false;\r\n                    }\r\n                    else {\r\n                        selection.removeAllRanges();\r\n                    }\r\n                }\r\n                catch (e) { }\r\n            }\r\n            if (needAddRange) {\r\n                selection.addRange(range);\r\n            }\r\n            if (!hasFocus_1.default(core)) {\r\n                core.cachedSelectionRange = range;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nexports.default = select;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar triggerEvent = function (core, pluginEvent, broadcast) {\r\n    if (broadcast || !core.plugins.some(function (plugin) { return handledExclusively(pluginEvent, plugin); })) {\r\n        core.plugins.forEach(function (plugin) {\r\n            if (plugin.onPluginEvent) {\r\n                plugin.onPluginEvent(pluginEvent);\r\n            }\r\n        });\r\n    }\r\n};\r\nfunction handledExclusively(event, plugin) {\r\n    if (plugin.onPluginEvent &&\r\n        plugin.willHandleEventExclusively &&\r\n        plugin.willHandleEventExclusively(event)) {\r\n        plugin.onPluginEvent(event);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.default = triggerEvent;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * @deprecated\r\n */\r\nvar browserData = roosterjs_editor_dom_1.Browser;\r\nvar getBrowserData = roosterjs_editor_dom_1.getBrowserInfo;\r\nexports.getBrowserData = getBrowserData;\r\nexports.default = browserData;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar cacheGetEventData_1 = require(\"./cacheGetEventData\");\r\nvar clearEventDataCache_1 = require(\"./clearEventDataCache\");\r\nvar CONTENTSEARCHER_KEY = 'CONTENTSEARCHER';\r\n/**\r\n * Try get existing PositionContentSearcher from an event. If there isn't one, create a new one from editor.\r\n * @param event The plugin event, it stores the event cached data for looking up.\r\n * If passed as null, we will create a new PositionContentSearcher\r\n * @param editor The editor instance\r\n * @returns The PositionContentSearcher object\r\n */\r\nfunction cacheGetContentSearcher(event, editor) {\r\n    return cacheGetEventData_1.default(event, CONTENTSEARCHER_KEY, function () { return editor.getContentSearcherOfCursor(); });\r\n}\r\nexports.cacheGetContentSearcher = cacheGetContentSearcher;\r\n/**\r\n * Clear the PositionContentSearcher in a plugin event.\r\n * This is called when the content is changed\r\n * @param event The plugin event\r\n */\r\nfunction clearContentSearcherCache(event) {\r\n    clearEventDataCache_1.default(event, CONTENTSEARCHER_KEY);\r\n}\r\nexports.clearContentSearcherCache = clearContentSearcherCache;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar cacheGetEventData_1 = require(\"./cacheGetEventData\");\r\nvar CACHE_KEY_PREFIX = 'GET_ELEMENT_AT_CURSOR_';\r\n/**\r\n * Get an HTML element at cursor from event cache if it exists.\r\n * If an selector is specified, return the nearest ancestor of current node\r\n * which matches the selector, or null if no match found in editor.\r\n * @param editor The editor instance\r\n * @param event Event object to get cached object from\r\n * @param selector The expected selector. If null, return the element at cursor\r\n * @returns The element at cursor or the nearest ancestor with the tag name is specified\r\n */\r\nfunction cacheGetElementAtCursor(editor, event, selector) {\r\n    return cacheGetEventData_1.default(event, CACHE_KEY_PREFIX + selector, function () {\r\n        return editor.getElementAtCursor(selector);\r\n    });\r\n}\r\nexports.default = cacheGetElementAtCursor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @deprecated Use Editor.getContent(false, true) instead\r\n * Build undo snapshot\r\n */\r\nfunction buildSnapshot(editor) {\r\n    return editor.getContent(false /*triggerExtractContentEvent*/, true /*markSelection*/);\r\n}\r\nexports.buildSnapshot = buildSnapshot;\r\n/**\r\n * @deprecated Use Editor.setContent() instead\r\n * Restore a snapshot\r\n */\r\nfunction restoreSnapshot(editor, snapshot) {\r\n    editor.setContent(snapshot);\r\n}\r\nexports.restoreSnapshot = restoreSnapshot;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Insert an image to editor at current selection\r\n * @param editor The editor instance\r\n * @param imageFile The image file. There are at least 3 ways to obtain the file object:\r\n * From local file, from clipboard data, from drag-and-drop\r\n */\r\nfunction insertImage(editor, imageFile) {\r\n    var reader = new FileReader();\r\n    reader.onload = function (event) {\r\n        if (!editor.isDisposed()) {\r\n            editor.addUndoSnapshot(function () {\r\n                var image = editor.getDocument().createElement('img');\r\n                image.src = event.target.result;\r\n                image.style.maxWidth = '100%';\r\n                editor.insertNode(image);\r\n            }, \"Format\" /* Format */);\r\n        }\r\n    };\r\n    reader.readAsDataURL(imageFile);\r\n}\r\nexports.default = insertImage;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar formatTable_1 = require(\"./formatTable\");\r\n/**\r\n * Insert table into editor at current selection\r\n * @param editor The editor instance\r\n * @param columns Number of columns in table, it also controls the default table cell width:\r\n * if columns <= 4, width = 120px; if columns <= 6, width = 100px; else width = 70px\r\n * @param rows Number of rows in table\r\n * @param format (Optional) The table format. If not passed, the default format will be applied:\r\n * background color: #FFF; border color: #ABABAB\r\n */\r\nfunction insertTable(editor, columns, rows, format) {\r\n    var document = editor.getDocument();\r\n    var fragment = document.createDocumentFragment();\r\n    var table = document.createElement('table');\r\n    fragment.appendChild(table);\r\n    table.cellSpacing = '0';\r\n    table.cellPadding = '1';\r\n    for (var i = 0; i < rows; i++) {\r\n        var tr = document.createElement('tr');\r\n        table.appendChild(tr);\r\n        for (var j = 0; j < columns; j++) {\r\n            var td = document.createElement('td');\r\n            tr.appendChild(td);\r\n            td.appendChild(document.createElement('br'));\r\n            td.style.width = getTableCellWidth(columns);\r\n        }\r\n    }\r\n    editor.focus();\r\n    editor.addUndoSnapshot(function () {\r\n        editor.insertNode(fragment);\r\n        formatTable_1.default(editor, format || {\r\n            bgColorEven: '#FFF',\r\n            bgColorOdd: '#FFF',\r\n            topBorderColor: '#ABABAB',\r\n            bottomBorderColor: '#ABABAB',\r\n            verticalBorderColor: '#ABABAB',\r\n        }, table);\r\n        editor.runAsync(function () { return editor.select(table, -3 /* After */); });\r\n    }, \"Format\" /* Format */);\r\n}\r\nexports.default = insertTable;\r\nfunction getTableCellWidth(columns) {\r\n    if (columns <= 4) {\r\n        return '120px';\r\n    }\r\n    else if (columns <= 6) {\r\n        return '100px';\r\n    }\r\n    else {\r\n        return '70px';\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * Edit table with given operation. If there is no table at cursor then no op.\r\n * @param editor The editor instance\r\n * @param operation Table operation\r\n */\r\nfunction editTable(editor, operation) {\r\n    var td = editor.getElementAtCursor('TD,TH');\r\n    if (td) {\r\n        editor.addUndoSnapshot(function (start, end) {\r\n            var vtable = new roosterjs_editor_dom_1.VTable(td);\r\n            vtable.edit(operation);\r\n            vtable.writeBack();\r\n            editor.focus();\r\n            if (!editor.select(start, end)) {\r\n                editor.select(editor.contains(td) ? td : vtable.getCurrentTd());\r\n            }\r\n        }, \"Format\" /* Format */);\r\n    }\r\n}\r\nexports.default = editTable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * Remove link at selection. If no links at selection, do nothing.\r\n * If selection contains multiple links, all of the link styles will be removed.\r\n * If only part of a link is selected, the whole link style will be removed.\r\n * @param editor The editor instance\r\n */\r\nfunction removeLink(editor) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(function (start, end) {\r\n        editor.queryElements('a[href]', 1 /* OnSelection */, roosterjs_editor_dom_1.unwrap);\r\n        editor.select(start, end);\r\n    }, \"Format\" /* Format */);\r\n}\r\nexports.default = removeLink;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar execCommand_1 = require(\"../utils/execCommand\");\r\n/**\r\n * Set content alignment\r\n * @param editor The editor instance\r\n * @param alignment The alignment option:\r\n * Alignment.Center, Alignment.Left, Alignment.Right\r\n */\r\nfunction setAlignment(editor, alignment) {\r\n    var command = \"justifyLeft\" /* JustifyLeft */;\r\n    var align = 'left';\r\n    if (alignment == 1 /* Center */) {\r\n        command = \"justifyCenter\" /* JustifyCenter */;\r\n        align = 'center';\r\n    }\r\n    else if (alignment == 2 /* Right */) {\r\n        command = \"justifyRight\" /* JustifyRight */;\r\n        align = 'right';\r\n    }\r\n    editor.addUndoSnapshot(function () {\r\n        execCommand_1.default(editor, command);\r\n        editor.queryElements('[align]', 1 /* OnSelection */, function (node) { return (node.style.textAlign = align); });\r\n    }, \"Format\" /* Format */);\r\n}\r\nexports.default = setAlignment;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar collapseSelectedBlocks_1 = require(\"../utils/collapseSelectedBlocks\");\r\n/**\r\n * Change direction for the blocks/paragraph at selection\r\n * @param editor The editor instance\r\n * @param direction The direction option:\r\n * Direction.LeftToRight refers to 'ltr', Direction.RightToLeft refers to 'rtl'\r\n */\r\nfunction setDirection(editor, direction) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(function (start, end) {\r\n        collapseSelectedBlocks_1.default(editor, function (element) {\r\n            element.setAttribute('dir', direction == 0 /* LeftToRight */ ? 'ltr' : 'rtl');\r\n            element.style.textAlign = direction == 0 /* LeftToRight */ ? 'left' : 'right';\r\n        });\r\n        editor.select(start, end);\r\n    }, \"Format\" /* Format */);\r\n}\r\nexports.default = setDirection;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Set image alt text for all selected images at selection. If no images is contained\r\n * in selection, do nothing.\r\n * The alt attribute provides alternative information for an image if a user for some reason\r\n * cannot view it (because of slow connection, an error in the src attribute, or if the user\r\n * uses a screen reader). See https://www.w3schools.com/tags/att_img_alt.asp\r\n * @param editor The editor instance\r\n * @param altText The image alt text\r\n */\r\nfunction setImageAltText(editor, altText) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(function () {\r\n        editor.queryElements('img', 1 /* OnSelection */, function (node) {\r\n            return node.setAttribute('alt', altText);\r\n        });\r\n    }, \"Format\" /* Format */);\r\n}\r\nexports.default = setImageAltText;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar processList_1 = require(\"../utils/processList\");\r\n/**\r\n * Set indentation at selection\r\n * If selection contains bullet/numbering list, increase/decrease indentation will\r\n * increase/decrease the list level by one.\r\n * @param editor The editor instance\r\n * @param indentation The indentation option:\r\n * Indentation.Increase to increase indentation or Indentation.Decrease to decrease indentation\r\n */\r\nfunction setIndentation(editor, indentation) {\r\n    var command = indentation == 0 /* Increase */ ? \"indent\" /* Indent */ : \"outdent\" /* Outdent */;\r\n    editor.addUndoSnapshot(function () {\r\n        editor.focus();\r\n        var listNode = editor.getElementAtCursor('OL,UL');\r\n        var newNode;\r\n        if (listNode) {\r\n            // There is already list node, setIndentation() will increase/decrease the list level,\r\n            // so we need to process the list when change indentation\r\n            newNode = processList_1.default(editor, command);\r\n        }\r\n        else {\r\n            // No existing list node, browser will create <Blockquote> node for indentation.\r\n            // We need to set top and bottom margin to 0 to avoid unnecessary spaces\r\n            editor.getDocument().execCommand(command, false, null);\r\n            editor.queryElements('BLOCKQUOTE', 1 /* OnSelection */, function (node) {\r\n                newNode = newNode || node;\r\n                node.style.marginTop = '0px';\r\n                node.style.marginBottom = '0px';\r\n            });\r\n        }\r\n        return newNode;\r\n    }, \"Format\" /* Format */);\r\n}\r\nexports.default = setIndentation;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar processList_1 = require(\"../utils/processList\");\r\n/**\r\n * Toggle bullet at selection\r\n * If selection contains bullet in deep level, toggle bullet will decrease the bullet level by one\r\n * If selection contains number list, toggle bullet will convert the number list into bullet list\r\n * If selection contains both bullet/numbering and normal text, the behavior is decided by corresponding\r\n * browser execCommand API\r\n * @param editor The editor instance\r\n */\r\nfunction toggleBullet(editor) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(function () { return processList_1.default(editor, \"insertUnorderedList\" /* InsertUnorderedList */); }, \"Format\" /* Format */);\r\n}\r\nexports.default = toggleBullet;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar processList_1 = require(\"../utils/processList\");\r\n/**\r\n * Toggle numbering at selection\r\n * If selection contains numbering in deep level, toggle numbering will decrease the numbering level by one\r\n * If selection contains bullet list, toggle numbering will convert the bullet list into number list\r\n * If selection contains both bullet/numbering and normal text, the behavior is decided by corresponding\r\n * realization of browser execCommand API\r\n * @param editor The editor instance\r\n */\r\nfunction toggleNumbering(editor) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(function () { return processList_1.default(editor, \"insertOrderedList\" /* InsertOrderedList */); }, \"Format\" /* Format */);\r\n}\r\nexports.default = toggleNumbering;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar toggleTagCore_1 = require(\"../utils/toggleTagCore\");\r\nvar BLOCKQUOTE_TAG = 'blockquote';\r\nvar DEFAULT_STYLER = function (element) {\r\n    element.style.borderLeft = '3px solid';\r\n    element.style.borderColor = '#C8C8C8';\r\n    element.style.paddingLeft = '10px';\r\n    element.style.color = '#666666';\r\n};\r\n/**\r\n * Toggle blockquote at selection, if selection already contains any blockquoted elements,\r\n * the blockquoted elements will be unblockquoted and other elements will take no affect\r\n * @param editor The editor instance\r\n * @param styler (Optional) The custom styler for setting the style for the blockquote element\r\n */\r\nfunction toggleBlockQuote(editor, styler) {\r\n    toggleTagCore_1.default(editor, BLOCKQUOTE_TAG, styler || DEFAULT_STYLER);\r\n}\r\nexports.default = toggleBlockQuote;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar toggleTagCore_1 = require(\"../utils/toggleTagCore\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar PRE_TAG = 'pre';\r\nvar CODE_TAG = 'code';\r\nvar CODE_NODE_TAG = 'CODE';\r\n/**\r\n * Toggle code block at selection, if selection already contains any code blocked elements,\r\n * the code block elements will be no longer be code blocked and other elements will take no affect\r\n * @param editor The editor instance\r\n * @param styler (Optional) The custom styler for setting the style for the code block element\r\n */\r\nfunction toggleCodeBlock(editor, styler) {\r\n    toggleTagCore_1.default(editor, PRE_TAG, styler, wrapFunction, unwrapFunction);\r\n}\r\nexports.default = toggleCodeBlock;\r\nfunction wrapFunction(nodes) {\r\n    var codeBlock = roosterjs_editor_dom_1.wrap(nodes, CODE_TAG);\r\n    return roosterjs_editor_dom_1.wrap(codeBlock, PRE_TAG);\r\n}\r\nfunction unwrapFunction(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    var firstChild = node.childNodes[0];\r\n    if (node.childNodes.length == 1 && roosterjs_editor_dom_1.getTagOfNode(firstChild) == CODE_NODE_TAG) {\r\n        roosterjs_editor_dom_1.unwrap(firstChild);\r\n    }\r\n    return roosterjs_editor_dom_1.unwrap(node);\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar execCommand_1 = require(\"../utils/execCommand\");\r\n/**\r\n * Toggle strikethrough at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only strikethrough text, the strikethrough style will be removed\r\n * If selection contains only normal text, strikethrough style will be added to the whole selected text\r\n * If selection contains both strikethrough and normal text, strikethrough stlye will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nfunction toggleStrikethrough(editor) {\r\n    execCommand_1.default(editor, \"strikeThrough\" /* StrikeThrough */);\r\n}\r\nexports.default = toggleStrikethrough;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar execCommand_1 = require(\"../utils/execCommand\");\r\n/**\r\n * Toggle subscript at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only subscript text, the subscript style will be removed\r\n * If selection contains only normal text, subscript style will be added to the whole selected text\r\n * If selection contains both subscript and normal text, the subscript style will be removed from whole selected text\r\n * If selection contains any superscript text, the behavior is determined by corresponding realization of browser\r\n * execCommand API\r\n * @param editor The editor instance\r\n */\r\nfunction toggleSubscript(editor) {\r\n    execCommand_1.default(editor, \"subscript\" /* Subscript */);\r\n}\r\nexports.default = toggleSubscript;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar execCommand_1 = require(\"../utils/execCommand\");\r\n/**\r\n * Toggle superscript at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only superscript text, the superscript style will be removed\r\n * If selection contains only normal text, superscript style will be added to the whole selected text\r\n * If selection contains both superscript and normal text, the superscript style will be removed from whole selected text\r\n * If selection contains any subscript text, the behavior is determined by corresponding realization of browser\r\n * execCommand API\r\n * @param editor The editor instance\r\n */\r\nfunction toggleSuperscript(editor) {\r\n    execCommand_1.default(editor, \"superscript\" /* Superscript */);\r\n}\r\nexports.default = toggleSuperscript;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * Toggle header at selection\r\n * @param editor The editor instance\r\n * @param level The header level, can be a number from 0 to 6, in which 1 ~ 6 refers to\r\n * the HTML header element <H1> to <H6>, 0 means no header\r\n * if passed in param is outside the range, will be rounded to nearest number in the range\r\n */\r\nfunction toggleHeader(editor, level) {\r\n    level = Math.min(Math.max(Math.round(level), 0), 6);\r\n    editor.addUndoSnapshot(function () {\r\n        editor.focus();\r\n        var wrapped = false;\r\n        editor.queryElements('H1,H2,H3,H4,H5,H6', 1 /* OnSelection */, function (header) {\r\n            if (!wrapped) {\r\n                editor.getDocument().execCommand(\"formatBlock\" /* FormatBlock */, false, '<DIV>');\r\n                wrapped = true;\r\n            }\r\n            var div = editor.getDocument().createElement('div');\r\n            while (header.firstChild) {\r\n                div.appendChild(header.firstChild);\r\n            }\r\n            editor.replaceNode(header, div);\r\n        });\r\n        if (level > 0) {\r\n            var traverser = editor.getSelectionTraverser();\r\n            var inlineElement = traverser ? traverser.currentInlineElement : null;\r\n            while (inlineElement) {\r\n                var element = roosterjs_editor_dom_1.findClosestElementAncestor(inlineElement.getContainerNode());\r\n                if (element) {\r\n                    element.style.fontSize = '';\r\n                }\r\n                inlineElement = traverser.getNextInlineElement();\r\n            }\r\n            editor.getDocument().execCommand(\"formatBlock\" /* FormatBlock */, false, \"<H\" + level + \">\");\r\n        }\r\n    }, \"Format\" /* Format */);\r\n}\r\nexports.default = toggleHeader;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_core_1 = require(\"roosterjs-editor-core\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * @deprecated use cacheGetElementAtCursor('OL,UL') instead\r\n * Get the list state at selection\r\n * The list state refers to the HTML elements <OL> or <UL>\r\n * @param editor The editor instance\r\n * @param event (Optional) The plugin event, it stores the event cached data for looking up.\r\n * If not passed, we will query the first <LI> node in selection and return the list state of its direct parent\r\n * @returns The list state. ListState.Numbering indicates <OL>, ListState.Bullets indicates <UL>,\r\n * ListState.None indicates no <OL> or <UL> elements found at current selection\r\n */\r\nfunction cacheGetListState(editor, event) {\r\n    var element = roosterjs_editor_core_1.cacheGetElementAtCursor(editor, event, 'OL, UL');\r\n    var tag = roosterjs_editor_dom_1.getTagOfNode(element);\r\n    return tag == 'OL' ? 2 /* Numbering */ : tag == 'UL' ? 1 /* Bullets */ : 0 /* None */;\r\n}\r\nexports.default = cacheGetListState;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @deprecated Use Editor.editWithUndo() instead\r\n */\r\nfunction execFormatWithUndo(editor, formatter, preserveSelection) {\r\n    editor.addUndoSnapshot(function (start, end) {\r\n        var startPoint = {\r\n            containerNode: start.node,\r\n            offset: start.offset,\r\n        };\r\n        var endPoint = {\r\n            containerNode: end.node,\r\n            offset: end.offset,\r\n        };\r\n        var node = formatter(startPoint, endPoint);\r\n        if (preserveSelection &&\r\n            !editor.select(startPoint.containerNode, startPoint.offset, endPoint.containerNode, endPoint.offset) &&\r\n            node instanceof Node) {\r\n            editor.select(node);\r\n        }\r\n    });\r\n}\r\nexports.default = execFormatWithUndo;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_core_1 = require(\"roosterjs-editor-core\");\r\nvar EVENTDATACACHE_CURSORDATA = 'CURSORDATA';\r\n/**\r\n * @deprecated Use PositionContentSearcher instead\r\n */\r\nvar CursorData = /** @class */ (function () {\r\n    /**\r\n     * Create a new CursorData instance\r\n     * @param editor The editor instance\r\n     */\r\n    function CursorData(editor) {\r\n        this.searcher = editor.getContentSearcherOfCursor();\r\n    }\r\n    CursorData.prototype.getContentSearcher = function () {\r\n        return this.searcher;\r\n    };\r\n    Object.defineProperty(CursorData.prototype, \"wordBeforeCursor\", {\r\n        /**\r\n         * Get the word before cursor. The word is determined by scanning backwards till the first white space, the portion\r\n         * between cursor and the white space is the word before cursor\r\n         * @returns The word before cursor\r\n         */\r\n        get: function () {\r\n            return this.searcher.getWordBefore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CursorData.prototype, \"inlineElementBeforeCursor\", {\r\n        /**\r\n         * Get the inline element before cursor\r\n         * @returns The inlineElement before cursor\r\n         */\r\n        get: function () {\r\n            return this.searcher.getInlineElementBefore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CursorData.prototype, \"inlineElementAfterCursor\", {\r\n        /**\r\n         * Get the inline element after cursor\r\n         * @returns The inline element after cursor\r\n         */\r\n        get: function () {\r\n            return this.searcher.getInlineElementAfter();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get X number of chars before cursor\r\n     * The actual returned chars may be less than what is requested. e.g, length of text before cursor is less then X\r\n     * @param numChars The X number of chars user want to get\r\n     * @returns The actual chars we get as a string\r\n     */\r\n    CursorData.prototype.getXCharsBeforeCursor = function (numChars) {\r\n        return this.searcher.getSubStringBefore(numChars);\r\n    };\r\n    /**\r\n     * Get text section before cursor till stop condition is met.\r\n     * This offers consumers to retrieve text section by section\r\n     * The section essentially is just an inline element which has Container element\r\n     * so that the consumer can remember it for anchoring popup or verification purpose\r\n     * when cursor moves out of context etc.\r\n     * @param stopFunc The callback stop function\r\n     */\r\n    CursorData.prototype.getTextSectionBeforeCursorTill = function (stopFunc) {\r\n        return this.searcher.forEachTextInlineElement(stopFunc);\r\n    };\r\n    /**\r\n     * Get first non textual inline element before cursor\r\n     * @returns First non textutal inline element before cursor or null if no such element exists\r\n     */\r\n    CursorData.prototype.getFirstNonTextInlineBeforeCursor = function () {\r\n        return this.searcher.getNearestNonTextInlineElement();\r\n    };\r\n    return CursorData;\r\n}());\r\nexports.default = CursorData;\r\n/**\r\n * Read CursorData from plugin event cache. If not, create one\r\n * @param event The plugin event, it stores the event cached data for looking up.\r\n * If passed as null, we will create a new cursor data\r\n * @param editor The editor instance\r\n * @returns The cursor data\r\n */\r\nfunction cacheGetCursorEventData(event, editor) {\r\n    return roosterjs_editor_core_1.cacheGetEventData(event, EVENTDATACACHE_CURSORDATA, function () { return new CursorData(editor); });\r\n}\r\nexports.cacheGetCursorEventData = cacheGetCursorEventData;\r\n/**\r\n * Clear the cursor data in a plugin event.\r\n * This is called when the cursor data is changed, e.g, the text is replace with HyperLink\r\n * @param event The plugin event\r\n */\r\nfunction clearCursorEventDataCache(event) {\r\n    roosterjs_editor_core_1.clearEventDataCache(event, EVENTDATACACHE_CURSORDATA);\r\n}\r\nexports.clearCursorEventDataCache = clearCursorEventDataCache;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @deprecated Use Editor.queryElements() instead\r\n * Query nodes intersected with current selection using a selector\r\n * @param editor The editor\r\n * @param selector The selector to query\r\n * @param nodeContainedByRangeOnly When set to true, only return the nodes contained by current selection. Default value is false\r\n * @param forEachCallback An optional callback to be invoked on each node in query result\r\n * @returns The nodes intersected with current selection, returns an empty array if no result is found\r\n */\r\nfunction queryNodesWithSelection(editor, selector, nodeContainedByRangeOnly, forEachCallback) {\r\n    return editor.queryElements(selector, nodeContainedByRangeOnly ? 2 /* InSelection */ : 1 /* OnSelection */, forEachCallback);\r\n}\r\nexports.default = queryNodesWithSelection;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar replaceWithNode_1 = require(\"../format/replaceWithNode\");\r\n/**\r\n * @deprecated Use PositionContentSearcher.getRangeFromText() instead\r\n * Validate the text matches what's before the cursor, and return the range for it\r\n * @param editor The editor instance\r\n * @param text The text to match against\r\n * @param exactMatch Whether it is an exact match\r\n * @param cursorData The cursor data\r\n * @returns The range for the matched text, null if unable to find a match\r\n */\r\nfunction validateAndGetRangeForTextBeforeCursor(editor, text, exactMatch, cursorData) {\r\n    if (!text || text.length == 0) {\r\n        return;\r\n    }\r\n    var searcher = cursorData\r\n        ? cursorData.getContentSearcher()\r\n        : editor.getContentSearcherOfCursor();\r\n    return searcher.getRangeFromText(text, exactMatch);\r\n}\r\nexports.validateAndGetRangeForTextBeforeCursor = validateAndGetRangeForTextBeforeCursor;\r\n/**\r\n * @deprecated\r\n * Replace text before cursor with a node\r\n * @param editor The editor instance\r\n * @param text The text for matching. We will try to match the text with the text before cursor\r\n * @param node The node to replace the text with\r\n * @param exactMatch exactMatch is to match exactly, i.e.\r\n * In auto linkification, users could type URL followed by some punctuation and hit space. The auto link will kick in on space,\r\n * at the moment, what is before cursor could be \"<URL>,\", however, only \"<URL>\" makes the link. by setting exactMatch = false, it does not match\r\n * from right before cursor, but can scan through till first same char is seen. On the other hand if set exactMatch = true, it starts the match right\r\n * before cursor.\r\n * @param cursorData The Cursor data of current selection\r\n */\r\nfunction replaceTextBeforeCursorWithNode(editor, text, node, exactMatch, cursorData) {\r\n    return replaceWithNode_1.default(editor, text, node, exactMatch, cursorData && cursorData.getContentSearcher());\r\n}\r\nexports.default = replaceTextBeforeCursorWithNode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar replaceWithNode_1 = require(\"../format/replaceWithNode\");\r\n/**\r\n * @deprecated Use replaceWithNode instead\r\n * Replace the specified range with a node\r\n * @param editor The editor instance\r\n * @param range The range in which content needs to be replaced\r\n * @param node The node to be inserted\r\n * @param exactMatch exactMatch is to match exactly\r\n * @returns True if we complete the replacement, false otherwise\r\n */\r\nfunction replaceRangeWithNode(editor, range, node, exactMatch) {\r\n    return replaceWithNode_1.default(editor, range, node, exactMatch);\r\n}\r\nexports.default = replaceRangeWithNode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_core_1 = require(\"roosterjs-editor-core\");\r\n/**\r\n * @deprecated Use editor.getElementAtCursor()\r\n * Get the node at selection. If an expectedTag is specified, return the nearest ancestor of current node\r\n * which matches the tag name, or null if no match found in editor.\r\n * @param editor The editor instance\r\n * @param expectedTags The expected tag names. If null, return the element at cursor\r\n * @param startNode If specified, use this node as start node to search instead of current node\r\n * @returns The node at cursor or the nearest ancestor with the tag name is specified\r\n */\r\nfunction getNodeAtCursor(editor, expectedTags, startNode) {\r\n    var selector = expectedTags instanceof Array ? expectedTags.join(',') : expectedTags;\r\n    return editor.getElementAtCursor(selector, startNode);\r\n}\r\nexports.default = getNodeAtCursor;\r\n/**\r\n * @deprecated Use cacheGetElementAtCursor instead\r\n * Get the node at selection from event cache if it exists.\r\n * If an expectedTag is specified, return the nearest ancestor of current node\r\n * which matches the tag name, or null if no match found in editor.\r\n * @param editor The editor instance\r\n * @param event Event object to get cached object from\r\n * @param expectedTags The expected tag names. If null, return the element at cursor\r\n * @returns The element at cursor or the nearest ancestor with the tag name is specified\r\n */\r\nfunction cacheGetNodeAtCursor(editor, event, expectedTags) {\r\n    var selector = expectedTags instanceof Array ? expectedTags.join(',') : expectedTags;\r\n    return roosterjs_editor_core_1.cacheGetEventData(event, 'GET_NODE_AT_CURSOR_' + selector, function () {\r\n        return getNodeAtCursor(editor, expectedTags);\r\n    });\r\n}\r\nexports.cacheGetNodeAtCursor = cacheGetNodeAtCursor;\r\n/**\r\n * @deprecated Use cacheGetElementAtCursor instead\r\n */\r\nfunction cacheGetListElement(editor, event) {\r\n    return roosterjs_editor_core_1.cacheGetElementAtCursor(editor, event, 'LI');\r\n}\r\nexports.cacheGetListElement = cacheGetListElement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @deprecated Use ContentEdit plugin with fature DefaultShortcut instead\r\n */\r\nvar DefaultShortcut = /** @class */ (function () {\r\n    function DefaultShortcut() {\r\n    }\r\n    /**\r\n     * Initialize this plugin\r\n     * @param editor The editor instance\r\n     */\r\n    DefaultShortcut.prototype.initialize = function (editor) { };\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    DefaultShortcut.prototype.dispose = function () { };\r\n    return DefaultShortcut;\r\n}());\r\nexports.default = DefaultShortcut;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * An editor plugin that show a tooltip for existing link\r\n */\r\nvar HyperLink = /** @class */ (function () {\r\n    /**\r\n     * Create a new instance of HyperLink class\r\n     * @param getTooltipCallback A callback function to get tooltip text for an existing hyperlink.\r\n     * Default value is to return the href itself. If null, there will be no tooltip text.\r\n     * @param target (Optional) Target window name for hyperlink. If null, will use \"_blank\"\r\n     * @param onLinkClick (Optional) Open link callback\r\n     */\r\n    function HyperLink(getTooltipCallback, target, onLinkClick) {\r\n        if (getTooltipCallback === void 0) { getTooltipCallback = function (href) { return href; }; }\r\n        var _this = this;\r\n        this.getTooltipCallback = getTooltipCallback;\r\n        this.target = target;\r\n        this.onLinkClick = onLinkClick;\r\n        this.onMouse = function (e) {\r\n            var a = _this.editor.getElementAtCursor('a[href]', e.srcElement);\r\n            var href = _this.tryGetHref(a);\r\n            if (href) {\r\n                _this.editor.setEditorDomAttribute('title', e.type == 'mouseover' ? _this.getTooltipCallback(href, a) : null);\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Initialize this plugin\r\n     * @param editor The editor instance\r\n     */\r\n    HyperLink.prototype.initialize = function (editor) {\r\n        this.editor = editor;\r\n        this.disposers = this.getTooltipCallback\r\n            ? [\r\n                editor.addDomEventHandler('mouseover', this.onMouse),\r\n                editor.addDomEventHandler('mouseout', this.onMouse),\r\n            ]\r\n            : [];\r\n    };\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    HyperLink.prototype.dispose = function () {\r\n        this.disposers.forEach(function (disposer) { return disposer(); });\r\n        this.disposers = null;\r\n        this.editor = null;\r\n    };\r\n    /**\r\n     * Handle plugin events\r\n     * @param event The event object\r\n     */\r\n    HyperLink.prototype.onPluginEvent = function (event) {\r\n        if (event.eventType == 5 /* MouseUp */) {\r\n            var anchor = this.editor.getElementAtCursor('A', event.rawEvent.srcElement);\r\n            if (anchor) {\r\n                if (this.onLinkClick) {\r\n                    this.onLinkClick(anchor, event.rawEvent);\r\n                    return;\r\n                }\r\n                var href = void 0;\r\n                if (!roosterjs_editor_dom_1.Browser.isFirefox &&\r\n                    (href = this.tryGetHref(anchor)) &&\r\n                    (roosterjs_editor_dom_1.Browser.isMac ? event.rawEvent.metaKey : event.rawEvent.ctrlKey)) {\r\n                    try {\r\n                        var target = this.target || '_blank';\r\n                        var window_1 = this.editor.getDocument().defaultView;\r\n                        window_1.open(href, target);\r\n                    }\r\n                    catch (_a) { }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Try get href from an anchor element\r\n     * The reason this is put in a try-catch is that\r\n     * it has been seen that accessing href may throw an exception, in particular on IE/Edge\r\n     */\r\n    HyperLink.prototype.tryGetHref = function (anchor) {\r\n        try {\r\n            return anchor ? anchor.href : null;\r\n        }\r\n        catch (_a) { }\r\n    };\r\n    return HyperLink;\r\n}());\r\nexports.default = HyperLink;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar autoLinkFeatures_1 = require(\"./features/autoLinkFeatures\");\r\nvar shortcutFeatures_1 = require(\"./features/shortcutFeatures\");\r\nvar tableFeatures_1 = require(\"./features/tableFeatures\");\r\nvar ContentEditFeatures_1 = require(\"./ContentEditFeatures\");\r\nvar listFeatures_1 = require(\"./features/listFeatures\");\r\nvar quoteFeatures_1 = require(\"./features/quoteFeatures\");\r\n/**\r\n * An editor plugin to handle content edit event.\r\n * The following cases are included:\r\n * 1. Auto increase/decrease indentation on Tab, Shift+tab\r\n * 2. Enter, Backspace on empty list item\r\n * 3. Enter, Backspace on empty blockquote line\r\n * 4. Auto bullet/numbering\r\n * 5. Auto link\r\n * 6. Tab in table\r\n * 7. Up/Down in table\r\n * 8. Manage list style\r\n */\r\nvar ContentEdit = /** @class */ (function () {\r\n    /**\r\n     * Create instance of ContentEdit plugin\r\n     * @param features An optional feature set to determine which features the plugin should provide\r\n     */\r\n    function ContentEdit(featureSet) {\r\n        this.featureSet = featureSet;\r\n        this.featureMap = {};\r\n    }\r\n    /**\r\n     * Initialize this plugin\r\n     * @param editor The editor instance\r\n     */\r\n    ContentEdit.prototype.initialize = function (editor) {\r\n        var _this = this;\r\n        this.editor = editor;\r\n        var featureSet = this.featureSet || ContentEditFeatures_1.getDefaultContentEditFeatures();\r\n        [\r\n            listFeatures_1.IndentWhenTab,\r\n            listFeatures_1.OutdentWhenShiftTab,\r\n            listFeatures_1.OutdentWhenBackOn1stEmptyLine,\r\n            listFeatures_1.OutdentWhenEnterOnEmptyLine,\r\n            listFeatures_1.MergeInNewLine,\r\n            quoteFeatures_1.UnquoteWhenBackOnEmpty1stLine,\r\n            quoteFeatures_1.UnquoteWhenEnterOnEmptyLine,\r\n            tableFeatures_1.TabInTable,\r\n            tableFeatures_1.UpDownInTable,\r\n            listFeatures_1.AutoBullet,\r\n            autoLinkFeatures_1.AutoLink,\r\n            autoLinkFeatures_1.UnlinkWhenBackspaceAfterLink,\r\n            shortcutFeatures_1.DefaultShortcut,\r\n            listFeatures_1.getSmartOrderedList(featureSet.smartOrderedListStyles),\r\n        ]\r\n            .filter(function (feature) { return featureSet[feature.featureFlag]; })\r\n            .forEach(function (feature) {\r\n            if (feature.initialize) {\r\n                feature.initialize(_this.editor);\r\n            }\r\n            feature.keys.forEach(function (key) {\r\n                var array = _this.featureMap[key] || [];\r\n                array.push(feature);\r\n                _this.featureMap[key] = array;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    ContentEdit.prototype.dispose = function () {\r\n        this.editor = null;\r\n    };\r\n    /**\r\n     * Check whether the event should be handled exclusively by this plugin\r\n     */\r\n    ContentEdit.prototype.willHandleEventExclusively = function (event) {\r\n        this.findFeature(event);\r\n        return !!this.currentFeature;\r\n    };\r\n    /**\r\n     * Handle the event\r\n     */\r\n    ContentEdit.prototype.onPluginEvent = function (event) {\r\n        // ContentChangedEvent will be broadcast so we won't see it in willHandleEventExclusively(),\r\n        // we need to check it again here\r\n        if (!this.currentFeature && event.eventType == 6 /* ContentChanged */) {\r\n            this.findFeature(event);\r\n        }\r\n        if (this.currentFeature) {\r\n            var feature = this.currentFeature;\r\n            this.currentFeature = null;\r\n            feature.handleEvent(event, this.editor);\r\n        }\r\n    };\r\n    ContentEdit.prototype.findFeature = function (event) {\r\n        var _this = this;\r\n        var hasFunctionKey = false;\r\n        var features;\r\n        if (event.eventType == 0 /* KeyDown */) {\r\n            var rawEvent = event.rawEvent;\r\n            hasFunctionKey = rawEvent.ctrlKey || rawEvent.altKey || rawEvent.metaKey;\r\n            features = this.featureMap[rawEvent.which];\r\n        }\r\n        else if (event.eventType == 6 /* ContentChanged */) {\r\n            features = this.featureMap[2048 /* CONTENTCHANGED */];\r\n        }\r\n        this.currentFeature =\r\n            features &&\r\n                features.filter(function (feature) {\r\n                    return (feature.allowFunctionKeys || !hasFunctionKey) &&\r\n                        feature.shouldHandleEvent(event, _this.editor);\r\n                })[0];\r\n    };\r\n    return ContentEdit;\r\n}());\r\nexports.default = ContentEdit;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar roosterjs_editor_api_1 = require(\"roosterjs-editor-api\");\r\nvar roosterjs_editor_core_1 = require(\"roosterjs-editor-core\");\r\n// When user type, they may end a link with a puncatuation, i.e. www.bing.com;\r\n// we need to trim off the trailing puncatuation before turning it to link match\r\nvar TRAILING_PUNCTUATION_REGEX = /[.+=\\s:;\"',>]+$/i;\r\nvar MINIMUM_LENGTH = 5;\r\nexports.AutoLink = {\r\n    keys: [13 /* ENTER */, 32 /* SPACE */, 2048 /* CONTENTCHANGED */],\r\n    initialize: function (editor) {\r\n        return roosterjs_editor_dom_1.Browser.isIE &&\r\n            editor.getDocument().execCommand('AutoUrlDetect', false, false);\r\n    },\r\n    shouldHandleEvent: cacheGetLinkData,\r\n    handleEvent: autoLink,\r\n    featureFlag: 'autoLink',\r\n};\r\nexports.UnlinkWhenBackspaceAfterLink = {\r\n    keys: [8 /* BACKSPACE */],\r\n    shouldHandleEvent: hasLinkBeforeCursor,\r\n    handleEvent: function (event, editor) {\r\n        event.rawEvent.preventDefault();\r\n        roosterjs_editor_api_1.removeLink(editor);\r\n    },\r\n    featureFlag: 'unlinkWhenBackspaceAfterLink',\r\n};\r\nfunction cacheGetLinkData(event, editor) {\r\n    return event.eventType == 0 /* KeyDown */ ||\r\n        (event.eventType == 6 /* ContentChanged */ && event.source == \"Paste\" /* Paste */)\r\n        ? roosterjs_editor_core_1.cacheGetEventData(event, 'LINK_DATA', function () {\r\n            var searcher = roosterjs_editor_core_1.cacheGetContentSearcher(event, editor);\r\n            var word = searcher && searcher.getWordBefore();\r\n            if (word && word.length > MINIMUM_LENGTH) {\r\n                // Check for trailing punctuation\r\n                var trailingPunctuations = word.match(TRAILING_PUNCTUATION_REGEX);\r\n                var trailingPunctuation = (trailingPunctuations || [])[0] || '';\r\n                var candidate_1 = word.substring(0, word.length - trailingPunctuation.length);\r\n                // Do special handling for ')', '}', ']'\r\n                ['()', '{}', '[]'].forEach(function (str) {\r\n                    if (candidate_1[candidate_1.length - 1] == str[1] &&\r\n                        candidate_1.indexOf(str[0]) < 0) {\r\n                        candidate_1 = candidate_1.substr(0, candidate_1.length - 1);\r\n                    }\r\n                });\r\n                // Match and replace in editor\r\n                return roosterjs_editor_dom_1.matchLink(candidate_1);\r\n            }\r\n            return null;\r\n        })\r\n        : null;\r\n}\r\nfunction hasLinkBeforeCursor(event, editor) {\r\n    var contentSearcher = roosterjs_editor_core_1.cacheGetContentSearcher(event, editor);\r\n    var inline = contentSearcher.getInlineElementBefore();\r\n    return inline instanceof roosterjs_editor_dom_1.LinkInlineElement;\r\n}\r\nfunction autoLink(event, editor) {\r\n    var searcher = roosterjs_editor_core_1.cacheGetContentSearcher(event, editor);\r\n    var anchor = editor.getDocument().createElement('a');\r\n    var linkData = cacheGetLinkData(event, editor);\r\n    anchor.textContent = linkData.originalUrl;\r\n    anchor.href = linkData.normalizedUrl;\r\n    editor.runAsync(function () {\r\n        editor.performAutoComplete(function () {\r\n            roosterjs_editor_api_1.replaceWithNode(editor, linkData.originalUrl, anchor, false /* exactMatch */, searcher);\r\n            // The content at cursor has changed. Should also clear the cursor data cache\r\n            roosterjs_editor_core_1.clearContentSearcherCache(event);\r\n            return anchor;\r\n        }, \"AutoLink\" /* AutoLink */);\r\n    });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar roosterjs_editor_core_1 = require(\"roosterjs-editor-core\");\r\nvar roosterjs_editor_api_1 = require(\"roosterjs-editor-api\");\r\nfunction createCommand(winKey, macKey, action) {\r\n    return {\r\n        winKey: winKey,\r\n        macKey: macKey,\r\n        action: action,\r\n    };\r\n}\r\nvar commands = [\r\n    createCommand(256 /* Ctrl */ | 66 /* B */, 512 /* Meta */ | 66 /* B */, roosterjs_editor_api_1.toggleBold),\r\n    createCommand(256 /* Ctrl */ | 73 /* I */, 512 /* Meta */ | 73 /* I */, roosterjs_editor_api_1.toggleItalic),\r\n    createCommand(256 /* Ctrl */ | 85 /* U */, 512 /* Meta */ | 85 /* U */, roosterjs_editor_api_1.toggleUnderline),\r\n    createCommand(256 /* Ctrl */ | 90 /* Z */, 512 /* Meta */ | 90 /* Z */, function (editor) { return editor.undo(); }),\r\n    createCommand(256 /* Ctrl */ | 89 /* Y */, 512 /* Meta */ | 1024 /* Shift */ | 90 /* Z */, function (editor) { return editor.redo(); }),\r\n    createCommand(256 /* Ctrl */ | 190 /* PERIOD */, 512 /* Meta */ | 190 /* PERIOD */, roosterjs_editor_api_1.toggleBullet),\r\n    createCommand(256 /* Ctrl */ | 191 /* FORWARDSLASH */, 512 /* Meta */ | 191 /* FORWARDSLASH */, roosterjs_editor_api_1.toggleNumbering),\r\n    createCommand(256 /* Ctrl */ | 1024 /* Shift */ | 190 /* PERIOD */, 512 /* Meta */ | 1024 /* Shift */ | 190 /* PERIOD */, function (editor) { return roosterjs_editor_api_1.changeFontSize(editor, 0 /* Increase */); }),\r\n    createCommand(256 /* Ctrl */ | 1024 /* Shift */ | 188 /* COMMA */, 512 /* Meta */ | 1024 /* Shift */ | 188 /* COMMA */, function (editor) { return roosterjs_editor_api_1.changeFontSize(editor, 1 /* Decrease */); }),\r\n];\r\nexports.DefaultShortcut = {\r\n    allowFunctionKeys: true,\r\n    keys: [66 /* B */, 73 /* I */, 85 /* U */, 89 /* Y */, 90 /* Z */, 188 /* COMMA */, 190 /* PERIOD */, 191 /* FORWARDSLASH */],\r\n    shouldHandleEvent: cacheGetCommand,\r\n    handleEvent: function (event, editor) {\r\n        var command = cacheGetCommand(event);\r\n        if (command) {\r\n            command.action(editor);\r\n            event.rawEvent.preventDefault();\r\n            event.rawEvent.stopPropagation();\r\n        }\r\n    },\r\n    featureFlag: 'defaultShortcut',\r\n};\r\nfunction cacheGetCommand(event) {\r\n    return roosterjs_editor_core_1.cacheGetEventData(event, 'DEFAULT_SHORT_COMMAND', function () {\r\n        var e = event.rawEvent;\r\n        var key = \r\n        // Need to check ALT key to be false since in some language (e.g. Polski) uses AltGr to input some special charactors\r\n        // In that case, ctrlKey and altKey are both true in Edge, but we should not trigger any shortcut function here\r\n        event.eventType == 0 /* KeyDown */ && !e.altKey\r\n            ? e.which |\r\n                (e.metaKey && 512 /* Meta */) |\r\n                (e.shiftKey && 1024 /* Shift */) |\r\n                (e.ctrlKey && 256 /* Ctrl */)\r\n            : 0;\r\n        return key && commands.filter(function (cmd) { return (roosterjs_editor_dom_1.Browser.isMac ? cmd.macKey : cmd.winKey) == key; })[0];\r\n    });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_core_1 = require(\"roosterjs-editor-core\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nexports.TabInTable = {\r\n    keys: [9 /* TAB */],\r\n    shouldHandleEvent: cacheGetTableCell,\r\n    handleEvent: function (event, editor) {\r\n        var shift = event.rawEvent.shiftKey;\r\n        var td = cacheGetTableCell(event, editor);\r\n        for (var vtable = new roosterjs_editor_dom_1.VTable(td), step = shift ? -1 : 1, row = vtable.row, col = vtable.col + step;; col += step) {\r\n            if (col < 0 || col >= vtable.cells[row].length) {\r\n                row += step;\r\n                if (row < 0 || row >= vtable.cells.length) {\r\n                    editor.select(vtable.table, shift ? -2 /* Before */ : -3 /* After */);\r\n                    break;\r\n                }\r\n                col = shift ? vtable.cells[row].length - 1 : 0;\r\n            }\r\n            var cell = vtable.getCell(row, col);\r\n            if (cell.td) {\r\n                editor.select(cell.td, 0 /* Begin */);\r\n                break;\r\n            }\r\n        }\r\n        event.rawEvent.preventDefault();\r\n    },\r\n    featureFlag: 'tabInTable',\r\n};\r\nexports.UpDownInTable = {\r\n    keys: [38 /* UP */, 40 /* DOWN */],\r\n    shouldHandleEvent: cacheGetTableCell,\r\n    handleEvent: function (event, editor) {\r\n        var td = cacheGetTableCell(event, editor);\r\n        var vtable = new roosterjs_editor_dom_1.VTable(td);\r\n        var isUp = event.rawEvent.which == 38 /* UP */;\r\n        var step = isUp ? -1 : 1;\r\n        var targetTd = null;\r\n        for (var row = vtable.row; row >= 0 && row < vtable.cells.length; row += step) {\r\n            var cell = vtable.getCell(row, vtable.col);\r\n            if (cell.td && cell.td != td) {\r\n                targetTd = cell.td;\r\n                break;\r\n            }\r\n        }\r\n        editor.runAsync(function () {\r\n            var newContainer = editor.getElementAtCursor();\r\n            if (roosterjs_editor_dom_1.contains(vtable.table, newContainer) &&\r\n                !roosterjs_editor_dom_1.contains(td, newContainer, true /*treatSameNodeAsContain*/)) {\r\n                if (targetTd) {\r\n                    editor.select(targetTd, 0 /* Begin */);\r\n                }\r\n                else {\r\n                    editor.select(vtable.table, isUp ? -2 /* Before */ : -3 /* After */);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    featureFlag: 'upDownInTable',\r\n};\r\nfunction cacheGetTableCell(event, editor) {\r\n    var firstTd = roosterjs_editor_core_1.cacheGetElementAtCursor(editor, event, 'TD,TH,LI');\r\n    return roosterjs_editor_dom_1.getTagOfNode(firstTd) == 'LI' ? null : firstTd;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_core_1 = require(\"roosterjs-editor-core\");\r\nvar roosterjs_editor_api_1 = require(\"roosterjs-editor-api\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nexports.IndentWhenTab = {\r\n    keys: [9 /* TAB */],\r\n    shouldHandleEvent: function (event, editor) {\r\n        return !event.rawEvent.shiftKey && cacheGetListElement(event, editor);\r\n    },\r\n    handleEvent: function (event, editor) {\r\n        roosterjs_editor_api_1.setIndentation(editor, 0 /* Increase */);\r\n        event.rawEvent.preventDefault();\r\n    },\r\n    featureFlag: 'indentWhenTab',\r\n};\r\nexports.OutdentWhenShiftTab = {\r\n    keys: [9 /* TAB */],\r\n    shouldHandleEvent: function (event, editor) {\r\n        return event.rawEvent.shiftKey && cacheGetListElement(event, editor);\r\n    },\r\n    handleEvent: function (event, editor) {\r\n        roosterjs_editor_api_1.setIndentation(editor, 1 /* Decrease */);\r\n        event.rawEvent.preventDefault();\r\n    },\r\n    featureFlag: 'outdentWhenShiftTab',\r\n};\r\nexports.MergeInNewLine = {\r\n    keys: [8 /* BACKSPACE */],\r\n    shouldHandleEvent: function (event, editor) {\r\n        var li = roosterjs_editor_core_1.cacheGetElementAtCursor(editor, event, 'LI');\r\n        var range = editor.getSelectionRange();\r\n        return li && range && roosterjs_editor_dom_1.isPositionAtBeginningOf(roosterjs_editor_dom_1.Position.getStart(range), li);\r\n    },\r\n    handleEvent: function (event, editor) {\r\n        var li = roosterjs_editor_core_1.cacheGetElementAtCursor(editor, event, 'LI');\r\n        if (li.previousSibling) {\r\n            editor.runAsync(function () {\r\n                var br = editor.getDocument().createElement('BR');\r\n                editor.insertNode(br);\r\n                editor.select(br, -3 /* After */);\r\n            });\r\n        }\r\n        else {\r\n            toggleListAndPreventDefault(event, editor);\r\n        }\r\n    },\r\n    featureFlag: 'mergeInNewLineWhenBackspaceOnFirstChar',\r\n};\r\nexports.OutdentWhenBackOn1stEmptyLine = {\r\n    keys: [8 /* BACKSPACE */],\r\n    shouldHandleEvent: function (event, editor) {\r\n        var li = roosterjs_editor_core_1.cacheGetElementAtCursor(editor, event, 'LI');\r\n        return li && roosterjs_editor_dom_1.isNodeEmpty(li) && !li.previousSibling;\r\n    },\r\n    handleEvent: toggleListAndPreventDefault,\r\n    featureFlag: 'outdentWhenBackspaceOnEmptyFirstLine',\r\n};\r\nexports.OutdentWhenEnterOnEmptyLine = {\r\n    keys: [13 /* ENTER */],\r\n    shouldHandleEvent: function (event, editor) {\r\n        var li = roosterjs_editor_core_1.cacheGetElementAtCursor(editor, event, 'LI');\r\n        return !event.rawEvent.shiftKey && li && roosterjs_editor_dom_1.isNodeEmpty(li);\r\n    },\r\n    handleEvent: function (event, editor) {\r\n        editor.performAutoComplete(function () { return toggleListAndPreventDefault(event, editor); });\r\n    },\r\n    featureFlag: 'outdentWhenEnterOnEmptyLine',\r\n};\r\nexports.AutoBullet = {\r\n    keys: [32 /* SPACE */],\r\n    shouldHandleEvent: function (event, editor) {\r\n        if (!cacheGetListElement(event, editor)) {\r\n            var searcher = roosterjs_editor_core_1.cacheGetContentSearcher(event, editor);\r\n            var textBeforeCursor = searcher.getSubStringBefore(3);\r\n            // Auto list is triggered if:\r\n            // 1. Text before cursor exactly mathces '*', '-' or '1.'\r\n            // 2. There's no non-text inline entities before cursor\r\n            return (['*', '-', '1.'].indexOf(textBeforeCursor) >= 0 &&\r\n                !searcher.getNearestNonTextInlineElement());\r\n        }\r\n        return false;\r\n    },\r\n    handleEvent: function (event, editor) {\r\n        editor.runAsync(function () {\r\n            editor.performAutoComplete(function () {\r\n                var searcher = editor.getContentSearcherOfCursor();\r\n                var textBeforeCursor = searcher.getSubStringBefore(3);\r\n                var rangeToDelete = searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/);\r\n                if (rangeToDelete) {\r\n                    rangeToDelete.deleteContents();\r\n                }\r\n                // If not explicitly insert br, Chrome/Safari/IE will operate on the previous line\r\n                var tempBr = editor.getDocument().createElement('BR');\r\n                if (roosterjs_editor_dom_1.Browser.isChrome || roosterjs_editor_dom_1.Browser.isSafari || roosterjs_editor_dom_1.Browser.isIE11OrGreater) {\r\n                    editor.insertNode(tempBr);\r\n                }\r\n                if (textBeforeCursor.indexOf('1.') == 0) {\r\n                    roosterjs_editor_api_1.toggleNumbering(editor);\r\n                }\r\n                else {\r\n                    roosterjs_editor_api_1.toggleBullet(editor);\r\n                }\r\n                editor.deleteNode(tempBr);\r\n            });\r\n        });\r\n    },\r\n    featureFlag: 'autoBullet',\r\n};\r\nfunction getSmartOrderedList(styleList) {\r\n    return {\r\n        keys: [2048 /* CONTENTCHANGED */],\r\n        shouldHandleEvent: function (event, editor) { return event.data instanceof HTMLOListElement; },\r\n        handleEvent: function (event, editor) {\r\n            var ol = event.data;\r\n            var parentOl = editor.getElementAtCursor('OL', ol.parentNode);\r\n            if (parentOl) {\r\n                // The style list must has at least one value. If no value is passed in, fallback to decimal\r\n                var styles = styleList && styleList.length > 0 ? styleList : ['decimal'];\r\n                ol.style.listStyle =\r\n                    styles[(styles.indexOf(parentOl.style.listStyle) + 1) % styles.length];\r\n            }\r\n        },\r\n        featureFlag: 'smartOrderedList',\r\n    };\r\n}\r\nexports.getSmartOrderedList = getSmartOrderedList;\r\nfunction toggleListAndPreventDefault(event, editor) {\r\n    var listInfo = cacheGetListElement(event, editor);\r\n    if (listInfo) {\r\n        var listElement = listInfo[0];\r\n        var tag = roosterjs_editor_dom_1.getTagOfNode(listElement);\r\n        if (tag == 'UL') {\r\n            roosterjs_editor_api_1.toggleBullet(editor);\r\n        }\r\n        else if (tag == 'OL') {\r\n            roosterjs_editor_api_1.toggleNumbering(editor);\r\n        }\r\n        editor.focus();\r\n        event.rawEvent.preventDefault();\r\n    }\r\n}\r\nfunction cacheGetListElement(event, editor) {\r\n    var li = roosterjs_editor_core_1.cacheGetElementAtCursor(editor, event, 'LI,TABLE');\r\n    var listElement = li && roosterjs_editor_dom_1.getTagOfNode(li) == 'LI' && editor.getElementAtCursor('UL,OL', li);\r\n    return listElement ? [listElement, li] : null;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_core_1 = require(\"roosterjs-editor-core\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar QUOTE_TAG = 'BLOCKQUOTE';\r\nexports.UnquoteWhenBackOnEmpty1stLine = {\r\n    keys: [8 /* BACKSPACE */],\r\n    shouldHandleEvent: function (event, editor) {\r\n        var childOfQuote = cacheGetQuoteChild(event, editor);\r\n        return childOfQuote && roosterjs_editor_dom_1.isNodeEmpty(childOfQuote) && !childOfQuote.previousSibling;\r\n    },\r\n    handleEvent: splitQuote,\r\n    featureFlag: 'unquoteWhenBackspaceOnEmptyFirstLine',\r\n};\r\nexports.UnquoteWhenEnterOnEmptyLine = {\r\n    keys: [13 /* ENTER */],\r\n    shouldHandleEvent: function (event, editor) {\r\n        var childOfQuote = cacheGetQuoteChild(event, editor);\r\n        var shift = event.rawEvent.shiftKey;\r\n        return !shift && childOfQuote && roosterjs_editor_dom_1.isNodeEmpty(childOfQuote);\r\n    },\r\n    handleEvent: function (event, editor) { return editor.performAutoComplete(function () { return splitQuote(event, editor); }); },\r\n    featureFlag: 'unquoteWhenEnterOnEmptyLine',\r\n};\r\nfunction cacheGetQuoteChild(event, editor) {\r\n    return roosterjs_editor_core_1.cacheGetEventData(event, 'QUOTE_CHILD', function () {\r\n        var node = editor.getElementAtCursor();\r\n        if (roosterjs_editor_dom_1.getTagOfNode(node) == QUOTE_TAG) {\r\n            return node.firstChild;\r\n        }\r\n        while (editor.contains(node) && roosterjs_editor_dom_1.getTagOfNode(node.parentNode) != QUOTE_TAG) {\r\n            node = node.parentNode;\r\n        }\r\n        return node && roosterjs_editor_dom_1.getTagOfNode(node.parentNode) == QUOTE_TAG ? node : null;\r\n    });\r\n}\r\nfunction splitQuote(event, editor) {\r\n    editor.addUndoSnapshot(function () {\r\n        var childOfQuote = cacheGetQuoteChild(event, editor);\r\n        var parent = roosterjs_editor_dom_1.splitBalancedNodeRange(childOfQuote);\r\n        roosterjs_editor_dom_1.unwrap(parent);\r\n        editor.select(childOfQuote, 0 /* Begin */);\r\n    });\r\n    event.rawEvent.preventDefault();\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar buildClipboardData_1 = require(\"./buildClipboardData\");\r\nvar fragmentHandler_1 = require(\"./fragmentHandler\");\r\nvar textToHtml_1 = require(\"./textToHtml\");\r\nvar roosterjs_editor_api_1 = require(\"roosterjs-editor-api\");\r\nvar roosterjs_html_sanitizer_1 = require(\"roosterjs-html-sanitizer\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/**\r\n * Paste plugin, handles onPaste event and paste content into editor\r\n */\r\nvar Paste = /** @class */ (function () {\r\n    /**\r\n     * Create an instance of Paste\r\n     * @param deprecated Deprecated parameter only used for compatibility with old code\r\n     * @param attributeCallbacks A set of callbacks to help handle html attribute during sanitization\r\n     */\r\n    function Paste(deprecated, attributeCallbacks) {\r\n        var _this = this;\r\n        this.onPaste = function (event) {\r\n            buildClipboardData_1.default(event, _this.editor, function (clipboardData) {\r\n                var doc = roosterjs_html_sanitizer_1.htmlToDom(clipboardData.html, true /*preserveFragmentOnly*/, fragmentHandler_1.default);\r\n                if (doc && doc.body) {\r\n                    _this.sanitizer.convertGlobalCssToInlineCss(doc);\r\n                    var range = _this.editor.getSelectionRange();\r\n                    var element = range && roosterjs_editor_dom_1.Position.getStart(range).normalize().element;\r\n                    var currentStyles = roosterjs_html_sanitizer_1.getInheritableStyles(element);\r\n                    _this.sanitizer.sanitize(doc.body, currentStyles);\r\n                    clipboardData.html = doc.body.innerHTML;\r\n                }\r\n                _this.pasteOriginal(clipboardData);\r\n            });\r\n        };\r\n        this.sanitizer = new roosterjs_html_sanitizer_1.HtmlSanitizer({\r\n            attributeCallbacks: attributeCallbacks,\r\n        });\r\n    }\r\n    Paste.prototype.initialize = function (editor) {\r\n        this.editor = editor;\r\n        this.pasteDisposer = editor.addDomEventHandler('paste', this.onPaste);\r\n    };\r\n    Paste.prototype.dispose = function () {\r\n        this.pasteDisposer();\r\n        this.pasteDisposer = null;\r\n        this.editor = null;\r\n    };\r\n    /**\r\n     * Paste into editor using passed in clipboardData with original format\r\n     * @param clipboardData The clipboardData to paste\r\n     */\r\n    Paste.prototype.pasteOriginal = function (clipboardData) {\r\n        this.paste(clipboardData, this.detectPasteOption(clipboardData));\r\n    };\r\n    /**\r\n     * Paste plain text into editor using passed in clipboardData\r\n     * @param clipboardData The clipboardData to paste\r\n     */\r\n    Paste.prototype.pasteText = function (clipboardData) {\r\n        this.paste(clipboardData, 1 /* PasteText */);\r\n    };\r\n    /**\r\n     * Paste into editor using passed in clipboardData with curent format\r\n     * @param clipboardData The clipboardData to paste\r\n     */\r\n    Paste.prototype.pasteAndMergeFormat = function (clipboardData) {\r\n        this.paste(clipboardData, this.detectPasteOption(clipboardData), true /*mergeFormat*/);\r\n    };\r\n    Paste.prototype.detectPasteOption = function (clipboardData) {\r\n        return clipboardData.text || !clipboardData.image\r\n            ? 0 /* PasteHtml */\r\n            : 2 /* PasteImage */;\r\n    };\r\n    Paste.prototype.paste = function (clipboardData, pasteOption, mergeCurrentFormat) {\r\n        var document = this.editor.getDocument();\r\n        var fragment = document.createDocumentFragment();\r\n        if (pasteOption == 0 /* PasteHtml */) {\r\n            var html = clipboardData.html;\r\n            var nodes = roosterjs_editor_dom_1.fromHtml(html, document);\r\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\r\n                var node = nodes_1[_i];\r\n                if (mergeCurrentFormat) {\r\n                    this.applyTextFormat(node, clipboardData.originalFormat);\r\n                }\r\n                fragment.appendChild(node);\r\n            }\r\n        }\r\n        var event = {\r\n            eventType: 8 /* BeforePaste */,\r\n            clipboardData: clipboardData,\r\n            fragment: fragment,\r\n            pasteOption: pasteOption,\r\n        };\r\n        this.editor.triggerEvent(event, true /*broadcast*/);\r\n        this.internalPaste(event);\r\n    };\r\n    Paste.prototype.internalPaste = function (event) {\r\n        var _this = this;\r\n        var clipboardData = event.clipboardData, fragment = event.fragment, pasteOption = event.pasteOption;\r\n        this.editor.focus();\r\n        this.editor.addUndoSnapshot(function () {\r\n            if (clipboardData.snapshotBeforePaste == null) {\r\n                clipboardData.snapshotBeforePaste = _this.editor.getContent(false /*triggerExtractContentEvent*/, true /*markSelection*/);\r\n            }\r\n            else {\r\n                _this.editor.setContent(clipboardData.snapshotBeforePaste);\r\n            }\r\n            switch (pasteOption) {\r\n                case 0 /* PasteHtml */:\r\n                    _this.editor.insertNode(fragment);\r\n                    break;\r\n                case 1 /* PasteText */:\r\n                    var html = textToHtml_1.default(clipboardData.text);\r\n                    _this.editor.insertContent(html);\r\n                    break;\r\n                case 2 /* PasteImage */:\r\n                    roosterjs_editor_api_1.insertImage(_this.editor, clipboardData.image);\r\n                    break;\r\n            }\r\n            return clipboardData;\r\n        }, \"Paste\" /* Paste */);\r\n    };\r\n    Paste.prototype.applyTextFormat = function (node, format) {\r\n        var leaf = roosterjs_editor_dom_1.getFirstLeafNode(node);\r\n        var parents = [];\r\n        while (leaf) {\r\n            if (leaf.nodeType == 3 /* Text */ &&\r\n                leaf.parentNode &&\r\n                parents.indexOf(leaf.parentNode) < 0) {\r\n                parents.push(leaf.parentNode);\r\n            }\r\n            leaf = roosterjs_editor_dom_1.getNextLeafSibling(node, leaf);\r\n        }\r\n        for (var _i = 0, parents_1 = parents; _i < parents_1.length; _i++) {\r\n            var parent_1 = parents_1[_i];\r\n            roosterjs_editor_dom_1.applyFormat(parent_1, format);\r\n        }\r\n    };\r\n    return Paste;\r\n}());\r\nexports.default = Paste;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar textToHtml_1 = require(\"./textToHtml\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar roosterjs_editor_api_1 = require(\"roosterjs-editor-api\");\r\nvar CONTAINER_HTML = '<div contenteditable style=\"width: 1px; height: 1px; overflow: hidden; position: fixed; top: 0; left; 0; -webkit-user-select: text\"></div>';\r\n// HTML header to indicate where is the HTML content started from.\r\n// Sample header:\r\n// Version:0.9\r\n// StartHTML:71\r\n// EndHTML:170\r\n// StartFragment:140\r\n// EndFragment:160\r\n// StartSelection:140\r\n// EndSelection:160\r\nvar CLIPBOARD_HTML_HEADER_REGEX = /^Version:[0-9\\.]+\\s+StartHTML:\\s*([0-9]+)\\s+EndHTML:\\s*([0-9]+)\\s+/i;\r\n/**\r\n * Build ClipboardData from a paste event\r\n * @param event The paste event\r\n * @param editor The editor\r\n * @param callback Callback function when data is ready\r\n */\r\nfunction buildClipboardData(event, editor, callback) {\r\n    var dataTransfer = event.clipboardData || editor.getDocument().defaultView.clipboardData;\r\n    var types = dataTransfer.types ? [].slice.call(dataTransfer.types) : [];\r\n    var text = dataTransfer.getData('text');\r\n    var retrieveHtmlCallback = function (html) {\r\n        if (roosterjs_editor_dom_1.Browser.isEdge) {\r\n            html = workaroundForEdge(html);\r\n        }\r\n        callback({\r\n            snapshotBeforePaste: null,\r\n            originalFormat: getCurrentFormat(editor),\r\n            types: types,\r\n            image: getImage(dataTransfer),\r\n            text: text,\r\n            html: html || textToHtml_1.default(text || ''),\r\n        });\r\n    };\r\n    if (event.clipboardData && event.clipboardData.items) {\r\n        directRetrieveHtml(event, retrieveHtmlCallback);\r\n    }\r\n    else {\r\n        retrieveHtmlViaTempDiv(editor, retrieveHtmlCallback);\r\n    }\r\n}\r\nexports.default = buildClipboardData;\r\nfunction getCurrentFormat(editor) {\r\n    var format = roosterjs_editor_api_1.getFormatState(editor);\r\n    return format\r\n        ? {\r\n            fontFamily: format.fontName,\r\n            fontSize: format.fontSize,\r\n            textColor: format.textColor,\r\n            backgroundColor: format.backgroundColor,\r\n            bold: format.isBold,\r\n            italic: format.isItalic,\r\n            underline: format.isUnderline,\r\n        }\r\n        : {};\r\n}\r\nfunction getImage(dataTransfer) {\r\n    // Chrome, Firefox, Edge support dataTransfer.items\r\n    var fileCount = dataTransfer.items ? dataTransfer.items.length : 0;\r\n    for (var i = 0; i < fileCount; i++) {\r\n        var item = dataTransfer.items[i];\r\n        if (item.type && item.type.indexOf('image/') == 0) {\r\n            return item.getAsFile();\r\n        }\r\n    }\r\n    // IE, Safari support dataTransfer.files\r\n    fileCount = dataTransfer.files ? dataTransfer.files.length : 0;\r\n    for (var i = 0; i < fileCount; i++) {\r\n        var file = dataTransfer.files.item(i);\r\n        if (file.type && file.type.indexOf('image/') == 0) {\r\n            return file;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction directRetrieveHtml(event, callback) {\r\n    event.preventDefault();\r\n    var items = event.clipboardData.items;\r\n    for (var i = 0; i < items.length; i++) {\r\n        var item = items[i];\r\n        if (item.type && item.type.indexOf('text/html') == 0) {\r\n            item.getAsString(callback);\r\n            return;\r\n        }\r\n    }\r\n    callback(null);\r\n}\r\nfunction retrieveHtmlViaTempDiv(editor, callback) {\r\n    // cache original selection range in editor\r\n    var originalSelectionRange = editor.getSelectionRange();\r\n    var tempDiv = getTempDivForPaste(editor);\r\n    tempDiv.focus();\r\n    editor.runAsync(function () {\r\n        // restore original selection range in editor\r\n        editor.select(originalSelectionRange);\r\n        callback(tempDiv.innerHTML);\r\n        tempDiv.style.display = 'none';\r\n        tempDiv.innerHTML = '';\r\n    });\r\n}\r\nfunction getTempDivForPaste(editor) {\r\n    var tempDiv = editor.getCustomData('PasteDiv', function () {\r\n        var pasteDiv = roosterjs_editor_dom_1.fromHtml(CONTAINER_HTML, editor.getDocument())[0];\r\n        editor.insertNode(pasteDiv, {\r\n            position: 3 /* Outside */,\r\n            updateCursor: false,\r\n            replaceSelection: false,\r\n            insertOnNewLine: false,\r\n        });\r\n        return pasteDiv;\r\n    }, function (pasteDiv) {\r\n        pasteDiv.parentNode.removeChild(pasteDiv);\r\n    });\r\n    tempDiv.style.display = '';\r\n    return tempDiv;\r\n}\r\n/**\r\n * Edge sometimes doesn't remove the headers, which cause we paste more things then expected.\r\n * So we need to remove it in our code\r\n * @param html The HTML string got from clipboard\r\n */\r\nfunction workaroundForEdge(html) {\r\n    var headerValues = CLIPBOARD_HTML_HEADER_REGEX.exec(html);\r\n    if (headerValues && headerValues.length == 3) {\r\n        var start = parseInt(headerValues[1]);\r\n        var end = parseInt(headerValues[2]);\r\n        if (start > 0 && end > start) {\r\n            html = html.substring(start, end);\r\n        }\r\n    }\r\n    return html;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar convertPastedContentFromExcel_1 = require(\"./excelConverter/convertPastedContentFromExcel\");\r\nvar convertPastedContentFromWord_1 = require(\"./wordConverter/convertPastedContentFromWord\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar roosterjs_html_sanitizer_1 = require(\"roosterjs-html-sanitizer\");\r\nvar WORD_ATTRIBUTE_NAME = 'xmlns:w';\r\nvar WORD_ATTRIBUTE_VALUE = 'urn:schemas-microsoft-com:office:word';\r\nvar EXCEL_ATTRIBUTE_NAME = 'xmlns:x';\r\nvar EXCEL_ATTRIBUTE_VALUE = 'urn:schemas-microsoft-com:office:excel';\r\nvar LAST_TD_END_REGEX = /<\\/\\s*td\\s*>((?!<\\/\\s*tr\\s*>)[\\s\\S])*$/i;\r\nvar LAST_TR_END_REGEX = /<\\/\\s*tr\\s*>((?!<\\/\\s*table\\s*>)[\\s\\S])*$/i;\r\nvar LAST_TR_REGEX = /<tr[^>]*>[^<]*/i;\r\nvar LAST_TABLE_REGEX = /<table[^>]*>[^<]*/i;\r\nfunction fragmentHandler(doc, source) {\r\n    var _a = roosterjs_html_sanitizer_1.splitWithFragment(source), html = _a[0], before = _a[1];\r\n    var firstNode = doc && doc.body && doc.querySelector('html');\r\n    if (roosterjs_editor_dom_1.getTagOfNode(firstNode) == 'HTML') {\r\n        if (firstNode.getAttribute(WORD_ATTRIBUTE_NAME) == WORD_ATTRIBUTE_VALUE) {\r\n            doc.body.innerHTML = html;\r\n            convertPastedContentFromWord_1.default(doc);\r\n        }\r\n        else if (firstNode.getAttribute(EXCEL_ATTRIBUTE_NAME) == EXCEL_ATTRIBUTE_VALUE) {\r\n            if (html.match(LAST_TD_END_REGEX)) {\r\n                var trMatch = before.match(LAST_TR_REGEX);\r\n                var tr = trMatch ? trMatch[0] : '<TR>';\r\n                html = tr + html + '</TR>';\r\n            }\r\n            if (html.match(LAST_TR_END_REGEX)) {\r\n                var tableMatch = before.match(LAST_TABLE_REGEX);\r\n                var table = tableMatch ? tableMatch[0] : '<TABLE>';\r\n                html = table + html + '</TABLE>';\r\n            }\r\n            doc.body.innerHTML = html;\r\n            convertPastedContentFromExcel_1.default(doc);\r\n        }\r\n    }\r\n}\r\nexports.default = fragmentHandler;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_html_sanitizer_1 = require(\"roosterjs-html-sanitizer\");\r\nfunction convertPastedContentFromExcel(doc) {\r\n    var sanitizer = new roosterjs_html_sanitizer_1.HtmlSanitizer({\r\n        styleCallbacks: {\r\n            border: function (value, element) { return value != 'none' || element.style.border != 'none'; },\r\n        },\r\n        additionalAllowAttributes: ['class'],\r\n    });\r\n    sanitizer.sanitize(doc.body);\r\n    var styleNode = doc.createElement('style');\r\n    doc.body.appendChild(styleNode);\r\n    styleNode.innerHTML = 'td {border: solid 1px #d4d4d4}';\r\n    sanitizer.convertGlobalCssToInlineCss(doc);\r\n}\r\nexports.default = convertPastedContentFromExcel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar wordConverter_1 = require(\"./wordConverter\");\r\nvar WordConverterArguments_1 = require(\"./WordConverterArguments\");\r\nvar roosterjs_html_sanitizer_1 = require(\"roosterjs-html-sanitizer\");\r\nvar converterUtils_1 = require(\"./converterUtils\");\r\n/** Converts all the Word generated list items in the specified node into standard HTML UL and OL tags */\r\nfunction convertPastedContentFromWord(doc) {\r\n    var _a;\r\n    var sanitizer = new roosterjs_html_sanitizer_1.HtmlSanitizer({\r\n        elementCallbacks: (_a = {},\r\n            _a['O:P'] = function () { return false; },\r\n            _a),\r\n        additionalAllowAttributes: ['class'],\r\n    });\r\n    sanitizer.sanitize(doc.body);\r\n    var wordConverter = wordConverter_1.createWordConverter();\r\n    // First find all the nodes that we need to check for list item information\r\n    // This call will return all the p and header elements under the root node.. These are the elements that\r\n    // Word uses a list items, so we'll only process them and avoid walking the whole tree.\r\n    var elements = doc.querySelectorAll('p');\r\n    if (elements.length > 0) {\r\n        wordConverter.wordConverterArgs = WordConverterArguments_1.createWordConverterArguments(elements);\r\n        if (converterUtils_1.processNodesDiscovery(wordConverter)) {\r\n            converterUtils_1.processNodeConvert(wordConverter);\r\n        }\r\n    }\r\n}\r\nexports.default = convertPastedContentFromWord;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CustomData_1 = require(\"./CustomData\");\r\n/** create an empty WordConverter */\r\nfunction createWordConverter() {\r\n    return {\r\n        nextUniqueId: 1,\r\n        numBulletsConverted: 0,\r\n        numNumberedConverted: 0,\r\n        wordConverterArgs: null,\r\n        customData: CustomData_1.createCustomData(),\r\n    };\r\n}\r\nexports.createWordConverter = createWordConverter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LevelLists_1 = require(\"./LevelLists\");\r\n/** create an empty WordConverterArguments */\r\nfunction createWordConverterArguments(nodes) {\r\n    return {\r\n        nodes: nodes,\r\n        currentIndex: 0,\r\n        lists: {},\r\n        listItems: [],\r\n        currentListIdsByLevels: [LevelLists_1.createLevelLists()],\r\n        lastProcessedItem: null,\r\n    };\r\n}\r\nexports.createWordConverterArguments = createWordConverterArguments;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LevelLists_1 = require(\"./LevelLists\");\r\nvar CustomData_1 = require(\"./CustomData\");\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\n/** Word list metadata style name */\r\nvar LOOKUP_DEPTH = 5;\r\n/** Name for the word list id property in the custom data */\r\nvar UNIQUE_LIST_ID_CUSTOM_DATA = 'UniqueListId';\r\n/** Word list metadata style name */\r\nvar MSO_LIST_STYLE_NAME = 'mso-list';\r\n/** Regular expression to match line breaks */\r\nvar LINE_BREAKS = /[\\n|\\r]/gi;\r\n/**\r\n * Handles the pass 1: Discovery\r\n * During discovery, we'll parse the metadata out of the elements and store it in the list items dictionary.\r\n * We'll detect cases where the list items for a particular ordered list are not next to each other. Word does these\r\n * for numbered headers, and we don't want to convert those, because the numbering would be completely wrong.\r\n */\r\nfunction processNodesDiscovery(wordConverter) {\r\n    var args = wordConverter.wordConverterArgs;\r\n    while (args.currentIndex < args.nodes.length) {\r\n        var node = args.nodes.item(args.currentIndex);\r\n        // Try to get the list metadata for the specified node\r\n        var itemMetadata = getListItemMetadata(node);\r\n        if (itemMetadata) {\r\n            var levelInfo = args.currentListIdsByLevels[itemMetadata.level - 1] || LevelLists_1.createLevelLists();\r\n            args.currentListIdsByLevels[itemMetadata.level - 1] = levelInfo;\r\n            // We need to drop some list information if this is not an item next to another\r\n            if (args.lastProcessedItem && getRealPreviousSibling(node) != args.lastProcessedItem) {\r\n                // This list item is not next to the previous one. This means that there is some content in between them\r\n                // so we need to reset our list of list ids per level\r\n                resetCurrentLists(args);\r\n            }\r\n            // Get the list metadata for the list that will hold this item\r\n            var listMetadata = levelInfo.listsMetadata[itemMetadata.wordListId];\r\n            if (!listMetadata) {\r\n                // Get the first item fake bullet.. This will be used later to check what is the right type of list\r\n                var firstFakeBullet = getFakeBulletText(node, LOOKUP_DEPTH);\r\n                // This is a the first item of a list.. We'll create the list metadata using the information\r\n                // we already have from this first item\r\n                listMetadata = {\r\n                    numberOfItems: 0,\r\n                    uniqueListId: wordConverter.nextUniqueId++,\r\n                    firstFakeBullet: firstFakeBullet,\r\n                    // If the bullet we got is emtpy or not found, we ignore the list out.. this means\r\n                    // that this is not an item we need to convert of that the format doesn't match what\r\n                    // we are expecting\r\n                    ignore: !firstFakeBullet || firstFakeBullet.length == 0,\r\n                    // We'll use the first fake bullet to try to figure out which type of list we create. If this list has a second\r\n                    // item, we'll perform a better comparasion, but for one item lists, this will be check that will determine the list type\r\n                    tagName: getFakeBulletTagName(firstFakeBullet),\r\n                };\r\n                levelInfo.listsMetadata[itemMetadata.wordListId] = listMetadata;\r\n                args.lists[listMetadata.uniqueListId.toString()] = listMetadata;\r\n            }\r\n            else if (!listMetadata.ignore && listMetadata.numberOfItems == 1) {\r\n                // This is the second item we've seen for this list.. we'll compare the 2 fake bullet\r\n                // items we have an decide if we create ordered or unordered lists based on this.\r\n                // This is the best way we can do this since we cannot read the metadata that Word\r\n                // puts in the head of the HTML...\r\n                var secondFakeBullet = getFakeBulletText(node, LOOKUP_DEPTH);\r\n                listMetadata.tagName =\r\n                    listMetadata.firstFakeBullet == secondFakeBullet ? 'UL' : 'OL';\r\n            }\r\n            // Set the unique id to the list\r\n            itemMetadata.uniqueListId = listMetadata.uniqueListId;\r\n            // Check if we need to ignore this list... we'll either know already that we need to ignore\r\n            // it, or we'll know it because the previous list items are not next to this one\r\n            if (listMetadata.ignore ||\r\n                (listMetadata.tagName == 'OL' &&\r\n                    listMetadata.numberOfItems > 0 &&\r\n                    levelInfo.currentUniqueListId != itemMetadata.uniqueListId)) {\r\n                // We need to ignore this item... and we also need to forget about the lists that\r\n                // are not at the root level\r\n                listMetadata.ignore = true;\r\n                args.currentListIdsByLevels[0].currentUniqueListId = -1;\r\n                args.currentListIdsByLevels = args.currentListIdsByLevels.slice(0, 1);\r\n            }\r\n            else {\r\n                // This is an item we don't need to ignore... If added lists deep under this one before\r\n                // we'll drop their ids from the list of ids per level.. this is because this list item\r\n                // breaks the deeper lists.\r\n                if (args.currentListIdsByLevels.length > itemMetadata.level) {\r\n                    args.currentListIdsByLevels = args.currentListIdsByLevels.slice(0, itemMetadata.level);\r\n                }\r\n                levelInfo.currentUniqueListId = itemMetadata.uniqueListId;\r\n                // Add the list item into the list of items to be processed\r\n                args.listItems.push(itemMetadata);\r\n                listMetadata.numberOfItems++;\r\n            }\r\n            args.lastProcessedItem = node;\r\n        }\r\n        else {\r\n            // Here, we know that this is not a list item, but we'll want to check if it is one \"no bullet\" list items...\r\n            // these can be created by creating a bullet and hitting delete on it it... The content will continue to be indented, but there will\r\n            // be no bullet and the list will continue correctly after that. Visually, it looks like the previous item has multiple lines, but\r\n            // the HTML generated has multiple paragraphs with the same class. We'll merge these when we find them, so the logic doesn't skips\r\n            // the list conversion thinking that the list items are not together...\r\n            var last = args.lastProcessedItem;\r\n            if (last &&\r\n                getRealPreviousSibling(node) == last &&\r\n                node.tagName == last.tagName &&\r\n                node.className == last.className) {\r\n                // Add 2 line breaks and move all the nodes to the last item\r\n                last.appendChild(last.ownerDocument.createElement('br'));\r\n                last.appendChild(last.ownerDocument.createElement('br'));\r\n                while (node.firstChild != null) {\r\n                    last.appendChild(node.firstChild);\r\n                }\r\n                // Remove the item that we don't need anymore\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n        // Move to the next element are return true if more elements need to be processed\r\n        args.currentIndex++;\r\n    }\r\n    return args.listItems.length > 0;\r\n}\r\nexports.processNodesDiscovery = processNodesDiscovery;\r\n/**\r\n * Handles the pass 2: Conversion\r\n * During conversion, we'll go over the elements that belong to a list that we've marked as a list to convert, and we'll perform the\r\n * conversion needed\r\n */\r\nfunction processNodeConvert(wordConverter) {\r\n    var args = wordConverter.wordConverterArgs;\r\n    args.currentIndex = 0;\r\n    while (args.currentIndex < args.listItems.length) {\r\n        var metadata = args.listItems[args.currentIndex];\r\n        var node = metadata.originalNode;\r\n        var listMetadata = args.lists[metadata.uniqueListId.toString()];\r\n        if (!listMetadata.ignore) {\r\n            // We have a list item that we need to convert, get or create the list\r\n            // that hold this item out\r\n            var list = getOrCreateListForNode(wordConverter, node, metadata, listMetadata);\r\n            if (list) {\r\n                // Clean the element out.. this call gets rid of the fake bullet and unneeded nodes\r\n                cleanupListIgnore(node, LOOKUP_DEPTH);\r\n                // Create a new list item and transfer the children\r\n                var li = node.ownerDocument.createElement('LI');\r\n                while (node.firstChild) {\r\n                    li.appendChild(node.firstChild);\r\n                }\r\n                // Append the list item into the list\r\n                list.appendChild(li);\r\n                // Remove the node we just converted\r\n                node.parentNode.removeChild(node);\r\n                if (listMetadata.tagName == 'UL') {\r\n                    wordConverter.numBulletsConverted++;\r\n                }\r\n                else {\r\n                    wordConverter.numNumberedConverted++;\r\n                }\r\n            }\r\n        }\r\n        args.currentIndex++;\r\n    }\r\n    return wordConverter.numBulletsConverted > 0 || wordConverter.numNumberedConverted > 0;\r\n}\r\nexports.processNodeConvert = processNodeConvert;\r\n/**\r\n * Gets or creates the list (UL or OL) that holds this item out based on the\r\n * items content and the specified metadata\r\n */\r\nfunction getOrCreateListForNode(wordConverter, node, metadata, listMetadata) {\r\n    // First get the last list next to this node under the specified level. This code\r\n    // path will return the list or will create lists if needed\r\n    var list = recurringGetOrCreateListAtNode(node, metadata.level, listMetadata);\r\n    // Here use the unique list ID to detect if we have the right list...\r\n    // it is possible to have 2 different lists next to each other with different formats, so\r\n    // we want to detect this an create separate lists for those cases\r\n    var listId = CustomData_1.getObject(wordConverter.customData, list, UNIQUE_LIST_ID_CUSTOM_DATA);\r\n    // If we have a list with and ID, but the ID is different than the ID for this list item, this\r\n    // is a completely new list, so we'll append a new list for that\r\n    if ((listId && listId != metadata.uniqueListId) || (!listId && list.firstChild)) {\r\n        var newList = node.ownerDocument.createElement(listMetadata.tagName);\r\n        list.parentNode.insertBefore(newList, list.nextSibling);\r\n        list = newList;\r\n    }\r\n    // Set the list id into the custom data\r\n    CustomData_1.setObject(wordConverter.customData, list, UNIQUE_LIST_ID_CUSTOM_DATA, metadata.uniqueListId);\r\n    // This call will convert the list if needed to the right type of list required. This can happen\r\n    // on the cases where the first list item for this list is located after a deeper list. for that\r\n    // case, we will have created a UL for it, and we may need to convert it\r\n    return convertListIfNeeded(wordConverter, list, listMetadata);\r\n}\r\n/**\r\n * Converts the list between UL and OL if needed, by using the fake bullet and\r\n * information already stored in the list itself\r\n */\r\nfunction convertListIfNeeded(wordConverter, list, listMetadata) {\r\n    // Check if we need to convert the list out\r\n    if (listMetadata.tagName != roosterjs_editor_dom_1.getTagOfNode(list)) {\r\n        // We have the wrong list type.. convert it, set the id again and tranfer all the childs\r\n        var newList = list.ownerDocument.createElement(listMetadata.tagName);\r\n        CustomData_1.setObject(wordConverter.customData, newList, UNIQUE_LIST_ID_CUSTOM_DATA, CustomData_1.getObject(wordConverter.customData, list, UNIQUE_LIST_ID_CUSTOM_DATA));\r\n        while (list.firstChild) {\r\n            newList.appendChild(list.firstChild);\r\n        }\r\n        list.parentNode.insertBefore(newList, list);\r\n        list.parentNode.removeChild(list);\r\n        list = newList;\r\n    }\r\n    return list;\r\n}\r\n/**\r\n * Gets or creates the specified list\r\n */\r\nfunction recurringGetOrCreateListAtNode(node, level, listMetadata) {\r\n    var parent = null;\r\n    var possibleList;\r\n    if (level == 1) {\r\n        // Root case, we'll check if the list is the previous sibling of the node\r\n        possibleList = getRealPreviousSibling(node);\r\n    }\r\n    else {\r\n        // If we get here, we are looking for level 2 or deeper... get the upper list\r\n        // and check if the last element is a list\r\n        parent = recurringGetOrCreateListAtNode(node, level - 1, null);\r\n        possibleList = parent.lastChild;\r\n    }\r\n    // Check the element that we got and verify that it is a list\r\n    if (possibleList && possibleList.nodeType == 1 /* Element */) {\r\n        var tag = roosterjs_editor_dom_1.getTagOfNode(possibleList);\r\n        if (tag == 'UL' || tag == 'OL') {\r\n            // We have a list.. use it\r\n            return possibleList;\r\n        }\r\n    }\r\n    // If we get here, it means we don't have a list and we need to create one\r\n    // this code path will always create new lists as UL lists\r\n    var newList = node.ownerDocument.createElement(listMetadata ? listMetadata.tagName : 'UL');\r\n    if (level == 1) {\r\n        // For level 1, we'll insert the list beofre the node\r\n        node.parentNode.insertBefore(newList, node);\r\n    }\r\n    else {\r\n        // Any level 2 or above, we insert the list as the last\r\n        // child of the upper level list\r\n        parent.appendChild(newList);\r\n    }\r\n    return newList;\r\n}\r\n/**\r\n * Cleans up the node children by removing the childs marked as mso-list: Ignore.\r\n * This nodes hold the fake bullet information that Word puts in and when\r\n * conversion is happening, we want to get rid of these elements\r\n */\r\nfunction cleanupListIgnore(node, levels) {\r\n    var nodesToRemove = [];\r\n    for (var child = node.firstChild; child; child = child.nextSibling) {\r\n        // Clean up the item internally first if we need to based on the number of levels\r\n        if (child.nodeType == 1 /* Element */ && levels > 1) {\r\n            cleanupListIgnore(child, levels - 1);\r\n        }\r\n        // Try to convert word comments into ignore elements if we haven't done so for this element\r\n        child = fixWordListComments(child, true /*removeComments*/);\r\n        // Check if we can remove this item out\r\n        if (isEmptySpan(child) || isIgnoreNode(child)) {\r\n            nodesToRemove.push(child);\r\n        }\r\n    }\r\n    nodesToRemove.forEach(function (child) { return node.removeChild(child); });\r\n}\r\n/**\r\n * Reads the word list metadada out of the specified node. If the node\r\n * is not a Word list item, it returns null.\r\n */\r\nfunction getListItemMetadata(node) {\r\n    if (node.nodeType == 1 /* Element */) {\r\n        var listatt = getStyleValue(node, MSO_LIST_STYLE_NAME);\r\n        if (listatt && listatt.length > 0) {\r\n            try {\r\n                // Word mso-list property holds 3 space separated values in the following format: lst1 level1 lfo0\r\n                // Where:\r\n                // (0) List identified for the metadata in the <head> of the document. We cannot read the <head> metada\r\n                // (1) Level of the list. This also maps to the <head> metadata that we cannot read, but\r\n                // for almost all cases, it maps to the list identation (or level). We'll use it as the\r\n                // list indentation value\r\n                // (2) Contains a specific list identifier.\r\n                // Example value: \"l0 level1 lfo1\"\r\n                var listprops = listatt.split(' ');\r\n                if (listprops.length == 3) {\r\n                    return {\r\n                        level: parseInt(listprops[1].substr('level'.length)),\r\n                        wordListId: listatt,\r\n                        originalNode: node,\r\n                        uniqueListId: 0,\r\n                    };\r\n                }\r\n            }\r\n            catch (e) { }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction isFakeBullet(fakeBullet) {\r\n    return ['o', '·', '§', '-'].indexOf(fakeBullet) >= 0;\r\n}\r\n/** Given a fake bullet text, returns the type of list that should be used for it */\r\nfunction getFakeBulletTagName(fakeBullet) {\r\n    return isFakeBullet(fakeBullet) ? 'UL' : 'OL';\r\n}\r\n/**\r\n * Finds the fake bullet text out of the specified node and returns it. For images, it will return\r\n * a bullet string. If not found, it returns null...\r\n */\r\nfunction getFakeBulletText(node, levels) {\r\n    // Word uses the following format for their bullets:\r\n    // <p style=\"mso-list:l1 level1 lfo2\">\r\n    // <span style=\"...\">\r\n    // <span style=\"mso-list:Ignore\">1.<span style=\"...\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>\r\n    // </span>\r\n    // Content here...\r\n    // </p>\r\n    //\r\n    // Basically, we need to locate the mso-list:Ignore SPAN, which holds either one text or image node. That\r\n    // text or image node will be the fake bullet we are looking for\r\n    var result = null;\r\n    var child = node.firstChild;\r\n    while (!result && child) {\r\n        // First, check if we need to convert the Word list comments into real elements\r\n        child = fixWordListComments(child, true /*removeComments*/);\r\n        // Check if this is the node that holds the fake bullets (mso-list: Ignore)\r\n        if (isIgnoreNode(child)) {\r\n            // Yes... this is the node that holds either the text or image data\r\n            result = child.textContent.trim();\r\n            // This is the case for image case\r\n            if (result.length == 0) {\r\n                result = 'o';\r\n            }\r\n        }\r\n        else if (child.nodeType == 1 /* Element */ && levels > 1) {\r\n            // If this is an element and we are not in the last level, try to get the fake bullet\r\n            // out of the child\r\n            result = getFakeBulletText(child, levels - 1);\r\n        }\r\n        child = child.nextSibling;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * If the specified element is a Word List comments, this code verifies and fixes\r\n * the markup when needed to ensure that Chrome bullet conversions work as expected\r\n * -----\r\n * We'll convert <!--[if !supportLists]--> and <!--[endif]--> comments into\r\n * <span style=\"mso-list:Ignore\"></span>... Chrome has a bug where it drops the\r\n * styles of the span, but we'll use these comments to recreate them out\r\n */\r\nfunction fixWordListComments(child, removeComments) {\r\n    if (child.nodeType == 8 /* Comment */) {\r\n        var value = child.data;\r\n        if (value && value.trim().toLowerCase() == '[if !supportlists]') {\r\n            // We have a list ignore start, find the end.. We know is not more than\r\n            // 3 nodes away, so we'll optimize our checks\r\n            var nextElement = child;\r\n            var endComment = null;\r\n            for (var j = 0; j < 4; j++) {\r\n                nextElement = getRealNextSibling(nextElement);\r\n                if (!nextElement) {\r\n                    break;\r\n                }\r\n                if (nextElement.nodeType == 8 /* Comment */) {\r\n                    value = nextElement.data;\r\n                    if (value && value.trim().toLowerCase() == '[endif]') {\r\n                        endComment = nextElement;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // if we found the end node, wrap everything out\r\n            if (endComment) {\r\n                var newSpan = child.ownerDocument.createElement('span');\r\n                newSpan.setAttribute('style', 'mso-list: ignore');\r\n                nextElement = getRealNextSibling(child);\r\n                while (nextElement != endComment) {\r\n                    nextElement = nextElement.nextSibling;\r\n                    newSpan.appendChild(nextElement.previousSibling);\r\n                }\r\n                // Insert the element out and use that one as the current child\r\n                endComment.parentNode.insertBefore(newSpan, endComment);\r\n                // Remove the comments out if the call specified it out\r\n                if (removeComments) {\r\n                    child.parentNode.removeChild(child);\r\n                    endComment.parentNode.removeChild(endComment);\r\n                }\r\n                // Last, make sure we return the new element out instead of the comment\r\n                child = newSpan;\r\n            }\r\n        }\r\n    }\r\n    return child;\r\n}\r\n/** Finds the real previous sibling, ignoring emtpy text nodes */\r\nfunction getRealPreviousSibling(node) {\r\n    var prevSibling = node;\r\n    do {\r\n        prevSibling = prevSibling.previousSibling;\r\n    } while (prevSibling && isEmptyTextNode(prevSibling));\r\n    return prevSibling;\r\n}\r\n/** Finds the real next sibling, ignoring empty text nodes */\r\nfunction getRealNextSibling(node) {\r\n    var nextSibling = node;\r\n    do {\r\n        nextSibling = nextSibling.nextSibling;\r\n    } while (nextSibling && isEmptyTextNode(nextSibling));\r\n    return nextSibling;\r\n}\r\n/**\r\n * Checks if the specified node is marked as a mso-list: Ignore. These\r\n * nodes need to be ignored when a list item is converted into standard\r\n * HTML lists\r\n */\r\nfunction isIgnoreNode(node) {\r\n    if (node.nodeType == 1 /* Element */) {\r\n        var listatt = getStyleValue(node, MSO_LIST_STYLE_NAME);\r\n        if (listatt && listatt.length > 0 && listatt.trim().toLowerCase() == 'ignore') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/** Checks if the specified node is an empty span. */\r\nfunction isEmptySpan(node) {\r\n    return roosterjs_editor_dom_1.getTagOfNode(node) == 'SPAN' && !node.firstChild;\r\n}\r\n/** Reads the specified style value from the node */\r\nfunction getStyleValue(node, styleName) {\r\n    // Word uses non-standard names for the metadata that puts in the style of the element...\r\n    // Most browsers will not provide the information for those unstandard values throug the node.style\r\n    // property, so the only reliable way to read them is to get the attribute directly and do\r\n    // the required parsing..\r\n    var textStyle = node.getAttribute('style');\r\n    if (textStyle && textStyle.length > 0 && textStyle.indexOf(styleName) >= 0) {\r\n        // Split all the CSS name: value pairs\r\n        var inStyles = textStyle.split(';');\r\n        for (var i = 0; i < inStyles.length; i++) {\r\n            // Split the name and value\r\n            var nvpair = inStyles[i].split(':');\r\n            if (nvpair.length == 2 && nvpair[0].trim() == styleName) {\r\n                return nvpair[1].trim();\r\n            }\r\n        }\r\n    }\r\n    // As a backup mechanism, we'll still try to get the value from the style object\r\n    // Dictionary styles = (Dictionary)(object)node.Style;\r\n    // return (string)styles[styleName];\r\n    return null;\r\n}\r\n/** Checks if the node is an empty text node that can be ignored */\r\nfunction isEmptyTextNode(node) {\r\n    // No node is empty\r\n    if (!node) {\r\n        return true;\r\n    }\r\n    // Empty text node is empty\r\n    if (node.nodeType == 3 /* Text */) {\r\n        var value = node.nodeValue;\r\n        value = value.replace(LINE_BREAKS, '');\r\n        return value.trim().length == 0;\r\n    }\r\n    // Span or Font with an empty child node is empty\r\n    var tagName = roosterjs_editor_dom_1.getTagOfNode(node);\r\n    if (node.firstChild == node.lastChild && (tagName == 'SPAN' || tagName == 'FONT')) {\r\n        return isEmptyTextNode(node.firstChild);\r\n    }\r\n    // If not found, then this is not empty\r\n    return false;\r\n}\r\n/** Resets the list */\r\nfunction resetCurrentLists(args) {\r\n    for (var i = 0; i < args.currentListIdsByLevels.length; i++) {\r\n        var ll = args.currentListIdsByLevels[i];\r\n        if (ll) {\r\n            ll.currentUniqueListId = -1;\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar WATERMARK_SPAN_ID = '_rooster_watermarkSpan';\r\nvar WATERMARK_REGEX = new RegExp(\"<span[^>]*id=['\\\"]?\" + WATERMARK_SPAN_ID + \"['\\\"]?[^>]*>[^<]*</span>\", 'ig');\r\n/**\r\n * A watermark plugin to manage watermark string for roosterjs\r\n */\r\nvar Watermark = /** @class */ (function () {\r\n    /**\r\n     * Create an instance of Watermark plugin\r\n     * @param watermark The watermark string\r\n     */\r\n    function Watermark(watermark, format) {\r\n        var _this = this;\r\n        this.watermark = watermark;\r\n        this.format = format;\r\n        this.handleWatermark = function () {\r\n            _this.showHideWatermark(false /*ignoreCachedState*/);\r\n        };\r\n        this.format = this.format || {\r\n            fontSize: '14px',\r\n            textColor: '#aaa',\r\n        };\r\n    }\r\n    Watermark.prototype.initialize = function (editor) {\r\n        this.editor = editor;\r\n        this.showHideWatermark(false /*ignoreCachedState*/);\r\n        this.focusDisposer = this.editor.addDomEventHandler('focus', this.handleWatermark);\r\n        this.blurDisposer = this.editor.addDomEventHandler('blur', this.handleWatermark);\r\n    };\r\n    Watermark.prototype.dispose = function () {\r\n        this.focusDisposer();\r\n        this.blurDisposer();\r\n        this.focusDisposer = null;\r\n        this.blurDisposer = null;\r\n        this.hideWatermark();\r\n        this.editor = null;\r\n    };\r\n    Watermark.prototype.onPluginEvent = function (event) {\r\n        if (event.eventType == 6 /* ContentChanged */) {\r\n            // When content is changed from setContent() API, current cached state\r\n            // may not be accurate, so we ignore it\r\n            this.showHideWatermark(event.source == \"SetContent\" /* SetContent */);\r\n        }\r\n        else if (event.eventType == 7 /* ExtractContent */ && this.isWatermarkShowing) {\r\n            this.removeWartermarkFromHtml(event);\r\n        }\r\n    };\r\n    Watermark.prototype.showHideWatermark = function (ignoreCachedState) {\r\n        if (this.editor.hasFocus() && (ignoreCachedState || this.isWatermarkShowing)) {\r\n            this.hideWatermark();\r\n            this.editor.focus();\r\n        }\r\n        else if (!this.editor.hasFocus() &&\r\n            (ignoreCachedState || !this.isWatermarkShowing) &&\r\n            this.editor.isEmpty(true /*trim*/)) {\r\n            this.showWatermark();\r\n        }\r\n    };\r\n    Watermark.prototype.showWatermark = function () {\r\n        var document = this.editor.getDocument();\r\n        var watermarkNode = roosterjs_editor_dom_1.wrap(document.createTextNode(this.watermark), \"<span id=\\\"\" + WATERMARK_SPAN_ID + \"\\\"></span>\");\r\n        roosterjs_editor_dom_1.applyFormat(watermarkNode, this.format);\r\n        this.editor.insertNode(watermarkNode, {\r\n            position: 0 /* Begin */,\r\n            updateCursor: false,\r\n            replaceSelection: false,\r\n            insertOnNewLine: false,\r\n        });\r\n        this.isWatermarkShowing = true;\r\n    };\r\n    Watermark.prototype.hideWatermark = function () {\r\n        var _this = this;\r\n        this.editor.queryElements(\"span[id=\\\"\" + WATERMARK_SPAN_ID + \"\\\"]\", function (span) {\r\n            return _this.editor.deleteNode(span);\r\n        });\r\n        this.isWatermarkShowing = false;\r\n    };\r\n    Watermark.prototype.removeWartermarkFromHtml = function (event) {\r\n        var content = event.content;\r\n        content = content.replace(WATERMARK_REGEX, '');\r\n        event.content = content;\r\n    };\r\n    return Watermark;\r\n}());\r\nexports.default = Watermark;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar TABLE_RESIZE_HANDLE_KEY = 'TABLE_RESIZE_HANDLE';\r\nvar HANDLE_WIDTH = 6;\r\nvar CONTAINER_HTML = \"<div style=\\\"position: fixed; cursor: col-resize; width: \" + HANDLE_WIDTH + \"px; border: solid 0 #C6C6C6;\\\"></div>\";\r\nvar TableResize = /** @class */ (function () {\r\n    function TableResize(isRtl) {\r\n        var _this = this;\r\n        this.pageX = -1;\r\n        this.onMouseOver = function (e) {\r\n            var node = (e.srcElement || e.target);\r\n            if (_this.pageX < 0 &&\r\n                node &&\r\n                (node.tagName == 'TD' || node.tagName == 'TH') &&\r\n                node != _this.td) {\r\n                _this.td = node;\r\n                _this.calcAndShowHandle();\r\n            }\r\n        };\r\n        this.onMouseDown = function (e) {\r\n            if (!_this.editor || _this.editor.isDisposed()) {\r\n                return;\r\n            }\r\n            _this.pageX = e.pageX;\r\n            _this.initialPageX = e.pageX;\r\n            _this.attachMouseEvents();\r\n            var handle = _this.getResizeHandle();\r\n            handle.style.borderWidth = '0 1px';\r\n            _this.cancelEvent(e);\r\n        };\r\n        this.onMouseMove = function (e) {\r\n            _this.adjustHandle(e.pageX);\r\n            _this.cancelEvent(e);\r\n        };\r\n        this.onMouseUp = function (e) {\r\n            _this.detachMouseEvents();\r\n            var handle = _this.getResizeHandle();\r\n            handle.style.borderWidth = '0';\r\n            var table = _this.editor.getElementAtCursor('TABLE', _this.td);\r\n            var cellPadding = parseInt(table.cellPadding);\r\n            cellPadding = isNaN(cellPadding) ? 0 : cellPadding;\r\n            if (e.pageX != _this.initialPageX) {\r\n                var newWidth_1 = _this.td.clientWidth -\r\n                    cellPadding * 2 +\r\n                    (e.pageX - _this.initialPageX) * (_this.isRtl(table) ? -1 : 1);\r\n                _this.editor.addUndoSnapshot(function (start, end) {\r\n                    _this.setTableColumnWidth(newWidth_1 + 'px');\r\n                    _this.editor.select(start, end);\r\n                }, \"Format\" /* Format */);\r\n            }\r\n            _this.pageX = -1;\r\n            _this.calcAndShowHandle();\r\n            _this.editor.focus();\r\n            _this.cancelEvent(e);\r\n        };\r\n    }\r\n    TableResize.prototype.initialize = function (editor) {\r\n        this.editor = editor;\r\n        this.onMouseOverDisposer = this.editor.addDomEventHandler('mouseover', this.onMouseOver);\r\n    };\r\n    TableResize.prototype.dispose = function () {\r\n        this.detachMouseEvents();\r\n        this.editor = null;\r\n        this.onMouseOverDisposer();\r\n    };\r\n    TableResize.prototype.onPluginEvent = function (event) {\r\n        if (this.td &&\r\n            (event.eventType == 0 /* KeyDown */ ||\r\n                event.eventType == 6 /* ContentChanged */ ||\r\n                (event.eventType == 4 /* MouseDown */ && !this.clickIntoCurrentTd(event)))) {\r\n            this.td = null;\r\n            this.calcAndShowHandle();\r\n        }\r\n    };\r\n    TableResize.prototype.clickIntoCurrentTd = function (event) {\r\n        var mouseEvent = event.rawEvent;\r\n        var target = mouseEvent.target;\r\n        return (target instanceof Node &&\r\n            roosterjs_editor_dom_1.contains(this.td, target, true /*treatSameNodeAsContain*/));\r\n    };\r\n    TableResize.prototype.calcAndShowHandle = function () {\r\n        if (this.td) {\r\n            var tr = this.editor.getElementAtCursor('TR', this.td);\r\n            var table = this.editor.getElementAtCursor('TABLE', tr);\r\n            if (tr && table) {\r\n                var _a = this.getPosition(table), left = _a[0], top_1 = _a[1];\r\n                var handle = this.getResizeHandle();\r\n                left +=\r\n                    this.td.offsetLeft +\r\n                        (this.isRtl(table) ? 0 : this.td.offsetWidth - HANDLE_WIDTH);\r\n                handle.style.display = '';\r\n                handle.style.top = top_1 + 'px';\r\n                handle.style.height = table.offsetHeight + 'px';\r\n                handle.style.left = left + 'px';\r\n            }\r\n        }\r\n        else {\r\n            this.getResizeHandle().style.display = 'none';\r\n        }\r\n    };\r\n    TableResize.prototype.adjustHandle = function (pageX) {\r\n        var handle = this.getResizeHandle();\r\n        handle.style.left = handle.offsetLeft + pageX - this.pageX + 'px';\r\n        this.pageX = pageX;\r\n    };\r\n    TableResize.prototype.getPosition = function (e) {\r\n        var parent = e.offsetParent;\r\n        var _a = parent ? this.getPosition(parent) : [0, 0], left = _a[0], top = _a[1];\r\n        return [left + e.offsetLeft - e.scrollLeft, top + e.offsetTop - e.scrollTop];\r\n    };\r\n    TableResize.prototype.getResizeHandle = function () {\r\n        var _this = this;\r\n        return this.editor.getCustomData(TABLE_RESIZE_HANDLE_KEY, function () {\r\n            var document = _this.editor.getDocument();\r\n            var handle = roosterjs_editor_dom_1.fromHtml(CONTAINER_HTML, document)[0];\r\n            _this.editor.insertNode(handle, {\r\n                position: 3 /* Outside */,\r\n                updateCursor: false,\r\n                replaceSelection: false,\r\n                insertOnNewLine: false,\r\n            });\r\n            handle.addEventListener('mousedown', _this.onMouseDown);\r\n            return handle;\r\n        }, function (handle) {\r\n            handle.removeEventListener('mousedown', _this.onMouseDown);\r\n            handle.parentNode.removeChild(handle);\r\n        });\r\n    };\r\n    TableResize.prototype.cancelEvent = function (e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    };\r\n    TableResize.prototype.attachMouseEvents = function () {\r\n        if (this.editor && !this.editor.isDisposed()) {\r\n            var document_1 = this.editor.getDocument();\r\n            document_1.addEventListener('mousemove', this.onMouseMove, true);\r\n            document_1.addEventListener('mouseup', this.onMouseUp, true);\r\n        }\r\n    };\r\n    TableResize.prototype.detachMouseEvents = function () {\r\n        if (this.editor && !this.editor.isDisposed()) {\r\n            var document_2 = this.editor.getDocument();\r\n            document_2.removeEventListener('mousemove', this.onMouseMove, true);\r\n            document_2.removeEventListener('mouseup', this.onMouseUp, true);\r\n        }\r\n    };\r\n    TableResize.prototype.setTableColumnWidth = function (width) {\r\n        var _this = this;\r\n        var vtable = new roosterjs_editor_dom_1.VTable(this.td);\r\n        vtable.table.style.width = '';\r\n        vtable.table.width = '';\r\n        vtable.forEachCellOfCurrentColumn(function (cell) {\r\n            if (cell.td) {\r\n                cell.td.style.width = cell.td == _this.td ? width : '';\r\n            }\r\n        });\r\n        vtable.writeBack();\r\n        return this.editor.contains(this.td) ? this.td : vtable.getCurrentTd();\r\n    };\r\n    TableResize.prototype.isRtl = function (element) {\r\n        return roosterjs_editor_dom_1.getComputedStyle(element, 'direction') == 'rtl';\r\n    };\r\n    return TableResize;\r\n}());\r\nexports.default = TableResize;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_dom_1 = require(\"roosterjs-editor-dom\");\r\nvar BEGIN_TAG = 'RoosterJsImageResizingBegin';\r\nvar END_TAG = 'RoosterJsImageResizingEnd';\r\nvar EXTRACT_HTML_REGEX = new RegExp(\"<!--\" + BEGIN_TAG + \"-->[\\\\s\\\\S]*(<img\\\\s[^>]+>)[\\\\s\\\\S]*<!--\" + END_TAG + \"-->\", 'gim');\r\nvar DELETE_KEYCODE = 46;\r\nvar BACKSPACE_KEYCODE = 8;\r\nvar SHIFT_KEYCODE = 16;\r\nvar CTRL_KEYCODE = 17;\r\nvar ALT_KEYCODE = 18;\r\nvar ImageResize = /** @class */ (function () {\r\n    /**\r\n     * Create a new instance of ImageResize\r\n     * @param minWidth Minimum width of image when resize in pixel, default value is 10\r\n     * @param minHeight Minimum height of image when resize in pixel, default value is 10\r\n     * @param selectionBorderColor Color of resize border and handles, default value is #DB626C\r\n     * @param forcePreserveRatio Whether always preserve width/height ratio when resize, default value is false\r\n     * @param resizableImageSelector Selector for picking which image is resizable (e.g. for all images not placeholders), note\r\n     * that the tag must be IMG regardless what the selector is\r\n     */\r\n    function ImageResize(minWidth, minHeight, selectionBorderColor, forcePreserveRatio, resizableImageSelector) {\r\n        if (minWidth === void 0) { minWidth = 10; }\r\n        if (minHeight === void 0) { minHeight = 10; }\r\n        if (selectionBorderColor === void 0) { selectionBorderColor = '#DB626C'; }\r\n        if (forcePreserveRatio === void 0) { forcePreserveRatio = false; }\r\n        if (resizableImageSelector === void 0) { resizableImageSelector = 'img'; }\r\n        var _this = this;\r\n        this.minWidth = minWidth;\r\n        this.minHeight = minHeight;\r\n        this.selectionBorderColor = selectionBorderColor;\r\n        this.forcePreserveRatio = forcePreserveRatio;\r\n        this.resizableImageSelector = resizableImageSelector;\r\n        this.startResize = function (e) {\r\n            var img = _this.getSelectedImage();\r\n            if (_this.editor && img) {\r\n                _this.startPageX = e.pageX;\r\n                _this.startPageY = e.pageY;\r\n                _this.startWidth = img.clientWidth;\r\n                _this.startHeight = img.clientHeight;\r\n                _this.editor.addUndoSnapshot();\r\n                var document_1 = _this.editor.getDocument();\r\n                document_1.addEventListener('mousemove', _this.doResize, true /*useCapture*/);\r\n                document_1.addEventListener('mouseup', _this.finishResize, true /*useCapture*/);\r\n                _this.direction = (e.srcElement || e.target).style.cursor;\r\n            }\r\n            _this.stopEvent(e);\r\n        };\r\n        this.doResize = function (e) {\r\n            var img = _this.getSelectedImage();\r\n            if (_this.editor && img) {\r\n                var widthChange = e.pageX - _this.startPageX;\r\n                var heightChange = e.pageY - _this.startPageY;\r\n                var newWidth = Math.max(_this.startWidth + (_this.isWest(_this.direction) ? -widthChange : widthChange), _this.minWidth);\r\n                var newHeight = Math.max(_this.startHeight + (_this.isNorth(_this.direction) ? -heightChange : heightChange), _this.minHeight);\r\n                if (_this.forcePreserveRatio || e.shiftKey) {\r\n                    var ratio = _this.startWidth > 0 && _this.startHeight > 0\r\n                        ? (_this.startWidth * 1.0) / _this.startHeight\r\n                        : 0;\r\n                    if (ratio > 0) {\r\n                        if (newWidth < newHeight * ratio) {\r\n                            newWidth = newHeight * ratio;\r\n                        }\r\n                        else {\r\n                            newHeight = newWidth / ratio;\r\n                        }\r\n                    }\r\n                }\r\n                img.style.width = newWidth + 'px';\r\n                img.style.height = newHeight + 'px';\r\n            }\r\n            _this.stopEvent(e);\r\n        };\r\n        this.finishResize = function (e) {\r\n            var img = _this.getSelectedImage();\r\n            if (_this.editor && img) {\r\n                var document_2 = _this.editor.getDocument();\r\n                document_2.removeEventListener('mousemove', _this.doResize, true /*useCapture*/);\r\n                document_2.removeEventListener('mouseup', _this.finishResize, true /*useCapture*/);\r\n                var width = img.clientWidth;\r\n                var height = img.clientHeight;\r\n                img.style.width = width + 'px';\r\n                img.style.height = height + 'px';\r\n                img.width = width;\r\n                img.height = height;\r\n                _this.resizeDiv.style.width = '';\r\n                _this.resizeDiv.style.height = '';\r\n            }\r\n            _this.direction = null;\r\n            _this.editor.addUndoSnapshot();\r\n            _this.editor.triggerContentChangedEvent(\"ImageResize\" /* ImageResize */);\r\n            _this.stopEvent(e);\r\n        };\r\n        this.stopEvent = function (e) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        };\r\n        this.removeResizeDivIfAny = function (img) {\r\n            var div = img && img.parentNode;\r\n            var previous = div && div.previousSibling;\r\n            var next = div && div.nextSibling;\r\n            if (previous &&\r\n                previous.nodeType == 8 /* Comment */ &&\r\n                previous.nodeValue == BEGIN_TAG &&\r\n                next &&\r\n                next.nodeType == 8 /* Comment */ &&\r\n                next.nodeValue == END_TAG) {\r\n                div.parentNode.insertBefore(img, div);\r\n                _this.removeResizeDiv(div);\r\n            }\r\n        };\r\n        this.onBlur = function (e) {\r\n            _this.hideResizeHandle();\r\n        };\r\n        this.onDragStart = function (e) {\r\n            if ((e.srcElement || e.target) == _this.getSelectedImage()) {\r\n                _this.hideResizeHandle(true);\r\n            }\r\n        };\r\n    }\r\n    ImageResize.prototype.initialize = function (editor) {\r\n        this.editor = editor;\r\n        this.disposers = [\r\n            editor.addDomEventHandler('dragstart', this.onDragStart),\r\n            editor.addDomEventHandler('blur', this.onBlur),\r\n        ];\r\n    };\r\n    ImageResize.prototype.dispose = function () {\r\n        if (this.resizeDiv) {\r\n            this.hideResizeHandle();\r\n        }\r\n        this.disposers.forEach(function (disposer) { return disposer(); });\r\n        this.disposers = null;\r\n        this.editor = null;\r\n    };\r\n    ImageResize.prototype.onPluginEvent = function (e) {\r\n        var _this = this;\r\n        if (e.eventType == 4 /* MouseDown */) {\r\n            var event_1 = e.rawEvent;\r\n            var target = (event_1.srcElement || event_1.target);\r\n            if (roosterjs_editor_dom_1.getTagOfNode(target) == 'IMG') {\r\n                var parent_1 = target.parentNode;\r\n                var elements = parent_1\r\n                    ? [].slice.call(parent_1.querySelectorAll(this.resizableImageSelector))\r\n                    : [];\r\n                if (elements.indexOf(target) < 0) {\r\n                    return;\r\n                }\r\n                target.contentEditable = 'false';\r\n                var currentImg = this.getSelectedImage();\r\n                if (currentImg && currentImg != target) {\r\n                    this.hideResizeHandle();\r\n                }\r\n                if (!this.resizeDiv) {\r\n                    this.showResizeHandle(target);\r\n                }\r\n            }\r\n            else if (this.resizeDiv && !roosterjs_editor_dom_1.contains(this.resizeDiv, target)) {\r\n                this.hideResizeHandle();\r\n            }\r\n        }\r\n        else if (e.eventType == 0 /* KeyDown */ && this.resizeDiv) {\r\n            var event_2 = e.rawEvent;\r\n            if (event_2.which == DELETE_KEYCODE || event_2.which == BACKSPACE_KEYCODE) {\r\n                this.editor.addUndoSnapshot(function () {\r\n                    _this.removeResizeDiv(_this.resizeDiv);\r\n                });\r\n                this.resizeDiv = null;\r\n                event_2.preventDefault();\r\n                this.resizeDiv = null;\r\n            }\r\n            else if (event_2.which != SHIFT_KEYCODE &&\r\n                event_2.which != CTRL_KEYCODE &&\r\n                event_2.which != ALT_KEYCODE) {\r\n                this.hideResizeHandle();\r\n            }\r\n        }\r\n        else if (e.eventType == 6 /* ContentChanged */ &&\r\n            e.source != \"ImageResize\" /* ImageResize */) {\r\n            this.editor.queryElements('img', this.removeResizeDivIfAny);\r\n            this.resizeDiv = null;\r\n        }\r\n        else if (e.eventType == 7 /* ExtractContent */) {\r\n            var event_3 = e;\r\n            event_3.content = this.extractHtml(event_3.content);\r\n        }\r\n    };\r\n    /**\r\n     * Select a given IMG element, show the resize handle\r\n     * @param img The IMG element to select\r\n     */\r\n    ImageResize.prototype.showResizeHandle = function (img) {\r\n        this.resizeDiv = this.createResizeDiv(img);\r\n        img.contentEditable = 'false';\r\n        this.editor.select(this.resizeDiv, -3 /* After */);\r\n    };\r\n    /**\r\n     * Hide resize handle of current selected image\r\n     * @param selectImageAfterUnSelect Optional, when set to true, select the image element after hide the resize handle\r\n     */\r\n    ImageResize.prototype.hideResizeHandle = function (selectImageAfterUnSelect) {\r\n        var img = this.getSelectedImage();\r\n        var parent = this.resizeDiv && this.resizeDiv.parentNode;\r\n        if (parent) {\r\n            if (img) {\r\n                img.removeAttribute('contentEditable');\r\n                var referenceNode = this.resizeDiv.previousSibling &&\r\n                    this.resizeDiv.previousSibling.nodeType == 8 /* Comment */\r\n                    ? this.resizeDiv.previousSibling\r\n                    : this.resizeDiv;\r\n                parent.insertBefore(img, referenceNode);\r\n                if (selectImageAfterUnSelect) {\r\n                    this.editor.select(img);\r\n                }\r\n                else {\r\n                    this.editor.select(img, -3 /* After */);\r\n                }\r\n            }\r\n            this.removeResizeDiv(this.resizeDiv);\r\n            this.resizeDiv = null;\r\n        }\r\n    };\r\n    ImageResize.prototype.createResizeDiv = function (target) {\r\n        var _this = this;\r\n        var document = this.editor.getDocument();\r\n        var resizeDiv = document.createElement('DIV');\r\n        var parent = target.parentNode;\r\n        parent.insertBefore(resizeDiv, target);\r\n        parent.insertBefore(document.createComment(BEGIN_TAG), resizeDiv);\r\n        parent.insertBefore(document.createComment(END_TAG), resizeDiv.nextSibling);\r\n        resizeDiv.style.position = 'relative';\r\n        resizeDiv.style.display = 'inline-flex';\r\n        resizeDiv.contentEditable = 'false';\r\n        resizeDiv.addEventListener('click', this.stopEvent);\r\n        resizeDiv.appendChild(target);\r\n        ['nw', 'ne', 'sw', 'se'].forEach(function (pos) {\r\n            var div = document.createElement('DIV');\r\n            resizeDiv.appendChild(div);\r\n            div.style.position = 'absolute';\r\n            div.style.width = '7px';\r\n            div.style.height = '7px';\r\n            div.style.backgroundColor = _this.selectionBorderColor;\r\n            div.style.cursor = pos + '-resize';\r\n            if (_this.isNorth(pos)) {\r\n                div.style.top = '-3px';\r\n            }\r\n            else {\r\n                div.style.bottom = '-3px';\r\n            }\r\n            if (_this.isWest(pos)) {\r\n                div.style.left = '-3px';\r\n            }\r\n            else {\r\n                div.style.right = '-3px';\r\n            }\r\n            div.addEventListener('mousedown', _this.startResize);\r\n        });\r\n        var div = document.createElement('DIV');\r\n        resizeDiv.appendChild(div);\r\n        div.style.position = 'absolute';\r\n        div.style.top = '0';\r\n        div.style.left = '0';\r\n        div.style.right = '0';\r\n        div.style.bottom = '0';\r\n        div.style.border = 'solid 1px ' + this.selectionBorderColor;\r\n        div.style.pointerEvents = 'none';\r\n        return resizeDiv;\r\n    };\r\n    ImageResize.prototype.removeResizeDiv = function (resizeDiv) {\r\n        var _this = this;\r\n        if (this.editor && this.editor.contains(resizeDiv)) {\r\n            [resizeDiv.previousSibling, resizeDiv.nextSibling].forEach(function (comment) {\r\n                if (comment && comment.nodeType == 8 /* Comment */) {\r\n                    _this.editor.deleteNode(comment);\r\n                }\r\n            });\r\n            this.editor.deleteNode(resizeDiv);\r\n        }\r\n    };\r\n    ImageResize.prototype.extractHtml = function (html) {\r\n        return html.replace(EXTRACT_HTML_REGEX, function () {\r\n            var groups = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                groups[_i] = arguments[_i];\r\n            }\r\n            return groups[1].replace(/(\\s*contenteditable=\"false\"(\\/?>)|contenteditable=\"false\"\\s*)/im, '$2');\r\n        });\r\n    };\r\n    ImageResize.prototype.getSelectedImage = function () {\r\n        return this.resizeDiv ? this.resizeDiv.getElementsByTagName('IMG')[0] : null;\r\n    };\r\n    ImageResize.prototype.isNorth = function (direction) {\r\n        return direction && direction.substr(0, 1) == 'n';\r\n    };\r\n    ImageResize.prototype.isWest = function (direction) {\r\n        return direction && direction.substr(1, 1) == 'w';\r\n    };\r\n    return ImageResize;\r\n}());\r\nexports.default = ImageResize;\r\n/**\r\n * @deprecated Use ImageResize instead\r\n */\r\nvar ImageResizePlugin = /** @class */ (function (_super) {\r\n    __extends(ImageResizePlugin, _super);\r\n    /**\r\n     * @deprecated Use ImageResize instead\r\n     */\r\n    function ImageResizePlugin(minWidth, minHeight, selectionBorderColor, forcePreserveRatio) {\r\n        if (minWidth === void 0) { minWidth = 10; }\r\n        if (minHeight === void 0) { minHeight = 10; }\r\n        if (selectionBorderColor === void 0) { selectionBorderColor = '#DB626C'; }\r\n        if (forcePreserveRatio === void 0) { forcePreserveRatio = false; }\r\n        var _this = _super.call(this, minWidth, minHeight, selectionBorderColor, forcePreserveRatio) || this;\r\n        console.warn('ImageResizePlugin class is deprecated. Use ImageResize class instead');\r\n        return _this;\r\n    }\r\n    return ImageResizePlugin;\r\n}(ImageResize));\r\nexports.ImageResizePlugin = ImageResizePlugin;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ShowCursorPosition_1 = require(\"./plugins/ShowCursorPosition\");\r\nvar ShowFormatState_1 = require(\"./plugins/ShowFormatState\");\r\nvar roosterjs_editor_plugins_1 = require(\"roosterjs-editor-plugins\");\r\nvar roosterjs_plugin_image_resize_1 = require(\"roosterjs-plugin-image-resize\");\r\nvar roosterjs_editor_core_1 = require(\"roosterjs-editor-core\");\r\nvar currentEditor_1 = require(\"./currentEditor\");\r\nvar currentEditor_2 = require(\"./currentEditor\");\r\nvar updateSampleCode_1 = require(\"./updateSampleCode\");\r\nfunction initOptions() {\r\n    document.getElementById('showHtmlContent').addEventListener('click', function () {\r\n        window.alert(currentEditor_2.default().getContent(true));\r\n    });\r\n    document.getElementById('showTextContent').addEventListener('click', function () {\r\n        var text = currentEditor_2.default().getTextContent();\r\n        window.alert(text);\r\n    });\r\n    document.getElementById('takeSnapshot').addEventListener('click', function () {\r\n        var snapshot = currentEditor_2.default().getContent(false, true);\r\n        document.getElementById('snapshotTextarea').value = snapshot;\r\n    });\r\n    document.getElementById('resumeSnapshot').addEventListener('click', function () {\r\n        var snapshot = document.getElementById('snapshotTextarea').value;\r\n        var editor = currentEditor_2.default();\r\n        editor.focus();\r\n        editor.setContent(snapshot, false);\r\n    });\r\n    [\r\n        'hyperlinkCheckbox',\r\n        'pasteCheckbox',\r\n        'contentEditCheckbox',\r\n        'watermarkCheckbox',\r\n        'imageResizeCheckbox',\r\n        'tableResizeCheckbox',\r\n        'boldCheckbox',\r\n        'italicCheckbox',\r\n        'underlineCheckbox',\r\n        'textColorDefaultFormat',\r\n        'fontNameDefaultFormat',\r\n        'autoLinkCheckbox',\r\n        'indentWhenTabCheckbox',\r\n        'outdentWhenShiftTabCheckbox',\r\n        'outdentWhenBackspaceOnEmptyFirstLineCheckbox',\r\n        'outdentWhenEnterOnEmptyLineCheckbox',\r\n        'mergeInNewLineWhenBackspaceOnFirstCharCheckbox',\r\n        'unquoteWhenBackspaceOnEmptyFirstLineCheckbox',\r\n        'unquoteWhenEnterOnEmptyLineCheckbox',\r\n        'autoBulletCheckbox',\r\n        'tabInTableCheckbox',\r\n        'upDownInTableCheckbox',\r\n        'unlinkWhenBackspaceAfterLinkCheckbox',\r\n        'defaultShortcutCheckbox',\r\n        'smartOrderedListCheckbox',\r\n    ].forEach(function (id) {\r\n        document.getElementById(id).addEventListener('change', initEditorForOptions);\r\n    });\r\n}\r\nfunction initEditorForOptions() {\r\n    currentEditor_1.setCurrentEditor(null);\r\n    var plugins = [];\r\n    if (document.getElementById('hyperlinkCheckbox').checked) {\r\n        plugins.push(new roosterjs_editor_plugins_1.HyperLink());\r\n    }\r\n    if (document.getElementById('pasteCheckbox').checked) {\r\n        plugins.push(new roosterjs_editor_plugins_1.Paste());\r\n    }\r\n    var features = roosterjs_editor_plugins_1.getDefaultContentEditFeatures();\r\n    var featuresChanged = false;\r\n    if (document.getElementById('contentEditCheckbox').checked) {\r\n        features.autoLink = document.getElementById('autoLinkCheckbox').checked;\r\n        features.indentWhenTab = document.getElementById('indentWhenTabCheckbox').checked;\r\n        features.outdentWhenShiftTab = document.getElementById('outdentWhenShiftTabCheckbox').checked;\r\n        features.outdentWhenBackspaceOnEmptyFirstLine = document.getElementById('outdentWhenBackspaceOnEmptyFirstLineCheckbox').checked;\r\n        features.outdentWhenEnterOnEmptyLine = document.getElementById('outdentWhenEnterOnEmptyLineCheckbox').checked;\r\n        features.mergeInNewLineWhenBackspaceOnFirstChar = document.getElementById('mergeInNewLineWhenBackspaceOnFirstCharCheckbox').checked;\r\n        features.unquoteWhenBackspaceOnEmptyFirstLine = document.getElementById('unquoteWhenBackspaceOnEmptyFirstLineCheckbox').checked;\r\n        features.unquoteWhenEnterOnEmptyLine = document.getElementById('unquoteWhenEnterOnEmptyLineCheckbox').checked;\r\n        features.autoBullet = document.getElementById('autoBulletCheckbox').checked;\r\n        features.tabInTable = document.getElementById('tabInTableCheckbox').checked;\r\n        features.upDownInTable = document.getElementById('upDownInTableCheckbox').checked;\r\n        features.unlinkWhenBackspaceAfterLink = document.getElementById('unlinkWhenBackspaceAfterLinkCheckbox').checked;\r\n        features.defaultShortcut = document.getElementById('defaultShortcutCheckbox').checked;\r\n        features.smartOrderedList = document.getElementById('smartOrderedListCheckbox').checked;\r\n        plugins.push(new roosterjs_editor_plugins_1.ContentEdit(features));\r\n        var defaultFeatures = roosterjs_editor_plugins_1.getDefaultContentEditFeatures();\r\n        var keys = Object.keys(defaultFeatures);\r\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\r\n            var key = keys_1[_i];\r\n            if (key != 'smartOrderedListStyles' && features[key] != defaultFeatures[key]) {\r\n                featuresChanged = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (document.getElementById('watermarkCheckbox').checked) {\r\n        plugins.push(new roosterjs_editor_plugins_1.Watermark('Type content here...'));\r\n    }\r\n    if (document.getElementById('imageResizeCheckbox').checked) {\r\n        plugins.push(new roosterjs_plugin_image_resize_1.ImageResize());\r\n    }\r\n    if (document.getElementById('tableResizeCheckbox').checked) {\r\n        plugins.push(new roosterjs_editor_plugins_1.TableResize());\r\n    }\r\n    plugins.push(new ShowCursorPosition_1.default(document.getElementById('cursorPosition')));\r\n    plugins.push(new ShowFormatState_1.default(document.getElementById('formatState')));\r\n    var defaultFormat = {};\r\n    if (document.getElementById('boldCheckbox').checked) {\r\n        defaultFormat.bold = true;\r\n    }\r\n    if (document.getElementById('italicCheckbox').checked) {\r\n        defaultFormat.italic = true;\r\n    }\r\n    if (document.getElementById('underlineCheckbox').checked) {\r\n        defaultFormat.underline = true;\r\n    }\r\n    var textColor = document.getElementById('textColorDefaultFormat').value;\r\n    if (textColor) {\r\n        defaultFormat.textColor = textColor;\r\n    }\r\n    var fontFamily = document.getElementById('fontNameDefaultFormat').value;\r\n    if (fontFamily) {\r\n        defaultFormat.fontFamily = fontFamily;\r\n    }\r\n    var editorOptions = {\r\n        plugins: plugins,\r\n        defaultFormat: defaultFormat\r\n    };\r\n    currentEditor_1.setCurrentEditor(new roosterjs_editor_core_1.Editor(document.getElementById('editor'), editorOptions));\r\n    updateSampleCode_1.default(plugins, defaultFormat, featuresChanged && features);\r\n}\r\nexports.initEditorForOptions = initEditorForOptions;\r\nexports.default = initOptions;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// An editor plugin to show cursor position in demo page\r\nvar ShowCursorPosition = /** @class */ (function () {\r\n    function ShowCursorPosition(resultContainer) {\r\n        this.resultContainer = resultContainer;\r\n    }\r\n    ShowCursorPosition.prototype.initialize = function (editor) {\r\n        this.editor = editor;\r\n    };\r\n    ShowCursorPosition.prototype.dispose = function () {\r\n        this.editor = null;\r\n    };\r\n    ShowCursorPosition.prototype.onPluginEvent = function (event) {\r\n        if (event.eventType == 2 /* KeyUp */ || event.eventType == 5 /* MouseUp */ || event.eventType == 6 /* ContentChanged */) {\r\n            var rect = this.editor.getCursorRect();\r\n            if (rect) {\r\n                var result = 'top=' +\r\n                    rect.top +\r\n                    '; bottom=' +\r\n                    rect.bottom +\r\n                    '; left=' +\r\n                    rect.left +\r\n                    '; right=' +\r\n                    rect.right;\r\n                this.resultContainer.innerText = result;\r\n            }\r\n        }\r\n    };\r\n    return ShowCursorPosition;\r\n}());\r\nexports.default = ShowCursorPosition;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar roosterjs_editor_api_1 = require(\"roosterjs-editor-api\");\r\n// An editor plugin to show cursor position in demo page\r\nvar ShowFormatState = /** @class */ (function () {\r\n    function ShowFormatState(resultContainer) {\r\n        this.resultContainer = resultContainer;\r\n    }\r\n    ShowFormatState.prototype.initialize = function (editor) {\r\n        this.editor = editor;\r\n    };\r\n    ShowFormatState.prototype.dispose = function () {\r\n        this.editor = null;\r\n    };\r\n    ShowFormatState.prototype.onPluginEvent = function (event) {\r\n        if (event.eventType == 2 /* KeyUp */ || event.eventType == 5 /* MouseUp */ || event.eventType == 6 /* ContentChanged */) {\r\n            var formatState = roosterjs_editor_api_1.getFormatState(this.editor);\r\n            if (formatState) {\r\n                var result = '';\r\n                if (formatState.fontName) {\r\n                    result += ' <b>fontName:</b> ' + formatState.fontName;\r\n                }\r\n                if (formatState.fontSize) {\r\n                    result += ' <b>fontSize:</b> ' + formatState.fontSize;\r\n                }\r\n                if (formatState.backgroundColor) {\r\n                    result += ' <b>backgroundColor:</b> ' + formatState.backgroundColor;\r\n                }\r\n                if (formatState.textColor) {\r\n                    result += ' <b>textColor:</b> ' + formatState.textColor;\r\n                }\r\n                if (formatState.isBold) {\r\n                    result += ' <b>Bold</b> ';\r\n                }\r\n                if (formatState.isItalic) {\r\n                    result += ' <b>Italic</b> ';\r\n                }\r\n                if (formatState.isUnderline) {\r\n                    result += ' <b>Underline</b> ';\r\n                }\r\n                if (formatState.isBullet) {\r\n                    result += ' <b>Bullet</b> ';\r\n                }\r\n                if (formatState.isNumbering) {\r\n                    result += ' <b>Numbering</b> ';\r\n                }\r\n                if (formatState.isStrikeThrough) {\r\n                    result += ' <b>StrikeThrough</b> ';\r\n                }\r\n                if (formatState.isSubscript) {\r\n                    result += ' <b>Subscript</b> ';\r\n                }\r\n                if (formatState.isSuperscript) {\r\n                    result += ' <b>Superscript</b> ';\r\n                }\r\n                if (formatState.canUndo) {\r\n                    result += ' <b>CanUndo</b> ';\r\n                }\r\n                if (formatState.canRedo) {\r\n                    result += ' <b>CanReDo</b> ';\r\n                }\r\n                if (formatState.canUnlink) {\r\n                    result += ' <b>CanUnlink</b>';\r\n                }\r\n                if (formatState.canAddImageAltText) {\r\n                    result += ' <b>CanAddImageAltText</b>';\r\n                }\r\n                if (formatState.headerLevel > 0) {\r\n                    result += \" <b>Header\" + formatState.headerLevel + \"</b>\";\r\n                }\r\n                this.resultContainer.innerHTML = result;\r\n            }\r\n        }\r\n    };\r\n    return ShowFormatState;\r\n}());\r\nexports.default = ShowFormatState;\r\n"],"sourceRoot":""}